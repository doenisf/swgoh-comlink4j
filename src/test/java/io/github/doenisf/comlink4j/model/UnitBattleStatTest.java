/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.EquipmentSlot;
import io.github.doenisf.comlink4j.model.RelicTier;
import io.github.doenisf.comlink4j.model.Skill;
import io.github.doenisf.comlink4j.model.Stat;
import io.github.doenisf.comlink4j.model.StatDef;
import io.github.doenisf.comlink4j.model.StatMod;
import io.github.doenisf.comlink4j.model.ThreatLevel;
import io.github.doenisf.comlink4j.model.UnitTier;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UnitBattleStat
 */
public class UnitBattleStatTest {
    private final UnitBattleStat model = new UnitBattleStat();

    /**
     * Model tests for UnitBattleStat
     */
    @Test
    public void testUnitBattleStat() {
        // TODO: test UnitBattleStat
    }

    /**
     * Test the property 'actionCountMin'
     */
    @Test
    public void actionCountMinTest() {
        // TODO: test actionCountMin
    }

    /**
     * Test the property 'actionCountMax'
     */
    @Test
    public void actionCountMaxTest() {
        // TODO: test actionCountMax
    }

    /**
     * Test the property 'battleStat'
     */
    @Test
    public void battleStatTest() {
        // TODO: test battleStat
    }

    /**
     * Test the property 'level'
     */
    @Test
    public void levelTest() {
        // TODO: test level
    }

    /**
     * Test the property 'tier'
     */
    @Test
    public void tierTest() {
        // TODO: test tier
    }

    /**
     * Test the property 'equipment'
     */
    @Test
    public void equipmentTest() {
        // TODO: test equipment
    }

    /**
     * Test the property 'skill'
     */
    @Test
    public void skillTest() {
        // TODO: test skill
    }

    /**
     * Test the property 'statMod'
     */
    @Test
    public void statModTest() {
        // TODO: test statMod
    }

    /**
     * Test the property 'unitDefId'
     */
    @Test
    public void unitDefIdTest() {
        // TODO: test unitDefId
    }

    /**
     * Test the property 'unitId'
     */
    @Test
    public void unitIdTest() {
        // TODO: test unitId
    }

    /**
     * Test the property 'unitRelicTier'
     */
    @Test
    public void unitRelicTierTest() {
        // TODO: test unitRelicTier
    }

    /**
     * Test the property 'purchasedAbilityId'
     */
    @Test
    public void purchasedAbilityIdTest() {
        // TODO: test purchasedAbilityId
    }

    /**
     * Test the property 'overrideAllStatsMultiplier'
     */
    @Test
    public void overrideAllStatsMultiplierTest() {
        // TODO: test overrideAllStatsMultiplier
    }

    /**
     * Test the property 'overrideStatMultiplier'
     */
    @Test
    public void overrideStatMultiplierTest() {
        // TODO: test overrideStatMultiplier
    }

    /**
     * Test the property 'skipStatsOverwrite'
     */
    @Test
    public void skipStatsOverwriteTest() {
        // TODO: test skipStatsOverwrite
    }

    /**
     * Test the property 'enableLeaderAbility'
     */
    @Test
    public void enableLeaderAbilityTest() {
        // TODO: test enableLeaderAbility
    }

    /**
     * Test the property 'threatLevelOverride'
     */
    @Test
    public void threatLevelOverrideTest() {
        // TODO: test threatLevelOverride
    }

    /**
     * Test the property 'overrideAllStatsTable'
     */
    @Test
    public void overrideAllStatsTableTest() {
        // TODO: test overrideAllStatsTable
    }

}
