/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.BattleUnitState;
import io.github.doenisf.comlink4j.model.CachedRaidRewards;
import io.github.doenisf.comlink4j.model.CampaignElementIdentifier;
import io.github.doenisf.comlink4j.model.GuildRaidMember;
import io.github.doenisf.comlink4j.model.RaidMember;
import io.github.doenisf.comlink4j.model.RaidState;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GuildRaidStatus
 */
public class GuildRaidStatusTest {
    private final GuildRaidStatus model = new GuildRaidStatus();

    /**
     * Model tests for GuildRaidStatus
     */
    @Test
    public void testGuildRaidStatus() {
        // TODO: test GuildRaidStatus
    }

    /**
     * Test the property 'raidId'
     */
    @Test
    public void raidIdTest() {
        // TODO: test raidId
    }

    /**
     * Test the property 'expireTime'
     */
    @Test
    public void expireTimeTest() {
        // TODO: test expireTime
    }

    /**
     * Test the property 'raidProgress'
     */
    @Test
    public void raidProgressTest() {
        // TODO: test raidProgress
    }

    /**
     * Test the property 'raidMemberOld'
     */
    @Test
    public void raidMemberOldTest() {
        // TODO: test raidMemberOld
    }

    /**
     * Test the property 'opponentUnitState'
     */
    @Test
    public void opponentUnitStateTest() {
        // TODO: test opponentUnitState
    }

    /**
     * Test the property 'playerUnitState'
     */
    @Test
    public void playerUnitStateTest() {
        // TODO: test playerUnitState
    }

    /**
     * Test the property 'identifier'
     */
    @Test
    public void identifierTest() {
        // TODO: test identifier
    }

    /**
     * Test the property 'instanceId'
     */
    @Test
    public void instanceIdTest() {
        // TODO: test instanceId
    }

    /**
     * Test the property 'rosterRefreshTime'
     */
    @Test
    public void rosterRefreshTimeTest() {
        // TODO: test rosterRefreshTime
    }

    /**
     * Test the property 'hasPlayerParticipated'
     */
    @Test
    public void hasPlayerParticipatedTest() {
        // TODO: test hasPlayerParticipated
    }

    /**
     * Test the property 'raidState'
     */
    @Test
    public void raidStateTest() {
        // TODO: test raidState
    }

    /**
     * Test the property 'tallyEndTime'
     */
    @Test
    public void tallyEndTimeTest() {
        // TODO: test tallyEndTime
    }

    /**
     * Test the property 'eligibleForRewards'
     */
    @Test
    public void eligibleForRewardsTest() {
        // TODO: test eligibleForRewards
    }

    /**
     * Test the property 'activateTimeMs'
     */
    @Test
    public void activateTimeMsTest() {
        // TODO: test activateTimeMs
    }

    /**
     * Test the property 'forbidLateEntry'
     */
    @Test
    public void forbidLateEntryTest() {
        // TODO: test forbidLateEntry
    }

    /**
     * Test the property 'joinPeriodEndTimeMs'
     */
    @Test
    public void joinPeriodEndTimeMsTest() {
        // TODO: test joinPeriodEndTimeMs
    }

    /**
     * Test the property 'raidMember'
     */
    @Test
    public void raidMemberTest() {
        // TODO: test raidMember
    }

    /**
     * Test the property 'simEnabled'
     */
    @Test
    public void simEnabledTest() {
        // TODO: test simEnabled
    }

    /**
     * Test the property 'encounterId'
     */
    @Test
    public void encounterIdTest() {
        // TODO: test encounterId
    }

    /**
     * Test the property 'lastEncounterIdPlayerParticipated'
     */
    @Test
    public void lastEncounterIdPlayerParticipatedTest() {
        // TODO: test lastEncounterIdPlayerParticipated
    }

    /**
     * Test the property 'currentEncounterPointsScored'
     */
    @Test
    public void currentEncounterPointsScoredTest() {
        // TODO: test currentEncounterPointsScored
    }

    /**
     * Test the property 'guildRewardScore'
     */
    @Test
    public void guildRewardScoreTest() {
        // TODO: test guildRewardScore
    }

    /**
     * Test the property 'ineligibleMemberId'
     */
    @Test
    public void ineligibleMemberIdTest() {
        // TODO: test ineligibleMemberId
    }

    /**
     * Test the property 'claimedImmediateRewards'
     */
    @Test
    public void claimedImmediateRewardsTest() {
        // TODO: test claimedImmediateRewards
    }

    /**
     * Test the property 'cachedRewards'
     */
    @Test
    public void cachedRewardsTest() {
        // TODO: test cachedRewards
    }

}
