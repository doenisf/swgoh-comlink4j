/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.DynamicDescription;
import io.github.doenisf.comlink4j.model.ForceAlignment;
import io.github.doenisf.comlink4j.model.GuildMemberLevel;
import io.github.doenisf.comlink4j.model.MissionGrantedAbility;
import io.github.doenisf.comlink4j.model.RankRewardPreview;
import io.github.doenisf.comlink4j.model.TerritoryBattleConflictZoneDefinition;
import io.github.doenisf.comlink4j.model.TerritoryBonusZoneDefinition;
import io.github.doenisf.comlink4j.model.TerritoryCovertZoneDefinition;
import io.github.doenisf.comlink4j.model.TerritoryLocalNote;
import io.github.doenisf.comlink4j.model.TerritoryMapStatCategory;
import io.github.doenisf.comlink4j.model.TerritoryReconZoneDefinition;
import io.github.doenisf.comlink4j.model.TerritoryStrikeZoneDefinition;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TerritoryBattleDefinition
 */
public class TerritoryBattleDefinitionTest {
    private final TerritoryBattleDefinition model = new TerritoryBattleDefinition();

    /**
     * Model tests for TerritoryBattleDefinition
     */
    @Test
    public void testTerritoryBattleDefinition() {
        // TODO: test TerritoryBattleDefinition
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'nameKey'
     */
    @Test
    public void nameKeyTest() {
        // TODO: test nameKey
    }

    /**
     * Test the property 'descriptionKey'
     */
    @Test
    public void descriptionKeyTest() {
        // TODO: test descriptionKey
    }

    /**
     * Test the property 'prefabName'
     */
    @Test
    public void prefabNameTest() {
        // TODO: test prefabName
    }

    /**
     * Test the property 'roundDuration'
     */
    @Test
    public void roundDurationTest() {
        // TODO: test roundDuration
    }

    /**
     * Test the property 'roundCount'
     */
    @Test
    public void roundCountTest() {
        // TODO: test roundCount
    }

    /**
     * Test the property 'conflictZoneDefinition'
     */
    @Test
    public void conflictZoneDefinitionTest() {
        // TODO: test conflictZoneDefinition
    }

    /**
     * Test the property 'strikeZoneDefinition'
     */
    @Test
    public void strikeZoneDefinitionTest() {
        // TODO: test strikeZoneDefinition
    }

    /**
     * Test the property 'reconZoneDefinition'
     */
    @Test
    public void reconZoneDefinitionTest() {
        // TODO: test reconZoneDefinition
    }

    /**
     * Test the property 'iconPrefab'
     */
    @Test
    public void iconPrefabTest() {
        // TODO: test iconPrefab
    }

    /**
     * Test the property 'rankRewardPreview'
     */
    @Test
    public void rankRewardPreviewTest() {
        // TODO: test rankRewardPreview
    }

    /**
     * Test the property 'detailImage'
     */
    @Test
    public void detailImageTest() {
        // TODO: test detailImage
    }

    /**
     * Test the property 'dynamicDescription'
     */
    @Test
    public void dynamicDescriptionTest() {
        // TODO: test dynamicDescription
    }

    /**
     * Test the property 'covertZoneDefinition'
     */
    @Test
    public void covertZoneDefinitionTest() {
        // TODO: test covertZoneDefinition
    }

    /**
     * Test the property 'statCategory'
     */
    @Test
    public void statCategoryTest() {
        // TODO: test statCategory
    }

    /**
     * Test the property 'territoryCategory'
     */
    @Test
    public void territoryCategoryTest() {
        // TODO: test territoryCategory
    }

    /**
     * Test the property 'roundTallyDuration'
     */
    @Test
    public void roundTallyDurationTest() {
        // TODO: test roundTallyDuration
    }

    /**
     * Test the property 'grantedAbilities'
     */
    @Test
    public void grantedAbilitiesTest() {
        // TODO: test grantedAbilities
    }

    /**
     * Test the property 'localNotifications'
     */
    @Test
    public void localNotificationsTest() {
        // TODO: test localNotifications
    }

    /**
     * Test the property 'minMemberLevelForCommandingGuild'
     */
    @Test
    public void minMemberLevelForCommandingGuildTest() {
        // TODO: test minMemberLevelForCommandingGuild
    }

    /**
     * Test the property 'commandNotificationCooldownDuration'
     */
    @Test
    public void commandNotificationCooldownDurationTest() {
        // TODO: test commandNotificationCooldownDuration
    }

    /**
     * Test the property 'minimapPrefab'
     */
    @Test
    public void minimapPrefabTest() {
        // TODO: test minimapPrefab
    }

    /**
     * Test the property 'searchImage'
     */
    @Test
    public void searchImageTest() {
        // TODO: test searchImage
    }

    /**
     * Test the property 'infoImage'
     */
    @Test
    public void infoImageTest() {
        // TODO: test infoImage
    }

    /**
     * Test the property 'forceAlignment'
     */
    @Test
    public void forceAlignmentTest() {
        // TODO: test forceAlignment
    }

    /**
     * Test the property 'environmentNameKey'
     */
    @Test
    public void environmentNameKeyTest() {
        // TODO: test environmentNameKey
    }

    /**
     * Test the property 'environmentPrefab'
     */
    @Test
    public void environmentPrefabTest() {
        // TODO: test environmentPrefab
    }

    /**
     * Test the property 'territoryBattleVersion3'
     */
    @Test
    public void territoryBattleVersion3Test() {
        // TODO: test territoryBattleVersion3
    }

    /**
     * Test the property 'bonusZoneDefinition'
     */
    @Test
    public void bonusZoneDefinitionTest() {
        // TODO: test bonusZoneDefinition
    }

}
