/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.BucketItem;
import io.github.doenisf.comlink4j.model.CampaignElementIdentifier;
import io.github.doenisf.comlink4j.model.EntryCategoryAllowed;
import io.github.doenisf.comlink4j.model.RankRewardPreview;
import io.github.doenisf.comlink4j.model.SystemModifier;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GameEventInstance
 */
public class GameEventInstanceTest {
    private final GameEventInstance model = new GameEventInstance();

    /**
     * Model tests for GameEventInstance
     */
    @Test
    public void testGameEventInstance() {
        // TODO: test GameEventInstance
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'displayStartTime'
     */
    @Test
    public void displayStartTimeTest() {
        // TODO: test displayStartTime
    }

    /**
     * Test the property 'displayEndTime'
     */
    @Test
    public void displayEndTimeTest() {
        // TODO: test displayEndTime
    }

    /**
     * Test the property 'timeLimited'
     */
    @Test
    public void timeLimitedTest() {
        // TODO: test timeLimited
    }

    /**
     * Test the property 'campaignElementIdentifier'
     */
    @Test
    public void campaignElementIdentifierTest() {
        // TODO: test campaignElementIdentifier
    }

    /**
     * Test the property 'rewardPreview'
     */
    @Test
    public void rewardPreviewTest() {
        // TODO: test rewardPreview
    }

    /**
     * Test the property 'rankRewardPreview'
     */
    @Test
    public void rankRewardPreviewTest() {
        // TODO: test rankRewardPreview
    }

    /**
     * Test the property 'entryCategoryAllowed'
     */
    @Test
    public void entryCategoryAllowedTest() {
        // TODO: test entryCategoryAllowed
    }

    /**
     * Test the property 'defensiveSquadSize'
     */
    @Test
    public void defensiveSquadSizeTest() {
        // TODO: test defensiveSquadSize
    }

    /**
     * Test the property 'unitDailyUsageCapKey'
     */
    @Test
    public void unitDailyUsageCapKeyTest() {
        // TODO: test unitDailyUsageCapKey
    }

    /**
     * Test the property 'rosterRefreshTime'
     */
    @Test
    public void rosterRefreshTimeTest() {
        // TODO: test rosterRefreshTime
    }

    /**
     * Test the property 'joined'
     */
    @Test
    public void joinedTest() {
        // TODO: test joined
    }

    /**
     * Test the property 'summaryKey'
     */
    @Test
    public void summaryKeyTest() {
        // TODO: test summaryKey
    }

    /**
     * Test the property 'rewardTime'
     */
    @Test
    public void rewardTimeTest() {
        // TODO: test rewardTime
    }

    /**
     * Test the property 'defensiveSquadSaveTimeLimit'
     */
    @Test
    public void defensiveSquadSaveTimeLimitTest() {
        // TODO: test defensiveSquadSaveTimeLimit
    }

    /**
     * Test the property 'systemModifier'
     */
    @Test
    public void systemModifierTest() {
        // TODO: test systemModifier
    }

    /**
     * Test the property 'supportsPushNotifications'
     */
    @Test
    public void supportsPushNotificationsTest() {
        // TODO: test supportsPushNotifications
    }

    /**
     * Test the property 'linkedEventId'
     */
    @Test
    public void linkedEventIdTest() {
        // TODO: test linkedEventId
    }

}
