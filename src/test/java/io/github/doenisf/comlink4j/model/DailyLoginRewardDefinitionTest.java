/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.BucketItem;
import io.github.doenisf.comlink4j.model.CalendarCatchUp;
import io.github.doenisf.comlink4j.model.CalendarCompletionBehavior;
import io.github.doenisf.comlink4j.model.CalendarExpiry;
import io.github.doenisf.comlink4j.model.CalendarMissedConsequence;
import io.github.doenisf.comlink4j.model.CalendarVisuals;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DailyLoginRewardDefinition
 */
public class DailyLoginRewardDefinitionTest {
    private final DailyLoginRewardDefinition model = new DailyLoginRewardDefinition();

    /**
     * Model tests for DailyLoginRewardDefinition
     */
    @Test
    public void testDailyLoginRewardDefinition() {
        // TODO: test DailyLoginRewardDefinition
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'defaultBucketItem'
     */
    @Test
    public void defaultBucketItemTest() {
        // TODO: test defaultBucketItem
    }

    /**
     * Test the property 'reward'
     */
    @Test
    public void rewardTest() {
        // TODO: test reward
    }

    /**
     * Test the property 'monthly'
     */
    @Test
    public void monthlyTest() {
        // TODO: test monthly
    }

    /**
     * Test the property 'missedConsequence'
     */
    @Test
    public void missedConsequenceTest() {
        // TODO: test missedConsequence
    }

    /**
     * Test the property 'completionBehavior'
     */
    @Test
    public void completionBehaviorTest() {
        // TODO: test completionBehavior
    }

    /**
     * Test the property 'icon'
     */
    @Test
    public void iconTest() {
        // TODO: test icon
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'delayFirstReward'
     */
    @Test
    public void delayFirstRewardTest() {
        // TODO: test delayFirstReward
    }

    /**
     * Test the property 'catchUp'
     */
    @Test
    public void catchUpTest() {
        // TODO: test catchUp
    }

    /**
     * Test the property 'expiry'
     */
    @Test
    public void expiryTest() {
        // TODO: test expiry
    }

    /**
     * Test the property 'visualOverride'
     */
    @Test
    public void visualOverrideTest() {
        // TODO: test visualOverride
    }

    /**
     * Test the property 'catchupCost'
     */
    @Test
    public void catchupCostTest() {
        // TODO: test catchupCost
    }

}
