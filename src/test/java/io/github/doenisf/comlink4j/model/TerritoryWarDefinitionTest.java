/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.DynamicDescription;
import io.github.doenisf.comlink4j.model.Environment;
import io.github.doenisf.comlink4j.model.GuildMemberLevel;
import io.github.doenisf.comlink4j.model.MissionGrantedAbility;
import io.github.doenisf.comlink4j.model.RankRewardPreview;
import io.github.doenisf.comlink4j.model.TerritoryLocalNote;
import io.github.doenisf.comlink4j.model.TerritoryMapStatCategory;
import io.github.doenisf.comlink4j.model.TerritoryReconZoneDefinition;
import io.github.doenisf.comlink4j.model.TerritoryRewardStructure;
import io.github.doenisf.comlink4j.model.TerritoryWarConflictZoneDefinition;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TerritoryWarDefinition
 */
public class TerritoryWarDefinitionTest {
    private final TerritoryWarDefinition model = new TerritoryWarDefinition();

    /**
     * Model tests for TerritoryWarDefinition
     */
    @Test
    public void testTerritoryWarDefinition() {
        // TODO: test TerritoryWarDefinition
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'nameKey'
     */
    @Test
    public void nameKeyTest() {
        // TODO: test nameKey
    }

    /**
     * Test the property 'descriptionKey'
     */
    @Test
    public void descriptionKeyTest() {
        // TODO: test descriptionKey
    }

    /**
     * Test the property 'prefabName'
     */
    @Test
    public void prefabNameTest() {
        // TODO: test prefabName
    }

    /**
     * Test the property 'roundCount'
     */
    @Test
    public void roundCountTest() {
        // TODO: test roundCount
    }

    /**
     * Test the property 'iconPrefab'
     */
    @Test
    public void iconPrefabTest() {
        // TODO: test iconPrefab
    }

    /**
     * Test the property 'detailImage'
     */
    @Test
    public void detailImageTest() {
        // TODO: test detailImage
    }

    /**
     * Test the property 'roundTallyDuration'
     */
    @Test
    public void roundTallyDurationTest() {
        // TODO: test roundTallyDuration
    }

    /**
     * Test the property 'dynamicDescription'
     */
    @Test
    public void dynamicDescriptionTest() {
        // TODO: test dynamicDescription
    }

    /**
     * Test the property 'firstRewardPreview'
     */
    @Test
    public void firstRewardPreviewTest() {
        // TODO: test firstRewardPreview
    }

    /**
     * Test the property 'secondRewardPreview'
     */
    @Test
    public void secondRewardPreviewTest() {
        // TODO: test secondRewardPreview
    }

    /**
     * Test the property 'matchmakingDuration'
     */
    @Test
    public void matchmakingDurationTest() {
        // TODO: test matchmakingDuration
    }

    /**
     * Test the property 'setupDuration'
     */
    @Test
    public void setupDurationTest() {
        // TODO: test setupDuration
    }

    /**
     * Test the property 'grantedAbilities'
     */
    @Test
    public void grantedAbilitiesTest() {
        // TODO: test grantedAbilities
    }

    /**
     * Test the property 'joinEventActionCapKey'
     */
    @Test
    public void joinEventActionCapKeyTest() {
        // TODO: test joinEventActionCapKey
    }

    /**
     * Test the property 'minParticipants'
     */
    @Test
    public void minParticipantsTest() {
        // TODO: test minParticipants
    }

    /**
     * Test the property 'terrainPrefabName'
     */
    @Test
    public void terrainPrefabNameTest() {
        // TODO: test terrainPrefabName
    }

    /**
     * Test the property 'maxParticipants'
     */
    @Test
    public void maxParticipantsTest() {
        // TODO: test maxParticipants
    }

    /**
     * Test the property 'minScoreRequirement'
     */
    @Test
    public void minScoreRequirementTest() {
        // TODO: test minScoreRequirement
    }

    /**
     * Test the property 'warConflictZoneDefinition'
     */
    @Test
    public void warConflictZoneDefinitionTest() {
        // TODO: test warConflictZoneDefinition
    }

    /**
     * Test the property 'reconZoneDefinition'
     */
    @Test
    public void reconZoneDefinitionTest() {
        // TODO: test reconZoneDefinition
    }

    /**
     * Test the property 'statCategory'
     */
    @Test
    public void statCategoryTest() {
        // TODO: test statCategory
    }

    /**
     * Test the property 'rewardStructure'
     */
    @Test
    public void rewardStructureTest() {
        // TODO: test rewardStructure
    }

    /**
     * Test the property 'uniqueJoinId'
     */
    @Test
    public void uniqueJoinIdTest() {
        // TODO: test uniqueJoinId
    }

    /**
     * Test the property 'hideLeaderboard'
     */
    @Test
    public void hideLeaderboardTest() {
        // TODO: test hideLeaderboard
    }

    /**
     * Test the property 'localNotifications'
     */
    @Test
    public void localNotificationsTest() {
        // TODO: test localNotifications
    }

    /**
     * Test the property 'minMemberLevelForReportingOpponent'
     */
    @Test
    public void minMemberLevelForReportingOpponentTest() {
        // TODO: test minMemberLevelForReportingOpponent
    }

    /**
     * Test the property 'minMemberLevelForCommandingGuild'
     */
    @Test
    public void minMemberLevelForCommandingGuildTest() {
        // TODO: test minMemberLevelForCommandingGuild
    }

    /**
     * Test the property 'commandNotificationCooldownDuration'
     */
    @Test
    public void commandNotificationCooldownDurationTest() {
        // TODO: test commandNotificationCooldownDuration
    }

    /**
     * Test the property 'mapTypeNameKey'
     */
    @Test
    public void mapTypeNameKeyTest() {
        // TODO: test mapTypeNameKey
    }

    /**
     * Test the property 'showTimerOnEvent'
     */
    @Test
    public void showTimerOnEventTest() {
        // TODO: test showTimerOnEvent
    }

    /**
     * Test the property 'restrictSetupDuringAttackPhase'
     */
    @Test
    public void restrictSetupDuringAttackPhaseTest() {
        // TODO: test restrictSetupDuringAttackPhase
    }

    /**
     * Test the property 'defaultCharacterBattleEnvironments'
     */
    @Test
    public void defaultCharacterBattleEnvironmentsTest() {
        // TODO: test defaultCharacterBattleEnvironments
    }

    /**
     * Test the property 'defaultShipBattleEnvironments'
     */
    @Test
    public void defaultShipBattleEnvironmentsTest() {
        // TODO: test defaultShipBattleEnvironments
    }

    /**
     * Test the property 'minimapPrefab'
     */
    @Test
    public void minimapPrefabTest() {
        // TODO: test minimapPrefab
    }

    /**
     * Test the property 'defensiveCharacterDeployWarningThreshold'
     */
    @Test
    public void defensiveCharacterDeployWarningThresholdTest() {
        // TODO: test defensiveCharacterDeployWarningThreshold
    }

    /**
     * Test the property 'defensiveShipDeployWarningThreshold'
     */
    @Test
    public void defensiveShipDeployWarningThresholdTest() {
        // TODO: test defensiveShipDeployWarningThreshold
    }

    /**
     * Test the property 'leaderboardKey'
     */
    @Test
    public void leaderboardKeyTest() {
        // TODO: test leaderboardKey
    }

    /**
     * Test the property 'minPlayerScoreRequirement'
     */
    @Test
    public void minPlayerScoreRequirementTest() {
        // TODO: test minPlayerScoreRequirement
    }

}
