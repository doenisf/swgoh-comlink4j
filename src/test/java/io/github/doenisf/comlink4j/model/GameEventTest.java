/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.CampaignElementIdentifier;
import io.github.doenisf.comlink4j.model.CombatType;
import io.github.doenisf.comlink4j.model.ContextualMessageGroup;
import io.github.doenisf.comlink4j.model.Environment;
import io.github.doenisf.comlink4j.model.Feat;
import io.github.doenisf.comlink4j.model.GameEventDetailsType;
import io.github.doenisf.comlink4j.model.GameEventInstance;
import io.github.doenisf.comlink4j.model.GameEventStatus;
import io.github.doenisf.comlink4j.model.GameEventType;
import io.github.doenisf.comlink4j.model.GameEventUILocation;
import io.github.doenisf.comlink4j.model.RankRewardPreview;
import io.github.doenisf.comlink4j.model.SquadType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GameEvent
 */
public class GameEventTest {
    private final GameEvent model = new GameEvent();

    /**
     * Model tests for GameEvent
     */
    @Test
    public void testGameEvent() {
        // TODO: test GameEvent
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'priority'
     */
    @Test
    public void priorityTest() {
        // TODO: test priority
    }

    /**
     * Test the property 'nameKey'
     */
    @Test
    public void nameKeyTest() {
        // TODO: test nameKey
    }

    /**
     * Test the property 'summaryKey'
     */
    @Test
    public void summaryKeyTest() {
        // TODO: test summaryKey
    }

    /**
     * Test the property 'descKey'
     */
    @Test
    public void descKeyTest() {
        // TODO: test descKey
    }

    /**
     * Test the property 'image'
     */
    @Test
    public void imageTest() {
        // TODO: test image
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'instance'
     */
    @Test
    public void instanceTest() {
        // TODO: test instance
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'campaignElementIdentifier'
     */
    @Test
    public void campaignElementIdentifierTest() {
        // TODO: test campaignElementIdentifier
    }

    /**
     * Test the property 'squadType'
     */
    @Test
    public void squadTypeTest() {
        // TODO: test squadType
    }

    /**
     * Test the property 'previewKey'
     */
    @Test
    public void previewKeyTest() {
        // TODO: test previewKey
    }

    /**
     * Test the property 'reviewKey'
     */
    @Test
    public void reviewKeyTest() {
        // TODO: test reviewKey
    }

    /**
     * Test the property 'uiLocation'
     */
    @Test
    public void uiLocationTest() {
        // TODO: test uiLocation
    }

    /**
     * Test the property 'icon'
     */
    @Test
    public void iconTest() {
        // TODO: test icon
    }

    /**
     * Test the property 'defensiveSquadUsageCostEnabled'
     */
    @Test
    public void defensiveSquadUsageCostEnabledTest() {
        // TODO: test defensiveSquadUsageCostEnabled
    }

    /**
     * Test the property 'encounterMessage'
     */
    @Test
    public void encounterMessageTest() {
        // TODO: test encounterMessage
    }

    /**
     * Test the property 'environment'
     */
    @Test
    public void environmentTest() {
        // TODO: test environment
    }

    /**
     * Test the property 'descKeyUnitCriteriaMet'
     */
    @Test
    public void descKeyUnitCriteriaMetTest() {
        // TODO: test descKeyUnitCriteriaMet
    }

    /**
     * Test the property 'defensiveSquadType'
     */
    @Test
    public void defensiveSquadTypeTest() {
        // TODO: test defensiveSquadType
    }

    /**
     * Test the property 'combatType'
     */
    @Test
    public void combatTypeTest() {
        // TODO: test combatType
    }

    /**
     * Test the property 'imageEffect'
     */
    @Test
    public void imageEffectTest() {
        // TODO: test imageEffect
    }

    /**
     * Test the property 'unlockRequirementLocalizationKey'
     */
    @Test
    public void unlockRequirementLocalizationKeyTest() {
        // TODO: test unlockRequirementLocalizationKey
    }

    /**
     * Test the property 'territoryMapId'
     */
    @Test
    public void territoryMapIdTest() {
        // TODO: test territoryMapId
    }

    /**
     * Test the property 'pushNotificationTitleKey'
     */
    @Test
    public void pushNotificationTitleKeyTest() {
        // TODO: test pushNotificationTitleKey
    }

    /**
     * Test the property 'pushNotificationDescKey'
     */
    @Test
    public void pushNotificationDescKeyTest() {
        // TODO: test pushNotificationDescKey
    }

    /**
     * Test the property 'seasonDefId'
     */
    @Test
    public void seasonDefIdTest() {
        // TODO: test seasonDefId
    }

    /**
     * Test the property 'unlockRequirementId'
     */
    @Test
    public void unlockRequirementIdTest() {
        // TODO: test unlockRequirementId
    }

    /**
     * Test the property 'feat'
     */
    @Test
    public void featTest() {
        // TODO: test feat
    }

    /**
     * Test the property 'linkedStoreItemId'
     */
    @Test
    public void linkedStoreItemIdTest() {
        // TODO: test linkedStoreItemId
    }

    /**
     * Test the property 'factionImage'
     */
    @Test
    public void factionImageTest() {
        // TODO: test factionImage
    }

    /**
     * Test the property 'detailsType'
     */
    @Test
    public void detailsTypeTest() {
        // TODO: test detailsType
    }

    /**
     * Test the property 'conquestId'
     */
    @Test
    public void conquestIdTest() {
        // TODO: test conquestId
    }

    /**
     * Test the property 'rankRewardPreview'
     */
    @Test
    public void rankRewardPreviewTest() {
        // TODO: test rankRewardPreview
    }

    /**
     * Test the property 'iconJoin'
     */
    @Test
    public void iconJoinTest() {
        // TODO: test iconJoin
    }

    /**
     * Test the property 'iconSetDefense'
     */
    @Test
    public void iconSetDefenseTest() {
        // TODO: test iconSetDefense
    }

    /**
     * Test the property 'iconAttack'
     */
    @Test
    public void iconAttackTest() {
        // TODO: test iconAttack
    }

}
