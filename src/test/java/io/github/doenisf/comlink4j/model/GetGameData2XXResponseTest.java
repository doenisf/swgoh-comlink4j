/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.Ability;
import io.github.doenisf.comlink4j.model.AbilityDecisionTree;
import io.github.doenisf.comlink4j.model.ArtifactDefinition;
import io.github.doenisf.comlink4j.model.ArtifactTierDefinition;
import io.github.doenisf.comlink4j.model.BattleEnvironment;
import io.github.doenisf.comlink4j.model.CalendarCategoryDefinition;
import io.github.doenisf.comlink4j.model.Campaign;
import io.github.doenisf.comlink4j.model.Category;
import io.github.doenisf.comlink4j.model.Challenge;
import io.github.doenisf.comlink4j.model.ChallengeStyle;
import io.github.doenisf.comlink4j.model.ConquestDefinition;
import io.github.doenisf.comlink4j.model.ConquestMission;
import io.github.doenisf.comlink4j.model.ConsumableDefinition;
import io.github.doenisf.comlink4j.model.ConsumableTierDefinition;
import io.github.doenisf.comlink4j.model.ConsumableType;
import io.github.doenisf.comlink4j.model.ConversionSet;
import io.github.doenisf.comlink4j.model.Cooldown;
import io.github.doenisf.comlink4j.model.CraftingMaterialDef;
import io.github.doenisf.comlink4j.model.DailyActionCap;
import io.github.doenisf.comlink4j.model.DailyLoginRewardDefinition;
import io.github.doenisf.comlink4j.model.DatacronAffixTemplateSet;
import io.github.doenisf.comlink4j.model.DatacronHelpEntry;
import io.github.doenisf.comlink4j.model.DatacronSet;
import io.github.doenisf.comlink4j.model.DatacronTemplate;
import io.github.doenisf.comlink4j.model.Effect;
import io.github.doenisf.comlink4j.model.EffectTarget;
import io.github.doenisf.comlink4j.model.EnergyRewardDefinition;
import io.github.doenisf.comlink4j.model.EnvironmentCollection;
import io.github.doenisf.comlink4j.model.EquipmentDef;
import io.github.doenisf.comlink4j.model.EventBonus;
import io.github.doenisf.comlink4j.model.EventSampling;
import io.github.doenisf.comlink4j.model.GalacticBundle;
import io.github.doenisf.comlink4j.model.GuildBannerDef;
import io.github.doenisf.comlink4j.model.GuildExchangeItem;
import io.github.doenisf.comlink4j.model.GuildRaid;
import io.github.doenisf.comlink4j.model.GuildRaidConfig;
import io.github.doenisf.comlink4j.model.GuildRaidGlobalConfig;
import io.github.doenisf.comlink4j.model.HelpEntry;
import io.github.doenisf.comlink4j.model.LinkedStoreItem;
import io.github.doenisf.comlink4j.model.ModRecommendation;
import io.github.doenisf.comlink4j.model.MysteryBoxDefinition;
import io.github.doenisf.comlink4j.model.MysteryStatModDefinition;
import io.github.doenisf.comlink4j.model.PersistentVfx;
import io.github.doenisf.comlink4j.model.PlayerPortraitDefinition;
import io.github.doenisf.comlink4j.model.PlayerTitleDefinition;
import io.github.doenisf.comlink4j.model.PowerUpBundle;
import io.github.doenisf.comlink4j.model.Recipe;
import io.github.doenisf.comlink4j.model.RecommendedSquad;
import io.github.doenisf.comlink4j.model.RelicTierDefinition;
import io.github.doenisf.comlink4j.model.Requirement;
import io.github.doenisf.comlink4j.model.SaveSquadConfig;
import io.github.doenisf.comlink4j.model.SeasonDefinition;
import io.github.doenisf.comlink4j.model.SeasonDivisionDefinition;
import io.github.doenisf.comlink4j.model.SeasonLeagueDefinition;
import io.github.doenisf.comlink4j.model.SeasonRewardTable;
import io.github.doenisf.comlink4j.model.SkillDefinition;
import io.github.doenisf.comlink4j.model.SocialStatus;
import io.github.doenisf.comlink4j.model.StarterGuildDef;
import io.github.doenisf.comlink4j.model.StatModDefinition;
import io.github.doenisf.comlink4j.model.StatModSetDefinition;
import io.github.doenisf.comlink4j.model.StatProgression;
import io.github.doenisf.comlink4j.model.Table;
import io.github.doenisf.comlink4j.model.TargetingSet;
import io.github.doenisf.comlink4j.model.TerritoryBattleDefinition;
import io.github.doenisf.comlink4j.model.TerritoryTournamentDailyRewardTable;
import io.github.doenisf.comlink4j.model.TerritoryTournamentDefinition;
import io.github.doenisf.comlink4j.model.TerritoryTournamentDivisionDefinition;
import io.github.doenisf.comlink4j.model.TerritoryTournamentLeagueDefinition;
import io.github.doenisf.comlink4j.model.TerritoryWarDefinition;
import io.github.doenisf.comlink4j.model.TimeZoneChangeConfig;
import io.github.doenisf.comlink4j.model.UnitDef;
import io.github.doenisf.comlink4j.model.UnitDefPreview;
import io.github.doenisf.comlink4j.model.UnitGuideDefinition;
import io.github.doenisf.comlink4j.model.UnitGuideLayout;
import io.github.doenisf.comlink4j.model.UnlockAnnouncementDefinition;
import io.github.doenisf.comlink4j.model.WarDef;
import io.github.doenisf.comlink4j.model.XpTable;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetGameData2XXResponse
 */
public class GetGameData2XXResponseTest {
    private final GetGameData2XXResponse model = new GetGameData2XXResponse();

    /**
     * Model tests for GetGameData2XXResponse
     */
    @Test
    public void testGetGameData2XXResponse() {
        // TODO: test GetGameData2XXResponse
    }

    /**
     * Test the property 'units'
     */
    @Test
    public void unitsTest() {
        // TODO: test units
    }

    /**
     * Test the property 'battleEnvironments'
     */
    @Test
    public void battleEnvironmentsTest() {
        // TODO: test battleEnvironments
    }

    /**
     * Test the property 'xpTable'
     */
    @Test
    public void xpTableTest() {
        // TODO: test xpTable
    }

    /**
     * Test the property 'material'
     */
    @Test
    public void materialTest() {
        // TODO: test material
    }

    /**
     * Test the property 'recipe'
     */
    @Test
    public void recipeTest() {
        // TODO: test recipe
    }

    /**
     * Test the property 'statProgression'
     */
    @Test
    public void statProgressionTest() {
        // TODO: test statProgression
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'helpEntry'
     */
    @Test
    public void helpEntryTest() {
        // TODO: test helpEntry
    }

    /**
     * Test the property 'challenge'
     */
    @Test
    public void challengeTest() {
        // TODO: test challenge
    }

    /**
     * Test the property 'skill'
     */
    @Test
    public void skillTest() {
        // TODO: test skill
    }

    /**
     * Test the property 'eventSampling'
     */
    @Test
    public void eventSamplingTest() {
        // TODO: test eventSampling
    }

    /**
     * Test the property 'equipment'
     */
    @Test
    public void equipmentTest() {
        // TODO: test equipment
    }

    /**
     * Test the property 'warDefinition'
     */
    @Test
    public void warDefinitionTest() {
        // TODO: test warDefinition
    }

    /**
     * Test the property 'targetingSet'
     */
    @Test
    public void targetingSetTest() {
        // TODO: test targetingSet
    }

    /**
     * Test the property 'ability'
     */
    @Test
    public void abilityTest() {
        // TODO: test ability
    }

    /**
     * Test the property 'effect'
     */
    @Test
    public void effectTest() {
        // TODO: test effect
    }

    /**
     * Test the property 'requirement'
     */
    @Test
    public void requirementTest() {
        // TODO: test requirement
    }

    /**
     * Test the property 'powerUpBundle'
     */
    @Test
    public void powerUpBundleTest() {
        // TODO: test powerUpBundle
    }

    /**
     * Test the property 'guildBanner'
     */
    @Test
    public void guildBannerTest() {
        // TODO: test guildBanner
    }

    /**
     * Test the property 'raidConfig'
     */
    @Test
    public void raidConfigTest() {
        // TODO: test raidConfig
    }

    /**
     * Test the property 'guildRaid'
     */
    @Test
    public void guildRaidTest() {
        // TODO: test guildRaid
    }

    /**
     * Test the property 'statModSet'
     */
    @Test
    public void statModSetTest() {
        // TODO: test statModSet
    }

    /**
     * Test the property 'statMod'
     */
    @Test
    public void statModTest() {
        // TODO: test statMod
    }

    /**
     * Test the property 'guildExchangeItem'
     */
    @Test
    public void guildExchangeItemTest() {
        // TODO: test guildExchangeItem
    }

    /**
     * Test the property 'table'
     */
    @Test
    public void tableTest() {
        // TODO: test table
    }

    /**
     * Test the property 'unlockAnnouncementDefinition'
     */
    @Test
    public void unlockAnnouncementDefinitionTest() {
        // TODO: test unlockAnnouncementDefinition
    }

    /**
     * Test the property 'battleTargetingRule'
     */
    @Test
    public void battleTargetingRuleTest() {
        // TODO: test battleTargetingRule
    }

    /**
     * Test the property 'territoryBattleDefinition'
     */
    @Test
    public void territoryBattleDefinitionTest() {
        // TODO: test territoryBattleDefinition
    }

    /**
     * Test the property 'territoryWarDefinition'
     */
    @Test
    public void territoryWarDefinitionTest() {
        // TODO: test territoryWarDefinition
    }

    /**
     * Test the property 'environmentCollection'
     */
    @Test
    public void environmentCollectionTest() {
        // TODO: test environmentCollection
    }

    /**
     * Test the property 'challengeStyle'
     */
    @Test
    public void challengeStyleTest() {
        // TODO: test challengeStyle
    }

    /**
     * Test the property 'socialStatus'
     */
    @Test
    public void socialStatusTest() {
        // TODO: test socialStatus
    }

    /**
     * Test the property 'starterGuild'
     */
    @Test
    public void starterGuildTest() {
        // TODO: test starterGuild
    }

    /**
     * Test the property 'playerTitle'
     */
    @Test
    public void playerTitleTest() {
        // TODO: test playerTitle
    }

    /**
     * Test the property 'modRecommendation'
     */
    @Test
    public void modRecommendationTest() {
        // TODO: test modRecommendation
    }

    /**
     * Test the property 'persistentVfx'
     */
    @Test
    public void persistentVfxTest() {
        // TODO: test persistentVfx
    }

    /**
     * Test the property 'territoryTournamentDefinition'
     */
    @Test
    public void territoryTournamentDefinitionTest() {
        // TODO: test territoryTournamentDefinition
    }

    /**
     * Test the property 'eventBonus'
     */
    @Test
    public void eventBonusTest() {
        // TODO: test eventBonus
    }

    /**
     * Test the property 'seasonDefinition'
     */
    @Test
    public void seasonDefinitionTest() {
        // TODO: test seasonDefinition
    }

    /**
     * Test the property 'playerPortrait'
     */
    @Test
    public void playerPortraitTest() {
        // TODO: test playerPortrait
    }

    /**
     * Test the property 'timeZoneChangeConfig'
     */
    @Test
    public void timeZoneChangeConfigTest() {
        // TODO: test timeZoneChangeConfig
    }

    /**
     * Test the property 'effectIconPriority'
     */
    @Test
    public void effectIconPriorityTest() {
        // TODO: test effectIconPriority
    }

    /**
     * Test the property 'mysteryBox'
     */
    @Test
    public void mysteryBoxTest() {
        // TODO: test mysteryBox
    }

    /**
     * Test the property 'mysteryStatMod'
     */
    @Test
    public void mysteryStatModTest() {
        // TODO: test mysteryStatMod
    }

    /**
     * Test the property 'cooldown'
     */
    @Test
    public void cooldownTest() {
        // TODO: test cooldown
    }

    /**
     * Test the property 'dailyActionCap'
     */
    @Test
    public void dailyActionCapTest() {
        // TODO: test dailyActionCap
    }

    /**
     * Test the property 'energyReward'
     */
    @Test
    public void energyRewardTest() {
        // TODO: test energyReward
    }

    /**
     * Test the property 'territoryTournamentMatchmakingDescKey'
     */
    @Test
    public void territoryTournamentMatchmakingDescKeyTest() {
        // TODO: test territoryTournamentMatchmakingDescKey
    }

    /**
     * Test the property 'seasonLeagueDefinition'
     */
    @Test
    public void seasonLeagueDefinitionTest() {
        // TODO: test seasonLeagueDefinition
    }

    /**
     * Test the property 'seasonDivisionDefinition'
     */
    @Test
    public void seasonDivisionDefinitionTest() {
        // TODO: test seasonDivisionDefinition
    }

    /**
     * Test the property 'seasonRewardTable'
     */
    @Test
    public void seasonRewardTableTest() {
        // TODO: test seasonRewardTable
    }

    /**
     * Test the property 'relicTierDefinition'
     */
    @Test
    public void relicTierDefinitionTest() {
        // TODO: test relicTierDefinition
    }

    /**
     * Test the property 'scavengerConversionSet'
     */
    @Test
    public void scavengerConversionSetTest() {
        // TODO: test scavengerConversionSet
    }

    /**
     * Test the property 'unitGuideDefinition'
     */
    @Test
    public void unitGuideDefinitionTest() {
        // TODO: test unitGuideDefinition
    }

    /**
     * Test the property 'galacticBundle'
     */
    @Test
    public void galacticBundleTest() {
        // TODO: test galacticBundle
    }

    /**
     * Test the property 'linkedStoreItem'
     */
    @Test
    public void linkedStoreItemTest() {
        // TODO: test linkedStoreItem
    }

    /**
     * Test the property 'territoryTournamentLeagueDefinition'
     */
    @Test
    public void territoryTournamentLeagueDefinitionTest() {
        // TODO: test territoryTournamentLeagueDefinition
    }

    /**
     * Test the property 'territoryTournamentDivisionDefinition'
     */
    @Test
    public void territoryTournamentDivisionDefinitionTest() {
        // TODO: test territoryTournamentDivisionDefinition
    }

    /**
     * Test the property 'savedSquadConfig'
     */
    @Test
    public void savedSquadConfigTest() {
        // TODO: test savedSquadConfig
    }

    /**
     * Test the property 'guildRaidGlobalConfig'
     */
    @Test
    public void guildRaidGlobalConfigTest() {
        // TODO: test guildRaidGlobalConfig
    }

    /**
     * Test the property 'campaign'
     */
    @Test
    public void campaignTest() {
        // TODO: test campaign
    }

    /**
     * Test the property 'conquestDefinition'
     */
    @Test
    public void conquestDefinitionTest() {
        // TODO: test conquestDefinition
    }

    /**
     * Test the property 'conquestMission'
     */
    @Test
    public void conquestMissionTest() {
        // TODO: test conquestMission
    }

    /**
     * Test the property 'artifactDefinition'
     */
    @Test
    public void artifactDefinitionTest() {
        // TODO: test artifactDefinition
    }

    /**
     * Test the property 'abilityDecisionTree'
     */
    @Test
    public void abilityDecisionTreeTest() {
        // TODO: test abilityDecisionTree
    }

    /**
     * Test the property 'consumableDefinition'
     */
    @Test
    public void consumableDefinitionTest() {
        // TODO: test consumableDefinition
    }

    /**
     * Test the property 'consumableType'
     */
    @Test
    public void consumableTypeTest() {
        // TODO: test consumableType
    }

    /**
     * Test the property 'artifactTierDefinition'
     */
    @Test
    public void artifactTierDefinitionTest() {
        // TODO: test artifactTierDefinition
    }

    /**
     * Test the property 'consumableTierDefinition'
     */
    @Test
    public void consumableTierDefinitionTest() {
        // TODO: test consumableTierDefinition
    }

    /**
     * Test the property 'recommendedSquad'
     */
    @Test
    public void recommendedSquadTest() {
        // TODO: test recommendedSquad
    }

    /**
     * Test the property 'unitGuideLayout'
     */
    @Test
    public void unitGuideLayoutTest() {
        // TODO: test unitGuideLayout
    }

    /**
     * Test the property 'dailyLoginRewardDefinition'
     */
    @Test
    public void dailyLoginRewardDefinitionTest() {
        // TODO: test dailyLoginRewardDefinition
    }

    /**
     * Test the property 'calendarCategoryDefinition'
     */
    @Test
    public void calendarCategoryDefinitionTest() {
        // TODO: test calendarCategoryDefinition
    }

    /**
     * Test the property 'territoryTournamentDailyRewardTable'
     */
    @Test
    public void territoryTournamentDailyRewardTableTest() {
        // TODO: test territoryTournamentDailyRewardTable
    }

    /**
     * Test the property 'datacronSet'
     */
    @Test
    public void datacronSetTest() {
        // TODO: test datacronSet
    }

    /**
     * Test the property 'datacronTemplate'
     */
    @Test
    public void datacronTemplateTest() {
        // TODO: test datacronTemplate
    }

    /**
     * Test the property 'datacronAffixTemplateSet'
     */
    @Test
    public void datacronAffixTemplateSetTest() {
        // TODO: test datacronAffixTemplateSet
    }

    /**
     * Test the property 'datacronHelpEntry'
     */
    @Test
    public void datacronHelpEntryTest() {
        // TODO: test datacronHelpEntry
    }

    /**
     * Test the property 'displayableEnemy'
     */
    @Test
    public void displayableEnemyTest() {
        // TODO: test displayableEnemy
    }

}
