/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.AbilityAIParams;
import io.github.doenisf.comlink4j.model.AbilityButtonLocationType;
import io.github.doenisf.comlink4j.model.AbilityCooldownType;
import io.github.doenisf.comlink4j.model.AbilitySynergy;
import io.github.doenisf.comlink4j.model.AbilityTier;
import io.github.doenisf.comlink4j.model.AbilityType;
import io.github.doenisf.comlink4j.model.BattleCondition;
import io.github.doenisf.comlink4j.model.EffectReference;
import io.github.doenisf.comlink4j.model.EffectTag;
import io.github.doenisf.comlink4j.model.EffectTarget;
import io.github.doenisf.comlink4j.model.MessageDialog;
import io.github.doenisf.comlink4j.model.UnitDetailsAbilityLocation;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Ability
 */
public class AbilityTest {
    private final Ability model = new Ability();

    /**
     * Model tests for Ability
     */
    @Test
    public void testAbility() {
        // TODO: test Ability
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'nameKey'
     */
    @Test
    public void nameKeyTest() {
        // TODO: test nameKey
    }

    /**
     * Test the property 'descKey'
     */
    @Test
    public void descKeyTest() {
        // TODO: test descKey
    }

    /**
     * Test the property 'prefabName'
     */
    @Test
    public void prefabNameTest() {
        // TODO: test prefabName
    }

    /**
     * Test the property 'triggerCondition'
     */
    @Test
    public void triggerConditionTest() {
        // TODO: test triggerCondition
    }

    /**
     * Test the property 'stackingLineOverride'
     */
    @Test
    public void stackingLineOverrideTest() {
        // TODO: test stackingLineOverride
    }

    /**
     * Test the property 'tier'
     */
    @Test
    public void tierTest() {
        // TODO: test tier
    }

    /**
     * Test the property 'cooldown'
     */
    @Test
    public void cooldownTest() {
        // TODO: test cooldown
    }

    /**
     * Test the property 'icon'
     */
    @Test
    public void iconTest() {
        // TODO: test icon
    }

    /**
     * Test the property 'applyTypeTooltipKey'
     */
    @Test
    public void applyTypeTooltipKeyTest() {
        // TODO: test applyTypeTooltipKey
    }

    /**
     * Test the property 'descriptiveTag'
     */
    @Test
    public void descriptiveTagTest() {
        // TODO: test descriptiveTag
    }

    /**
     * Test the property 'effectReference'
     */
    @Test
    public void effectReferenceTest() {
        // TODO: test effectReference
    }

    /**
     * Test the property 'confirmationMessage'
     */
    @Test
    public void confirmationMessageTest() {
        // TODO: test confirmationMessage
    }

    /**
     * Test the property 'buttonLocation'
     */
    @Test
    public void buttonLocationTest() {
        // TODO: test buttonLocation
    }

    /**
     * Test the property 'shortDescKey'
     */
    @Test
    public void shortDescKeyTest() {
        // TODO: test shortDescKey
    }

    /**
     * Test the property 'abilityType'
     */
    @Test
    public void abilityTypeTest() {
        // TODO: test abilityType
    }

    /**
     * Test the property 'detailLocation'
     */
    @Test
    public void detailLocationTest() {
        // TODO: test detailLocation
    }

    /**
     * Test the property 'allyTargetingRuleId'
     */
    @Test
    public void allyTargetingRuleIdTest() {
        // TODO: test allyTargetingRuleId
    }

    /**
     * Test the property 'useAsReinforcementDesc'
     */
    @Test
    public void useAsReinforcementDescTest() {
        // TODO: test useAsReinforcementDesc
    }

    /**
     * Test the property 'interactsWithTag'
     */
    @Test
    public void interactsWithTagTest() {
        // TODO: test interactsWithTag
    }

    /**
     * Test the property 'subIcon'
     */
    @Test
    public void subIconTest() {
        // TODO: test subIcon
    }

    /**
     * Test the property 'aiParams'
     */
    @Test
    public void aiParamsTest() {
        // TODO: test aiParams
    }

    /**
     * Test the property 'cooldownType'
     */
    @Test
    public void cooldownTypeTest() {
        // TODO: test cooldownType
    }

    /**
     * Test the property 'alwaysDisplayInBattleUi'
     */
    @Test
    public void alwaysDisplayInBattleUiTest() {
        // TODO: test alwaysDisplayInBattleUi
    }

    /**
     * Test the property 'highlightWhenReadyInBattleUi'
     */
    @Test
    public void highlightWhenReadyInBattleUiTest() {
        // TODO: test highlightWhenReadyInBattleUi
    }

    /**
     * Test the property 'hideCooldownDescription'
     */
    @Test
    public void hideCooldownDescriptionTest() {
        // TODO: test hideCooldownDescription
    }

    /**
     * Test the property 'blockingEffectId'
     */
    @Test
    public void blockingEffectIdTest() {
        // TODO: test blockingEffectId
    }

    /**
     * Test the property 'blockedLocKey'
     */
    @Test
    public void blockedLocKeyTest() {
        // TODO: test blockedLocKey
    }

    /**
     * Test the property 'ultimateChargeRequired'
     */
    @Test
    public void ultimateChargeRequiredTest() {
        // TODO: test ultimateChargeRequired
    }

    /**
     * Test the property 'grantedPriority'
     */
    @Test
    public void grantedPriorityTest() {
        // TODO: test grantedPriority
    }

    /**
     * Test the property 'synergy'
     */
    @Test
    public void synergyTest() {
        // TODO: test synergy
    }

    /**
     * Test the property 'visualTarget'
     */
    @Test
    public void visualTargetTest() {
        // TODO: test visualTarget
    }

}
