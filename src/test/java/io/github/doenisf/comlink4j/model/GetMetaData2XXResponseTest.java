/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.ClientCacheEntry;
import io.github.doenisf.comlink4j.model.ClientQualityData;
import io.github.doenisf.comlink4j.model.ConfigEntry;
import io.github.doenisf.comlink4j.model.EADPParameters;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetMetaData2XXResponse
 */
public class GetMetaData2XXResponseTest {
    private final GetMetaData2XXResponse model = new GetMetaData2XXResponse();

    /**
     * Model tests for GetMetaData2XXResponse
     */
    @Test
    public void testGetMetaData2XXResponse() {
        // TODO: test GetMetaData2XXResponse
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'assetVersion'
     */
    @Test
    public void assetVersionTest() {
        // TODO: test assetVersion
    }

    /**
     * Test the property 'assetSubpath'
     */
    @Test
    public void assetSubpathTest() {
        // TODO: test assetSubpath
    }

    /**
     * Test the property 'texFormat'
     */
    @Test
    public void texFormatTest() {
        // TODO: test texFormat
    }

    /**
     * Test the property 'serverTimestamp'
     */
    @Test
    public void serverTimestampTest() {
        // TODO: test serverTimestamp
    }

    /**
     * Test the property 'debugMode'
     */
    @Test
    public void debugModeTest() {
        // TODO: test debugMode
    }

    /**
     * Test the property 'latestLocalizationBundleVersion'
     */
    @Test
    public void latestLocalizationBundleVersionTest() {
        // TODO: test latestLocalizationBundleVersion
    }

    /**
     * Test the property 'latestGamedataVersion'
     */
    @Test
    public void latestGamedataVersionTest() {
        // TODO: test latestGamedataVersion
    }

    /**
     * Test the property 'resourceCacheMemoryLimit'
     */
    @Test
    public void resourceCacheMemoryLimitTest() {
        // TODO: test resourceCacheMemoryLimit
    }

    /**
     * Test the property 'gamedataRevision'
     */
    @Test
    public void gamedataRevisionTest() {
        // TODO: test gamedataRevision
    }

    /**
     * Test the property 'monoExtraMemoryAllocationDivisor'
     */
    @Test
    public void monoExtraMemoryAllocationDivisorTest() {
        // TODO: test monoExtraMemoryAllocationDivisor
    }

    /**
     * Test the property 'qualityData'
     */
    @Test
    public void qualityDataTest() {
        // TODO: test qualityData
    }

    /**
     * Test the property 'latestLocalizationRevision'
     */
    @Test
    public void latestLocalizationRevisionTest() {
        // TODO: test latestLocalizationRevision
    }

    /**
     * Test the property 'serverVersion'
     */
    @Test
    public void serverVersionTest() {
        // TODO: test serverVersion
    }

    /**
     * Test the property 'clientCache'
     */
    @Test
    public void clientCacheTest() {
        // TODO: test clientCache
    }

    /**
     * Test the property 'eadpParameters'
     */
    @Test
    public void eadpParametersTest() {
        // TODO: test eadpParameters
    }

}
