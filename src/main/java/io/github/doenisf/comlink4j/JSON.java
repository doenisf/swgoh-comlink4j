/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j;

import com.google.gson.*;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.gsonfire.GsonFireBuilder;
import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Map;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Ability.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityAIParams.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityButtonLocationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityCooldownType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityDecisionNode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityDecisionParamModifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityDecisionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityDecisionResultTarget.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityDecisionTarget.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityDecisionTree.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityDecisionType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityModifierData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilitySynergy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AbilityType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ActionLink.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ActionLinkType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.AdditionalItemModifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ArtifactDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ArtifactTierDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.BattleCondition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.BattleDeploymentState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.BattleDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.BattleEnvironment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.BattleTargetingTactic.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.BattleUnitAbilityState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.BattleUnitState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.BattleUnitStateStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.BucketItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CachedRaidRewards.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CalendarCatchUp.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CalendarCategoryDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CalendarCompletionBehavior.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CalendarExpiry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CalendarMissedConsequence.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CalendarVisuals.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Campaign.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CampaignCinematic.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CampaignElementIdentifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CampaignElementProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CampaignMap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CampaignMissionEnemyPreview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CampaignNode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CampaignNodeDifficulty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CampaignNodeDifficultyGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CampaignNodeEncounter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CampaignNodeMission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CampaignType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CantinaCharacterDialog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Category.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CategoryMatchType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Challenge.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ChallengeClaimType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ChallengeRewardType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ChallengeStyle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ChallengeTask.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ChallengeType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CharacterDialog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CinematicTrigger.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ClientCacheDomain.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ClientCacheEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ClientQualityData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ColorType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CombatType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConditionType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConditionalBucket.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConfigEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConquestDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConquestDifficulty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConquestMission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConquestNode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConquestNodeStyle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConquestNodeType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConquestPurchasePassMiscTextEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConquestPurchasePassMiscTextEntryType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConquestSector.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConquestVisibility.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConsumableDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConsumableDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConsumableTierDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConsumableType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ContextualMessage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ContextualMessageGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ContextualMessageType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ContextualStoreItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConversionItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConversionItemPrioritized.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ConversionSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Cooldown.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CraftingMaterialDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CrewMember.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CurrencyItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.CurrencyType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DailyActionCap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DailyLoginRewardDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Datacron.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DatacronAffix.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DatacronAffixTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DatacronAffixTemplateSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DatacronBattleStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DatacronHelpEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DatacronScopeIdentifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DatacronSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DatacronSetMaterial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DatacronSetTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DatacronTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DatacronTemplateTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DynamicDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DynamicDescriptionTextAlignmentType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DynamicDescriptionTextColumn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.DynamicDescriptionType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EADPParameters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Effect.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EffectApplyType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EffectDamageType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EffectReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EffectTag.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EffectTagCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EffectTarget.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EffectTargetBattleSide.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EffectTargetCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EffectTargetCategoryCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EffectTargetUnitSelect.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EffectType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EnergyRewardDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EnergyRewardInstance.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EnergyRewardInstanceType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EnergyType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EnrollmentStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EntryCategoryAllowed.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Environment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EnvironmentCollection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EquipmentDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EquipmentSlot.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EquipmentType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EvaluationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EventBonus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.EventSampling.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Feat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ForceAlignment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ForcedPlayerSquad.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GalacticBundle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GalacticBundleMainElement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GalacticBundleMainElementInventoryType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GalacticBundleMainElementPage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GalacticBundleMainElementType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GalacticBundleTab.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GameEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GameEventDetailsType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GameEventInstance.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GameEventStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GameEventType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GameEventUILocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GcActivityLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetEvents2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetEventsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGameData2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGameDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGameDataRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuild2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildLeaderboard2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildLeaderboardRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildLeaderboardRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildLeaderboardRequestPayloadLeaderboardIdInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf1.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf2.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf3.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf4.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuilds2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetGuildsRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetLeaderboard2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetLeaderboardRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetLeaderboardRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetLocalizationBundle2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetLocalizationBundle2XXResponseOneOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetLocalizationBundleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetLocalizationBundleRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetMetaData2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetMetaDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetMetaDataRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetMetaDataRequestPayloadClientSpecs.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetPlayer2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetPlayerArenaProfile2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetPlayerArenaProfileRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetPlayerArenaProfileRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetPlayerRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GetPlayerRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GraduatingTerritoryReward.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Guild.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildBannerColorDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildBannerDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildBannerLogoDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildEventTracker.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildExchangeItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildInventory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildInviteStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildInviteType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildLeaderboard.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildLeaderboardId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildLeaderboardType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildMember.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildMemberContribution.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildMemberLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildProfile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaid.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidGlobalConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidLaunchConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidLockout.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidMember.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidPointsSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidRosterRefresh.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidRosterRefreshType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidSim.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildRaidType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.GuildStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.HelpEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.HelpTile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.HelpType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ItemType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.LeaderboardGuild.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.LeaderboardPlayer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.LeaderboardStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.LeagueDivisionRewardPreview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.LinkedStoreItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.LinkedStoreItemType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.LookupActionLink.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.LookupMission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.MandatoryRosterUnit.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.MaterialType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.MemberContributionType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.MemoryLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.MessageDialog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.MissionGrantedAbility.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ModRecommendation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ModRecommendationPrimaryStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ModRecommendationSetBonus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ModifierItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ModifierLocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ModifierLocationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.MysteryBoxDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.MysteryStatModDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.OmicronMode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.OperationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PerformanceLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PersistentVfx.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PersistentVfxReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PlayerPortrait.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PlayerPortraitDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PlayerProfileStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PlayerProfileTab.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PlayerPvpProfile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PlayerRankStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PlayerRating.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PlayerSkillRating.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PlayerTitle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PlayerTitleDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PointAtElement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PointAtRotationBehavior.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PointerType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Position.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.PowerUpBundle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RaidAbilityOverride.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RaidBlackboardPointSource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RaidMember.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RaidModifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RaidOutcome.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RaidPointsStructure.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RaidState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RankRewardPreview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Rarity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Recipe.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RecipeType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RecommendedSquad.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Relic.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RelicDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RelicTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RelicTierDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Requirement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RequirementItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RequirementType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RoomData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.RoomType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SaveSquadConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ScaleItemModifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SeasonDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SeasonDivisionDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SeasonDivisionReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SeasonDivisionSkillBoundary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SeasonLeagueDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SeasonLeaguePromoteSystem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SeasonLeagueReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SeasonRewardTable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SeasonRewardTableKey.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SeasonRewardTableRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SeasonStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Skill.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SkillDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SkillDefinitionReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SkillTierDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SkillType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SkillUpgrade.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SocialStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SocialStatusGuildBannerColor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SocialStatusGuildBannerLogo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SocialStatusIcon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SocialStatusPortrait.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SocialStatusTitle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Squad.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SquadCell.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SquadType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SquadUnitType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StarterGuildDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Stat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StatDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StatMod.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StatModDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StatModSetBonus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StatModSetDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StatModSlot.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StatModStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StatModTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StatProgression.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StatValueRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StatValueRangeNumber.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.StorePromoDialog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SummonStatTable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.SystemModifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Table.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TableRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TargetedStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TargetingSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TargetingWeight.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryBattleConflictZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryBattleDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryBattlePlayerStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryBattleResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryBattleStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryBattleZoneUnitType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryBonusZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryConflictZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryCovertMissionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryCovertZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryCovertZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryGuildProfile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryLocalNote.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryMapPhase.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryMapStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryMapStatCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryPlayerDatacronStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryPlayerStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryPlayerUnitStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryPlayerZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryReconPlatoonDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryReconSquadDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryReconZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryReconZonePlatoon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryReconZoneSquad.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryReconZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryReconZoneUnit.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryReward.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryRewardBracket.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryRewardStructure.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryRewardType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryStatCovertZoneResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryStrikeZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryStrikeZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryTournamentConflictZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryTournamentDailyRewardTable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryTournamentDailyRewardTableRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryTournamentDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryTournamentDivisionDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryTournamentDuelZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryTournamentLeagueDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryWarConflictZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryWarConflictZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryWarDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryWarGuildStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryWarParticipant.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryWarPlayerStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryWarPointStructure.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryWarResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryWarSquad.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryWarSquadStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryWarStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryZoneCommandState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryZoneState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TerritoryZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.ThreatLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TimeZoneChangeConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.TimeZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.Unit.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitBattleStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitClass.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitDefPreview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitDetailsAbilityLocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitGuideActivityType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitGuideDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitGuideLayout.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitGuideLayoutLine.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitGuideLayoutTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitModRecommendation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitReplacement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitTierDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitTierSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnitUpgrade.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.UnlockAnnouncementDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.VfxAllocationLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.WarBracketDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.WarDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.WarNodeDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.WarNodeType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.XpTable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.XpTableRow.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
