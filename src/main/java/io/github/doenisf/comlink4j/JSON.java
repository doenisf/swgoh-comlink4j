/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Ability.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityAIParams.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityButtonLocationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityCooldownType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityDecisionNode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityDecisionParamModifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityDecisionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityDecisionResultTarget.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityDecisionTarget.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityDecisionTree.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityDecisionType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityModifierData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilitySynergy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AbilityType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ActionLink.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ActionLinkType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.AdditionalItemModifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ArtifactDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ArtifactTierDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.BattleCondition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.BattleDeploymentState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.BattleDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.BattleEnvironment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.BattleTargetingTactic.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.BattleUnitAbilityState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.BattleUnitState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.BattleUnitStateStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.BucketItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CachedRaidRewards.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CalendarCatchUp.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CalendarCategoryDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CalendarCompletionBehavior.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CalendarExpiry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CalendarMissedConsequence.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CalendarVisuals.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Campaign.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CampaignCinematic.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CampaignElementIdentifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CampaignElementProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CampaignMap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CampaignMissionEnemyPreview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CampaignNode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CampaignNodeDifficulty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CampaignNodeDifficultyGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CampaignNodeEncounter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CampaignNodeMission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CampaignType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CantinaCharacterDialog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Category.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CategoryMatchType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Challenge.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ChallengeClaimType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ChallengeRewardType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ChallengeStyle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ChallengeTask.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ChallengeType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CharacterDialog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CinematicTrigger.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ClientCacheDomain.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ClientCacheEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ClientQualityData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ColorType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CombatType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConditionType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConditionalBucket.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConfigEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConquestDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConquestDifficulty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConquestMission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConquestNode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConquestNodeStyle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConquestNodeType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConquestPurchasePassMiscTextEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConquestPurchasePassMiscTextEntryType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConquestSector.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConquestVisibility.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConsumableDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConsumableDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConsumableTierDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConsumableType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ContextualMessage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ContextualMessageGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ContextualMessageType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ContextualStoreItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConversionItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConversionItemPrioritized.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ConversionSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Cooldown.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CraftingMaterialDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CrewMember.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CurrencyItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.CurrencyType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DailyActionCap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DailyLoginRewardDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Datacron.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DatacronAffix.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DatacronAffixTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DatacronAffixTemplateSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DatacronBattleStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DatacronHelpEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DatacronScopeIdentifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DatacronSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DatacronSetMaterial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DatacronSetTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DatacronTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DatacronTemplateTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DynamicDescription.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DynamicDescriptionTextAlignmentType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DynamicDescriptionTextColumn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.DynamicDescriptionType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EADPParameters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Effect.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EffectApplyType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EffectDamageType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EffectReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EffectTag.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EffectTagCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EffectTarget.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EffectTargetBattleSide.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EffectTargetCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EffectTargetCategoryCriteria.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EffectTargetUnitSelect.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EffectType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EnergyRewardDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EnergyRewardInstance.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EnergyRewardInstanceType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EnergyType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EnrollmentStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EntryCategoryAllowed.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Environment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EnvironmentCollection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EquipmentDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EquipmentSlot.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EquipmentType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EvaluationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EventBonus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.EventSampling.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Feat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ForceAlignment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ForcedPlayerSquad.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GalacticBundle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GalacticBundleMainElement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GalacticBundleMainElementInventoryType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GalacticBundleMainElementPage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GalacticBundleMainElementType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GalacticBundleTab.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GameEvent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GameEventDetailsType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GameEventInstance.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GameEventStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GameEventType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GameEventUILocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GcActivityLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetEvents2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetEventsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGameData2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGameDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGameDataRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuild2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildLeaderboard2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildLeaderboardRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildLeaderboardRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildLeaderboardRequestPayloadLeaderboardIdInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf1.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf2.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf3.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf4.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuilds2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetGuildsRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetLeaderboard2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetLeaderboardRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetLeaderboardRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetLocalizationBundle2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetLocalizationBundle2XXResponseOneOf.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetLocalizationBundleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetLocalizationBundleRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetMetaData2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetMetaDataRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetMetaDataRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetMetaDataRequestPayloadClientSpecs.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetPlayer2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetPlayerArenaProfile2XXResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetPlayerArenaProfileRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetPlayerArenaProfileRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetPlayerRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GetPlayerRequestPayload.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GraduatingTerritoryReward.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Guild.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildBannerColorDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildBannerDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildBannerLogoDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildEventTracker.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildExchangeItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildInventory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildInviteStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildInviteType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildLeaderboard.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildLeaderboardId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildLeaderboardType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildMember.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildMemberContribution.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildMemberLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildProfile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaid.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidGlobalConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidLaunchConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidLockout.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidMember.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidPointsSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidProgress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidRosterRefresh.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidRosterRefreshType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidSim.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildRaidType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.GuildStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.HelpEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.HelpTile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.HelpType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ItemType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.LeaderboardGuild.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.LeaderboardPlayer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.LeaderboardStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.LeagueDivisionRewardPreview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.LinkedStoreItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.LinkedStoreItemType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.LookupActionLink.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.LookupMission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.MandatoryRosterUnit.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.MaterialType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.MemberContributionType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.MemoryLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.MessageDialog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.MissionGrantedAbility.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ModRecommendation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ModRecommendationPrimaryStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ModRecommendationSetBonus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ModifierItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ModifierLocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ModifierLocationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.MysteryBoxDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.MysteryStatModDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.OmicronMode.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.OperationType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PerformanceLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PersistentVfx.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PersistentVfxReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PlayerPortrait.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PlayerPortraitDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PlayerProfileStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PlayerProfileTab.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PlayerPvpProfile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PlayerRankStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PlayerRating.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PlayerSkillRating.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PlayerTitle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PlayerTitleDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PointAtElement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PointAtRotationBehavior.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PointerType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Position.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.PowerUpBundle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RaidAbilityOverride.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RaidBlackboardPointSource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RaidMember.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RaidModifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RaidOutcome.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RaidPointsStructure.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RaidState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RankRewardPreview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Rarity.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Recipe.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RecipeType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RecommendedSquad.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Relic.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RelicDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RelicTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RelicTierDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Requirement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RequirementItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RequirementType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RoomData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.RoomType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SaveSquadConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ScaleItemModifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SeasonDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SeasonDivisionDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SeasonDivisionReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SeasonDivisionSkillBoundary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SeasonLeagueDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SeasonLeaguePromoteSystem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SeasonLeagueReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SeasonRewardTable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SeasonRewardTableKey.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SeasonRewardTableRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SeasonStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Skill.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SkillDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SkillDefinitionReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SkillTierDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SkillType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SkillUpgrade.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SocialStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SocialStatusGuildBannerColor.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SocialStatusGuildBannerLogo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SocialStatusIcon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SocialStatusPortrait.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SocialStatusTitle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Squad.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SquadCell.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SquadType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SquadUnitType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StarterGuildDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Stat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StatDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StatMod.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StatModDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StatModSetBonus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StatModSetDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StatModSlot.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StatModStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StatModTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StatProgression.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StatValueRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StatValueRangeNumber.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.StorePromoDialog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SummonStatTable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.SystemModifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Table.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TableRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TargetedStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TargetingSet.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TargetingWeight.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryBattleConflictZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryBattleDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryBattlePlayerStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryBattleResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryBattleStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryBattleZoneUnitType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryBonusZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryConflictZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryCovertMissionResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryCovertZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryCovertZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryGuildProfile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryLocalNote.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryMapPhase.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryMapStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryMapStatCategory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryPlayerDatacronStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryPlayerStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryPlayerUnitStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryPlayerZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryReconPlatoonDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryReconSquadDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryReconZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryReconZonePlatoon.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryReconZoneSquad.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryReconZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryReconZoneUnit.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryReward.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryRewardBracket.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryRewardStructure.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryRewardType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryStatCovertZoneResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryStrikeZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryStrikeZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryTournamentConflictZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryTournamentDailyRewardTable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryTournamentDailyRewardTableRow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryTournamentDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryTournamentDivisionDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryTournamentDuelZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryTournamentLeagueDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryWarConflictZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryWarConflictZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryWarDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryWarGuildStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryWarParticipant.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryWarPlayerStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryWarPointStructure.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryWarResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryWarSquad.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryWarSquadStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryWarStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryZoneCommandState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryZoneState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TerritoryZoneStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.ThreatLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TimeZoneChangeConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.TimeZoneDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.Unit.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitBattleStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitClass.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitDefPreview.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitDetailsAbilityLocation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitGuideActivityType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitGuideDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitGuideLayout.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitGuideLayoutLine.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitGuideLayoutTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitHealthState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitModRecommendation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitReplacement.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitStat.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitTier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitTierDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitTierSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnitUpgrade.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.UnlockAnnouncementDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.VfxAllocationLevel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.WarBracketDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.WarDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.WarNodeDef.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.WarNodeType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.XpTable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new io.github.doenisf.comlink4j.model.XpTableRow.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
