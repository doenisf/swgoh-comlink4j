/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.TerritoryGuildProfile;
import io.github.doenisf.comlink4j.TerritoryReconZoneStatus;
import io.github.doenisf.comlink4j.TerritoryWarConflictZoneStatus;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.JSON;

/**
 * TerritoryWarGuildStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-04T16:29:17.254694600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class TerritoryWarGuildStatus {
  public static final String SERIALIZED_NAME_PROFILE = "profile";
  @SerializedName(SERIALIZED_NAME_PROFILE)
  private TerritoryGuildProfile profile;

  public static final String SERIALIZED_NAME_CONFLICT_STATUS = "conflictStatus";
  @SerializedName(SERIALIZED_NAME_CONFLICT_STATUS)
  private List<TerritoryWarConflictZoneStatus> conflictStatus = new ArrayList<>();

  public static final String SERIALIZED_NAME_RECON_STATUS = "reconStatus";
  @SerializedName(SERIALIZED_NAME_RECON_STATUS)
  private List<TerritoryReconZoneStatus> reconStatus = new ArrayList<>();

  public TerritoryWarGuildStatus() {
  }

  public TerritoryWarGuildStatus profile(TerritoryGuildProfile profile) {
    this.profile = profile;
    return this;
  }

  /**
   * Get profile
   * @return profile
   */
  @javax.annotation.Nullable
  public TerritoryGuildProfile getProfile() {
    return profile;
  }

  public void setProfile(TerritoryGuildProfile profile) {
    this.profile = profile;
  }


  public TerritoryWarGuildStatus conflictStatus(List<TerritoryWarConflictZoneStatus> conflictStatus) {
    this.conflictStatus = conflictStatus;
    return this;
  }

  public TerritoryWarGuildStatus addConflictStatusItem(TerritoryWarConflictZoneStatus conflictStatusItem) {
    if (this.conflictStatus == null) {
      this.conflictStatus = new ArrayList<>();
    }
    this.conflictStatus.add(conflictStatusItem);
    return this;
  }

  /**
   * Get conflictStatus
   * @return conflictStatus
   */
  @javax.annotation.Nullable
  public List<TerritoryWarConflictZoneStatus> getConflictStatus() {
    return conflictStatus;
  }

  public void setConflictStatus(List<TerritoryWarConflictZoneStatus> conflictStatus) {
    this.conflictStatus = conflictStatus;
  }


  public TerritoryWarGuildStatus reconStatus(List<TerritoryReconZoneStatus> reconStatus) {
    this.reconStatus = reconStatus;
    return this;
  }

  public TerritoryWarGuildStatus addReconStatusItem(TerritoryReconZoneStatus reconStatusItem) {
    if (this.reconStatus == null) {
      this.reconStatus = new ArrayList<>();
    }
    this.reconStatus.add(reconStatusItem);
    return this;
  }

  /**
   * Get reconStatus
   * @return reconStatus
   */
  @javax.annotation.Nullable
  public List<TerritoryReconZoneStatus> getReconStatus() {
    return reconStatus;
  }

  public void setReconStatus(List<TerritoryReconZoneStatus> reconStatus) {
    this.reconStatus = reconStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerritoryWarGuildStatus territoryWarGuildStatus = (TerritoryWarGuildStatus) o;
    return Objects.equals(this.profile, territoryWarGuildStatus.profile) &&
        Objects.equals(this.conflictStatus, territoryWarGuildStatus.conflictStatus) &&
        Objects.equals(this.reconStatus, territoryWarGuildStatus.reconStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(profile, conflictStatus, reconStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerritoryWarGuildStatus {\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    conflictStatus: ").append(toIndentedString(conflictStatus)).append("\n");
    sb.append("    reconStatus: ").append(toIndentedString(reconStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("profile");
    openapiFields.add("conflictStatus");
    openapiFields.add("reconStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TerritoryWarGuildStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TerritoryWarGuildStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TerritoryWarGuildStatus is not found in the empty JSON string", TerritoryWarGuildStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TerritoryWarGuildStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TerritoryWarGuildStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `profile`
      if (jsonObj.get("profile") != null && !jsonObj.get("profile").isJsonNull()) {
        TerritoryGuildProfile.validateJsonElement(jsonObj.get("profile"));
      }
      if (jsonObj.get("conflictStatus") != null && !jsonObj.get("conflictStatus").isJsonNull()) {
        JsonArray jsonArrayconflictStatus = jsonObj.getAsJsonArray("conflictStatus");
        if (jsonArrayconflictStatus != null) {
          // ensure the json data is an array
          if (!jsonObj.get("conflictStatus").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `conflictStatus` to be an array in the JSON string but got `%s`", jsonObj.get("conflictStatus").toString()));
          }

          // validate the optional field `conflictStatus` (array)
          for (int i = 0; i < jsonArrayconflictStatus.size(); i++) {
            TerritoryWarConflictZoneStatus.validateJsonElement(jsonArrayconflictStatus.get(i));
          };
        }
      }
      if (jsonObj.get("reconStatus") != null && !jsonObj.get("reconStatus").isJsonNull()) {
        JsonArray jsonArrayreconStatus = jsonObj.getAsJsonArray("reconStatus");
        if (jsonArrayreconStatus != null) {
          // ensure the json data is an array
          if (!jsonObj.get("reconStatus").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `reconStatus` to be an array in the JSON string but got `%s`", jsonObj.get("reconStatus").toString()));
          }

          // validate the optional field `reconStatus` (array)
          for (int i = 0; i < jsonArrayreconStatus.size(); i++) {
            TerritoryReconZoneStatus.validateJsonElement(jsonArrayreconStatus.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TerritoryWarGuildStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TerritoryWarGuildStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TerritoryWarGuildStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TerritoryWarGuildStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<TerritoryWarGuildStatus>() {
           @Override
           public void write(JsonWriter out, TerritoryWarGuildStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TerritoryWarGuildStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TerritoryWarGuildStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TerritoryWarGuildStatus
   * @throws IOException if the JSON string is invalid with respect to TerritoryWarGuildStatus
   */
  public static TerritoryWarGuildStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TerritoryWarGuildStatus.class);
  }

  /**
   * Convert an instance of TerritoryWarGuildStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

