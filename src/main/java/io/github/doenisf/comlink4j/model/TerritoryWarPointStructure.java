/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.GraduatingTerritoryReward;
import io.github.doenisf.comlink4j.model.TerritoryReward;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.comlink4j.JSON;

/**
 * TerritoryWarPointStructure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-05T21:53:04.897531600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class TerritoryWarPointStructure {
  public static final String SERIALIZED_NAME_DEPLOY_DEFENSIVE_SQUAD_REWARD = "deployDefensiveSquadReward";
  @SerializedName(SERIALIZED_NAME_DEPLOY_DEFENSIVE_SQUAD_REWARD)
  private TerritoryReward deployDefensiveSquadReward;

  public static final String SERIALIZED_NAME_OFFENSIVE_WIN_REWARD = "offensiveWinReward";
  @SerializedName(SERIALIZED_NAME_OFFENSIVE_WIN_REWARD)
  private TerritoryReward offensiveWinReward;

  public static final String SERIALIZED_NAME_COMPLETE_ZONE_REWARD = "completeZoneReward";
  @SerializedName(SERIALIZED_NAME_COMPLETE_ZONE_REWARD)
  private TerritoryReward completeZoneReward;

  public static final String SERIALIZED_NAME_COMPLETE_ZONE_REWARD_PER_DEFENSIVE_SQUAD = "completeZoneRewardPerDefensiveSquad";
  @SerializedName(SERIALIZED_NAME_COMPLETE_ZONE_REWARD_PER_DEFENSIVE_SQUAD)
  private TerritoryReward completeZoneRewardPerDefensiveSquad;

  public static final String SERIALIZED_NAME_DEFEND_DEFEAT_BONUS = "defendDefeatBonus";
  @SerializedName(SERIALIZED_NAME_DEFEND_DEFEAT_BONUS)
  private List<GraduatingTerritoryReward> defendDefeatBonus = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMPTY_SQUAD_SLOT_BONUS = "emptySquadSlotBonus";
  @SerializedName(SERIALIZED_NAME_EMPTY_SQUAD_SLOT_BONUS)
  private TerritoryReward emptySquadSlotBonus;

  public static final String SERIALIZED_NAME_SURVIVING_SQUAD_UNIT_BONUS = "survivingSquadUnitBonus";
  @SerializedName(SERIALIZED_NAME_SURVIVING_SQUAD_UNIT_BONUS)
  private TerritoryReward survivingSquadUnitBonus;

  public static final String SERIALIZED_NAME_FULL_HEALTH_UNIT_BONUS = "fullHealthUnitBonus";
  @SerializedName(SERIALIZED_NAME_FULL_HEALTH_UNIT_BONUS)
  private TerritoryReward fullHealthUnitBonus;

  public static final String SERIALIZED_NAME_FULL_PROTECTION_UNIT_BONUS = "fullProtectionUnitBonus";
  @SerializedName(SERIALIZED_NAME_FULL_PROTECTION_UNIT_BONUS)
  private TerritoryReward fullProtectionUnitBonus;

  public static final String SERIALIZED_NAME_FIRST_ATTACK_BONUS = "firstAttackBonus";
  @SerializedName(SERIALIZED_NAME_FIRST_ATTACK_BONUS)
  private TerritoryReward firstAttackBonus;

  public static final String SERIALIZED_NAME_ENEMY_DEFEATED_BONUS = "enemyDefeatedBonus";
  @SerializedName(SERIALIZED_NAME_ENEMY_DEFEATED_BONUS)
  private TerritoryReward enemyDefeatedBonus;

  public TerritoryWarPointStructure() {
  }

  public TerritoryWarPointStructure deployDefensiveSquadReward(TerritoryReward deployDefensiveSquadReward) {
    this.deployDefensiveSquadReward = deployDefensiveSquadReward;
    return this;
  }

  /**
   * Get deployDefensiveSquadReward
   * @return deployDefensiveSquadReward
   */
  @javax.annotation.Nullable
  public TerritoryReward getDeployDefensiveSquadReward() {
    return deployDefensiveSquadReward;
  }

  public void setDeployDefensiveSquadReward(TerritoryReward deployDefensiveSquadReward) {
    this.deployDefensiveSquadReward = deployDefensiveSquadReward;
  }


  public TerritoryWarPointStructure offensiveWinReward(TerritoryReward offensiveWinReward) {
    this.offensiveWinReward = offensiveWinReward;
    return this;
  }

  /**
   * Get offensiveWinReward
   * @return offensiveWinReward
   */
  @javax.annotation.Nullable
  public TerritoryReward getOffensiveWinReward() {
    return offensiveWinReward;
  }

  public void setOffensiveWinReward(TerritoryReward offensiveWinReward) {
    this.offensiveWinReward = offensiveWinReward;
  }


  public TerritoryWarPointStructure completeZoneReward(TerritoryReward completeZoneReward) {
    this.completeZoneReward = completeZoneReward;
    return this;
  }

  /**
   * Get completeZoneReward
   * @return completeZoneReward
   */
  @javax.annotation.Nullable
  public TerritoryReward getCompleteZoneReward() {
    return completeZoneReward;
  }

  public void setCompleteZoneReward(TerritoryReward completeZoneReward) {
    this.completeZoneReward = completeZoneReward;
  }


  public TerritoryWarPointStructure completeZoneRewardPerDefensiveSquad(TerritoryReward completeZoneRewardPerDefensiveSquad) {
    this.completeZoneRewardPerDefensiveSquad = completeZoneRewardPerDefensiveSquad;
    return this;
  }

  /**
   * Get completeZoneRewardPerDefensiveSquad
   * @return completeZoneRewardPerDefensiveSquad
   */
  @javax.annotation.Nullable
  public TerritoryReward getCompleteZoneRewardPerDefensiveSquad() {
    return completeZoneRewardPerDefensiveSquad;
  }

  public void setCompleteZoneRewardPerDefensiveSquad(TerritoryReward completeZoneRewardPerDefensiveSquad) {
    this.completeZoneRewardPerDefensiveSquad = completeZoneRewardPerDefensiveSquad;
  }


  public TerritoryWarPointStructure defendDefeatBonus(List<GraduatingTerritoryReward> defendDefeatBonus) {
    this.defendDefeatBonus = defendDefeatBonus;
    return this;
  }

  public TerritoryWarPointStructure addDefendDefeatBonusItem(GraduatingTerritoryReward defendDefeatBonusItem) {
    if (this.defendDefeatBonus == null) {
      this.defendDefeatBonus = new ArrayList<>();
    }
    this.defendDefeatBonus.add(defendDefeatBonusItem);
    return this;
  }

  /**
   * Get defendDefeatBonus
   * @return defendDefeatBonus
   */
  @javax.annotation.Nullable
  public List<GraduatingTerritoryReward> getDefendDefeatBonus() {
    return defendDefeatBonus;
  }

  public void setDefendDefeatBonus(List<GraduatingTerritoryReward> defendDefeatBonus) {
    this.defendDefeatBonus = defendDefeatBonus;
  }


  public TerritoryWarPointStructure emptySquadSlotBonus(TerritoryReward emptySquadSlotBonus) {
    this.emptySquadSlotBonus = emptySquadSlotBonus;
    return this;
  }

  /**
   * Get emptySquadSlotBonus
   * @return emptySquadSlotBonus
   */
  @javax.annotation.Nullable
  public TerritoryReward getEmptySquadSlotBonus() {
    return emptySquadSlotBonus;
  }

  public void setEmptySquadSlotBonus(TerritoryReward emptySquadSlotBonus) {
    this.emptySquadSlotBonus = emptySquadSlotBonus;
  }


  public TerritoryWarPointStructure survivingSquadUnitBonus(TerritoryReward survivingSquadUnitBonus) {
    this.survivingSquadUnitBonus = survivingSquadUnitBonus;
    return this;
  }

  /**
   * Get survivingSquadUnitBonus
   * @return survivingSquadUnitBonus
   */
  @javax.annotation.Nullable
  public TerritoryReward getSurvivingSquadUnitBonus() {
    return survivingSquadUnitBonus;
  }

  public void setSurvivingSquadUnitBonus(TerritoryReward survivingSquadUnitBonus) {
    this.survivingSquadUnitBonus = survivingSquadUnitBonus;
  }


  public TerritoryWarPointStructure fullHealthUnitBonus(TerritoryReward fullHealthUnitBonus) {
    this.fullHealthUnitBonus = fullHealthUnitBonus;
    return this;
  }

  /**
   * Get fullHealthUnitBonus
   * @return fullHealthUnitBonus
   */
  @javax.annotation.Nullable
  public TerritoryReward getFullHealthUnitBonus() {
    return fullHealthUnitBonus;
  }

  public void setFullHealthUnitBonus(TerritoryReward fullHealthUnitBonus) {
    this.fullHealthUnitBonus = fullHealthUnitBonus;
  }


  public TerritoryWarPointStructure fullProtectionUnitBonus(TerritoryReward fullProtectionUnitBonus) {
    this.fullProtectionUnitBonus = fullProtectionUnitBonus;
    return this;
  }

  /**
   * Get fullProtectionUnitBonus
   * @return fullProtectionUnitBonus
   */
  @javax.annotation.Nullable
  public TerritoryReward getFullProtectionUnitBonus() {
    return fullProtectionUnitBonus;
  }

  public void setFullProtectionUnitBonus(TerritoryReward fullProtectionUnitBonus) {
    this.fullProtectionUnitBonus = fullProtectionUnitBonus;
  }


  public TerritoryWarPointStructure firstAttackBonus(TerritoryReward firstAttackBonus) {
    this.firstAttackBonus = firstAttackBonus;
    return this;
  }

  /**
   * Get firstAttackBonus
   * @return firstAttackBonus
   */
  @javax.annotation.Nullable
  public TerritoryReward getFirstAttackBonus() {
    return firstAttackBonus;
  }

  public void setFirstAttackBonus(TerritoryReward firstAttackBonus) {
    this.firstAttackBonus = firstAttackBonus;
  }


  public TerritoryWarPointStructure enemyDefeatedBonus(TerritoryReward enemyDefeatedBonus) {
    this.enemyDefeatedBonus = enemyDefeatedBonus;
    return this;
  }

  /**
   * Get enemyDefeatedBonus
   * @return enemyDefeatedBonus
   */
  @javax.annotation.Nullable
  public TerritoryReward getEnemyDefeatedBonus() {
    return enemyDefeatedBonus;
  }

  public void setEnemyDefeatedBonus(TerritoryReward enemyDefeatedBonus) {
    this.enemyDefeatedBonus = enemyDefeatedBonus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerritoryWarPointStructure territoryWarPointStructure = (TerritoryWarPointStructure) o;
    return Objects.equals(this.deployDefensiveSquadReward, territoryWarPointStructure.deployDefensiveSquadReward) &&
        Objects.equals(this.offensiveWinReward, territoryWarPointStructure.offensiveWinReward) &&
        Objects.equals(this.completeZoneReward, territoryWarPointStructure.completeZoneReward) &&
        Objects.equals(this.completeZoneRewardPerDefensiveSquad, territoryWarPointStructure.completeZoneRewardPerDefensiveSquad) &&
        Objects.equals(this.defendDefeatBonus, territoryWarPointStructure.defendDefeatBonus) &&
        Objects.equals(this.emptySquadSlotBonus, territoryWarPointStructure.emptySquadSlotBonus) &&
        Objects.equals(this.survivingSquadUnitBonus, territoryWarPointStructure.survivingSquadUnitBonus) &&
        Objects.equals(this.fullHealthUnitBonus, territoryWarPointStructure.fullHealthUnitBonus) &&
        Objects.equals(this.fullProtectionUnitBonus, territoryWarPointStructure.fullProtectionUnitBonus) &&
        Objects.equals(this.firstAttackBonus, territoryWarPointStructure.firstAttackBonus) &&
        Objects.equals(this.enemyDefeatedBonus, territoryWarPointStructure.enemyDefeatedBonus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deployDefensiveSquadReward, offensiveWinReward, completeZoneReward, completeZoneRewardPerDefensiveSquad, defendDefeatBonus, emptySquadSlotBonus, survivingSquadUnitBonus, fullHealthUnitBonus, fullProtectionUnitBonus, firstAttackBonus, enemyDefeatedBonus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerritoryWarPointStructure {\n");
    sb.append("    deployDefensiveSquadReward: ").append(toIndentedString(deployDefensiveSquadReward)).append("\n");
    sb.append("    offensiveWinReward: ").append(toIndentedString(offensiveWinReward)).append("\n");
    sb.append("    completeZoneReward: ").append(toIndentedString(completeZoneReward)).append("\n");
    sb.append("    completeZoneRewardPerDefensiveSquad: ").append(toIndentedString(completeZoneRewardPerDefensiveSquad)).append("\n");
    sb.append("    defendDefeatBonus: ").append(toIndentedString(defendDefeatBonus)).append("\n");
    sb.append("    emptySquadSlotBonus: ").append(toIndentedString(emptySquadSlotBonus)).append("\n");
    sb.append("    survivingSquadUnitBonus: ").append(toIndentedString(survivingSquadUnitBonus)).append("\n");
    sb.append("    fullHealthUnitBonus: ").append(toIndentedString(fullHealthUnitBonus)).append("\n");
    sb.append("    fullProtectionUnitBonus: ").append(toIndentedString(fullProtectionUnitBonus)).append("\n");
    sb.append("    firstAttackBonus: ").append(toIndentedString(firstAttackBonus)).append("\n");
    sb.append("    enemyDefeatedBonus: ").append(toIndentedString(enemyDefeatedBonus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deployDefensiveSquadReward");
    openapiFields.add("offensiveWinReward");
    openapiFields.add("completeZoneReward");
    openapiFields.add("completeZoneRewardPerDefensiveSquad");
    openapiFields.add("defendDefeatBonus");
    openapiFields.add("emptySquadSlotBonus");
    openapiFields.add("survivingSquadUnitBonus");
    openapiFields.add("fullHealthUnitBonus");
    openapiFields.add("fullProtectionUnitBonus");
    openapiFields.add("firstAttackBonus");
    openapiFields.add("enemyDefeatedBonus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TerritoryWarPointStructure
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TerritoryWarPointStructure.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TerritoryWarPointStructure is not found in the empty JSON string", TerritoryWarPointStructure.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TerritoryWarPointStructure.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TerritoryWarPointStructure` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `deployDefensiveSquadReward`
      if (jsonObj.get("deployDefensiveSquadReward") != null && !jsonObj.get("deployDefensiveSquadReward").isJsonNull()) {
        TerritoryReward.validateJsonElement(jsonObj.get("deployDefensiveSquadReward"));
      }
      // validate the optional field `offensiveWinReward`
      if (jsonObj.get("offensiveWinReward") != null && !jsonObj.get("offensiveWinReward").isJsonNull()) {
        TerritoryReward.validateJsonElement(jsonObj.get("offensiveWinReward"));
      }
      // validate the optional field `completeZoneReward`
      if (jsonObj.get("completeZoneReward") != null && !jsonObj.get("completeZoneReward").isJsonNull()) {
        TerritoryReward.validateJsonElement(jsonObj.get("completeZoneReward"));
      }
      // validate the optional field `completeZoneRewardPerDefensiveSquad`
      if (jsonObj.get("completeZoneRewardPerDefensiveSquad") != null && !jsonObj.get("completeZoneRewardPerDefensiveSquad").isJsonNull()) {
        TerritoryReward.validateJsonElement(jsonObj.get("completeZoneRewardPerDefensiveSquad"));
      }
      if (jsonObj.get("defendDefeatBonus") != null && !jsonObj.get("defendDefeatBonus").isJsonNull()) {
        JsonArray jsonArraydefendDefeatBonus = jsonObj.getAsJsonArray("defendDefeatBonus");
        if (jsonArraydefendDefeatBonus != null) {
          // ensure the json data is an array
          if (!jsonObj.get("defendDefeatBonus").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `defendDefeatBonus` to be an array in the JSON string but got `%s`", jsonObj.get("defendDefeatBonus").toString()));
          }

          // validate the optional field `defendDefeatBonus` (array)
          for (int i = 0; i < jsonArraydefendDefeatBonus.size(); i++) {
            GraduatingTerritoryReward.validateJsonElement(jsonArraydefendDefeatBonus.get(i));
          };
        }
      }
      // validate the optional field `emptySquadSlotBonus`
      if (jsonObj.get("emptySquadSlotBonus") != null && !jsonObj.get("emptySquadSlotBonus").isJsonNull()) {
        TerritoryReward.validateJsonElement(jsonObj.get("emptySquadSlotBonus"));
      }
      // validate the optional field `survivingSquadUnitBonus`
      if (jsonObj.get("survivingSquadUnitBonus") != null && !jsonObj.get("survivingSquadUnitBonus").isJsonNull()) {
        TerritoryReward.validateJsonElement(jsonObj.get("survivingSquadUnitBonus"));
      }
      // validate the optional field `fullHealthUnitBonus`
      if (jsonObj.get("fullHealthUnitBonus") != null && !jsonObj.get("fullHealthUnitBonus").isJsonNull()) {
        TerritoryReward.validateJsonElement(jsonObj.get("fullHealthUnitBonus"));
      }
      // validate the optional field `fullProtectionUnitBonus`
      if (jsonObj.get("fullProtectionUnitBonus") != null && !jsonObj.get("fullProtectionUnitBonus").isJsonNull()) {
        TerritoryReward.validateJsonElement(jsonObj.get("fullProtectionUnitBonus"));
      }
      // validate the optional field `firstAttackBonus`
      if (jsonObj.get("firstAttackBonus") != null && !jsonObj.get("firstAttackBonus").isJsonNull()) {
        TerritoryReward.validateJsonElement(jsonObj.get("firstAttackBonus"));
      }
      // validate the optional field `enemyDefeatedBonus`
      if (jsonObj.get("enemyDefeatedBonus") != null && !jsonObj.get("enemyDefeatedBonus").isJsonNull()) {
        TerritoryReward.validateJsonElement(jsonObj.get("enemyDefeatedBonus"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TerritoryWarPointStructure.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TerritoryWarPointStructure' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TerritoryWarPointStructure> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TerritoryWarPointStructure.class));

       return (TypeAdapter<T>) new TypeAdapter<TerritoryWarPointStructure>() {
           @Override
           public void write(JsonWriter out, TerritoryWarPointStructure value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TerritoryWarPointStructure read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TerritoryWarPointStructure given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TerritoryWarPointStructure
   * @throws IOException if the JSON string is invalid with respect to TerritoryWarPointStructure
   */
  public static TerritoryWarPointStructure fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TerritoryWarPointStructure.class);
  }

  /**
   * Convert an instance of TerritoryWarPointStructure to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

