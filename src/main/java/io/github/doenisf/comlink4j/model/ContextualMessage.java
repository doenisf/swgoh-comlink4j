/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.ActionLink;
import io.github.doenisf.comlink4j.CantinaCharacterDialog;
import io.github.doenisf.comlink4j.CharacterDialog;
import io.github.doenisf.comlink4j.ContextualMessageType;
import io.github.doenisf.comlink4j.PointAtElement;
import io.github.doenisf.comlink4j.Requirement;
import io.github.doenisf.comlink4j.StorePromoDialog;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.JSON;

/**
 * ContextualMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-04T16:29:17.254694600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class ContextualMessage {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private ContextualMessageType type;

  public static final String SERIALIZED_NAME_TITLE_KEY = "titleKey";
  @SerializedName(SERIALIZED_NAME_TITLE_KEY)
  private String titleKey;

  public static final String SERIALIZED_NAME_TEXT_KEY = "textKey";
  @SerializedName(SERIALIZED_NAME_TEXT_KEY)
  private String textKey;

  public static final String SERIALIZED_NAME_POINT_AT = "pointAt";
  @SerializedName(SERIALIZED_NAME_POINT_AT)
  private PointAtElement pointAt;

  public static final String SERIALIZED_NAME_APPEAR_EVENT = "appearEvent";
  @SerializedName(SERIALIZED_NAME_APPEAR_EVENT)
  private List<String> appearEvent = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISMISS_EVENT = "dismissEvent";
  @SerializedName(SERIALIZED_NAME_DISMISS_EVENT)
  private List<String> dismissEvent = new ArrayList<>();

  public static final String SERIALIZED_NAME_HIDE_EVENT = "hideEvent";
  @SerializedName(SERIALIZED_NAME_HIDE_EVENT)
  private List<String> hideEvent = new ArrayList<>();

  public static final String SERIALIZED_NAME_ACTION_LINK = "actionLink";
  @SerializedName(SERIALIZED_NAME_ACTION_LINK)
  private String actionLink;

  public static final String SERIALIZED_NAME_NEXT_MESSAGE_ID = "nextMessageId";
  @SerializedName(SERIALIZED_NAME_NEXT_MESSAGE_ID)
  private String nextMessageId;

  public static final String SERIALIZED_NAME_CLIENT_REQUIREMENT = "clientRequirement";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUIREMENT)
  private Requirement clientRequirement;

  public static final String SERIALIZED_NAME_CHARACTER_DIALOG = "characterDialog";
  @SerializedName(SERIALIZED_NAME_CHARACTER_DIALOG)
  private CharacterDialog characterDialog;

  public static final String SERIALIZED_NAME_NEXT_MESSAGE_ID_DECLINE = "nextMessageIdDecline";
  @SerializedName(SERIALIZED_NAME_NEXT_MESSAGE_ID_DECLINE)
  private String nextMessageIdDecline;

  public static final String SERIALIZED_NAME_CAN_DISMISS_WHILE_HIDDEN = "canDismissWhileHidden";
  @SerializedName(SERIALIZED_NAME_CAN_DISMISS_WHILE_HIDDEN)
  private Boolean canDismissWhileHidden;

  public static final String SERIALIZED_NAME_FTUE_SUB_STEP = "ftueSubStep";
  @SerializedName(SERIALIZED_NAME_FTUE_SUB_STEP)
  private Integer ftueSubStep;

  public static final String SERIALIZED_NAME_CANTINA_CHARACTER_DIALOG = "cantinaCharacterDialog";
  @SerializedName(SERIALIZED_NAME_CANTINA_CHARACTER_DIALOG)
  private CantinaCharacterDialog cantinaCharacterDialog;

  public static final String SERIALIZED_NAME_ACTION_LINK_DEF = "actionLinkDef";
  @SerializedName(SERIALIZED_NAME_ACTION_LINK_DEF)
  private ActionLink actionLinkDef;

  public static final String SERIALIZED_NAME_STORE_PROMO_DIALOG = "storePromoDialog";
  @SerializedName(SERIALIZED_NAME_STORE_PROMO_DIALOG)
  private StorePromoDialog storePromoDialog;

  public static final String SERIALIZED_NAME_SHOW_EXIT_BUTTON = "showExitButton";
  @SerializedName(SERIALIZED_NAME_SHOW_EXIT_BUTTON)
  private Boolean showExitButton;

  public ContextualMessage() {
  }

  public ContextualMessage id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ContextualMessage type(ContextualMessageType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public ContextualMessageType getType() {
    return type;
  }

  public void setType(ContextualMessageType type) {
    this.type = type;
  }


  public ContextualMessage titleKey(String titleKey) {
    this.titleKey = titleKey;
    return this;
  }

  /**
   * Get titleKey
   * @return titleKey
   */
  @javax.annotation.Nullable
  public String getTitleKey() {
    return titleKey;
  }

  public void setTitleKey(String titleKey) {
    this.titleKey = titleKey;
  }


  public ContextualMessage textKey(String textKey) {
    this.textKey = textKey;
    return this;
  }

  /**
   * Get textKey
   * @return textKey
   */
  @javax.annotation.Nullable
  public String getTextKey() {
    return textKey;
  }

  public void setTextKey(String textKey) {
    this.textKey = textKey;
  }


  public ContextualMessage pointAt(PointAtElement pointAt) {
    this.pointAt = pointAt;
    return this;
  }

  /**
   * Get pointAt
   * @return pointAt
   */
  @javax.annotation.Nullable
  public PointAtElement getPointAt() {
    return pointAt;
  }

  public void setPointAt(PointAtElement pointAt) {
    this.pointAt = pointAt;
  }


  public ContextualMessage appearEvent(List<String> appearEvent) {
    this.appearEvent = appearEvent;
    return this;
  }

  public ContextualMessage addAppearEventItem(String appearEventItem) {
    if (this.appearEvent == null) {
      this.appearEvent = new ArrayList<>();
    }
    this.appearEvent.add(appearEventItem);
    return this;
  }

  /**
   * Get appearEvent
   * @return appearEvent
   */
  @javax.annotation.Nullable
  public List<String> getAppearEvent() {
    return appearEvent;
  }

  public void setAppearEvent(List<String> appearEvent) {
    this.appearEvent = appearEvent;
  }


  public ContextualMessage dismissEvent(List<String> dismissEvent) {
    this.dismissEvent = dismissEvent;
    return this;
  }

  public ContextualMessage addDismissEventItem(String dismissEventItem) {
    if (this.dismissEvent == null) {
      this.dismissEvent = new ArrayList<>();
    }
    this.dismissEvent.add(dismissEventItem);
    return this;
  }

  /**
   * Get dismissEvent
   * @return dismissEvent
   */
  @javax.annotation.Nullable
  public List<String> getDismissEvent() {
    return dismissEvent;
  }

  public void setDismissEvent(List<String> dismissEvent) {
    this.dismissEvent = dismissEvent;
  }


  public ContextualMessage hideEvent(List<String> hideEvent) {
    this.hideEvent = hideEvent;
    return this;
  }

  public ContextualMessage addHideEventItem(String hideEventItem) {
    if (this.hideEvent == null) {
      this.hideEvent = new ArrayList<>();
    }
    this.hideEvent.add(hideEventItem);
    return this;
  }

  /**
   * Get hideEvent
   * @return hideEvent
   */
  @javax.annotation.Nullable
  public List<String> getHideEvent() {
    return hideEvent;
  }

  public void setHideEvent(List<String> hideEvent) {
    this.hideEvent = hideEvent;
  }


  public ContextualMessage actionLink(String actionLink) {
    this.actionLink = actionLink;
    return this;
  }

  /**
   * Get actionLink
   * @return actionLink
   */
  @javax.annotation.Nullable
  public String getActionLink() {
    return actionLink;
  }

  public void setActionLink(String actionLink) {
    this.actionLink = actionLink;
  }


  public ContextualMessage nextMessageId(String nextMessageId) {
    this.nextMessageId = nextMessageId;
    return this;
  }

  /**
   * Get nextMessageId
   * @return nextMessageId
   */
  @javax.annotation.Nullable
  public String getNextMessageId() {
    return nextMessageId;
  }

  public void setNextMessageId(String nextMessageId) {
    this.nextMessageId = nextMessageId;
  }


  public ContextualMessage clientRequirement(Requirement clientRequirement) {
    this.clientRequirement = clientRequirement;
    return this;
  }

  /**
   * Get clientRequirement
   * @return clientRequirement
   */
  @javax.annotation.Nullable
  public Requirement getClientRequirement() {
    return clientRequirement;
  }

  public void setClientRequirement(Requirement clientRequirement) {
    this.clientRequirement = clientRequirement;
  }


  public ContextualMessage characterDialog(CharacterDialog characterDialog) {
    this.characterDialog = characterDialog;
    return this;
  }

  /**
   * Get characterDialog
   * @return characterDialog
   */
  @javax.annotation.Nullable
  public CharacterDialog getCharacterDialog() {
    return characterDialog;
  }

  public void setCharacterDialog(CharacterDialog characterDialog) {
    this.characterDialog = characterDialog;
  }


  public ContextualMessage nextMessageIdDecline(String nextMessageIdDecline) {
    this.nextMessageIdDecline = nextMessageIdDecline;
    return this;
  }

  /**
   * Get nextMessageIdDecline
   * @return nextMessageIdDecline
   */
  @javax.annotation.Nullable
  public String getNextMessageIdDecline() {
    return nextMessageIdDecline;
  }

  public void setNextMessageIdDecline(String nextMessageIdDecline) {
    this.nextMessageIdDecline = nextMessageIdDecline;
  }


  public ContextualMessage canDismissWhileHidden(Boolean canDismissWhileHidden) {
    this.canDismissWhileHidden = canDismissWhileHidden;
    return this;
  }

  /**
   * Get canDismissWhileHidden
   * @return canDismissWhileHidden
   */
  @javax.annotation.Nullable
  public Boolean getCanDismissWhileHidden() {
    return canDismissWhileHidden;
  }

  public void setCanDismissWhileHidden(Boolean canDismissWhileHidden) {
    this.canDismissWhileHidden = canDismissWhileHidden;
  }


  public ContextualMessage ftueSubStep(Integer ftueSubStep) {
    this.ftueSubStep = ftueSubStep;
    return this;
  }

  /**
   * Get ftueSubStep
   * @return ftueSubStep
   */
  @javax.annotation.Nullable
  public Integer getFtueSubStep() {
    return ftueSubStep;
  }

  public void setFtueSubStep(Integer ftueSubStep) {
    this.ftueSubStep = ftueSubStep;
  }


  public ContextualMessage cantinaCharacterDialog(CantinaCharacterDialog cantinaCharacterDialog) {
    this.cantinaCharacterDialog = cantinaCharacterDialog;
    return this;
  }

  /**
   * Get cantinaCharacterDialog
   * @return cantinaCharacterDialog
   */
  @javax.annotation.Nullable
  public CantinaCharacterDialog getCantinaCharacterDialog() {
    return cantinaCharacterDialog;
  }

  public void setCantinaCharacterDialog(CantinaCharacterDialog cantinaCharacterDialog) {
    this.cantinaCharacterDialog = cantinaCharacterDialog;
  }


  public ContextualMessage actionLinkDef(ActionLink actionLinkDef) {
    this.actionLinkDef = actionLinkDef;
    return this;
  }

  /**
   * Get actionLinkDef
   * @return actionLinkDef
   */
  @javax.annotation.Nullable
  public ActionLink getActionLinkDef() {
    return actionLinkDef;
  }

  public void setActionLinkDef(ActionLink actionLinkDef) {
    this.actionLinkDef = actionLinkDef;
  }


  public ContextualMessage storePromoDialog(StorePromoDialog storePromoDialog) {
    this.storePromoDialog = storePromoDialog;
    return this;
  }

  /**
   * Get storePromoDialog
   * @return storePromoDialog
   */
  @javax.annotation.Nullable
  public StorePromoDialog getStorePromoDialog() {
    return storePromoDialog;
  }

  public void setStorePromoDialog(StorePromoDialog storePromoDialog) {
    this.storePromoDialog = storePromoDialog;
  }


  public ContextualMessage showExitButton(Boolean showExitButton) {
    this.showExitButton = showExitButton;
    return this;
  }

  /**
   * Get showExitButton
   * @return showExitButton
   */
  @javax.annotation.Nullable
  public Boolean getShowExitButton() {
    return showExitButton;
  }

  public void setShowExitButton(Boolean showExitButton) {
    this.showExitButton = showExitButton;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContextualMessage contextualMessage = (ContextualMessage) o;
    return Objects.equals(this.id, contextualMessage.id) &&
        Objects.equals(this.type, contextualMessage.type) &&
        Objects.equals(this.titleKey, contextualMessage.titleKey) &&
        Objects.equals(this.textKey, contextualMessage.textKey) &&
        Objects.equals(this.pointAt, contextualMessage.pointAt) &&
        Objects.equals(this.appearEvent, contextualMessage.appearEvent) &&
        Objects.equals(this.dismissEvent, contextualMessage.dismissEvent) &&
        Objects.equals(this.hideEvent, contextualMessage.hideEvent) &&
        Objects.equals(this.actionLink, contextualMessage.actionLink) &&
        Objects.equals(this.nextMessageId, contextualMessage.nextMessageId) &&
        Objects.equals(this.clientRequirement, contextualMessage.clientRequirement) &&
        Objects.equals(this.characterDialog, contextualMessage.characterDialog) &&
        Objects.equals(this.nextMessageIdDecline, contextualMessage.nextMessageIdDecline) &&
        Objects.equals(this.canDismissWhileHidden, contextualMessage.canDismissWhileHidden) &&
        Objects.equals(this.ftueSubStep, contextualMessage.ftueSubStep) &&
        Objects.equals(this.cantinaCharacterDialog, contextualMessage.cantinaCharacterDialog) &&
        Objects.equals(this.actionLinkDef, contextualMessage.actionLinkDef) &&
        Objects.equals(this.storePromoDialog, contextualMessage.storePromoDialog) &&
        Objects.equals(this.showExitButton, contextualMessage.showExitButton);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, titleKey, textKey, pointAt, appearEvent, dismissEvent, hideEvent, actionLink, nextMessageId, clientRequirement, characterDialog, nextMessageIdDecline, canDismissWhileHidden, ftueSubStep, cantinaCharacterDialog, actionLinkDef, storePromoDialog, showExitButton);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContextualMessage {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    titleKey: ").append(toIndentedString(titleKey)).append("\n");
    sb.append("    textKey: ").append(toIndentedString(textKey)).append("\n");
    sb.append("    pointAt: ").append(toIndentedString(pointAt)).append("\n");
    sb.append("    appearEvent: ").append(toIndentedString(appearEvent)).append("\n");
    sb.append("    dismissEvent: ").append(toIndentedString(dismissEvent)).append("\n");
    sb.append("    hideEvent: ").append(toIndentedString(hideEvent)).append("\n");
    sb.append("    actionLink: ").append(toIndentedString(actionLink)).append("\n");
    sb.append("    nextMessageId: ").append(toIndentedString(nextMessageId)).append("\n");
    sb.append("    clientRequirement: ").append(toIndentedString(clientRequirement)).append("\n");
    sb.append("    characterDialog: ").append(toIndentedString(characterDialog)).append("\n");
    sb.append("    nextMessageIdDecline: ").append(toIndentedString(nextMessageIdDecline)).append("\n");
    sb.append("    canDismissWhileHidden: ").append(toIndentedString(canDismissWhileHidden)).append("\n");
    sb.append("    ftueSubStep: ").append(toIndentedString(ftueSubStep)).append("\n");
    sb.append("    cantinaCharacterDialog: ").append(toIndentedString(cantinaCharacterDialog)).append("\n");
    sb.append("    actionLinkDef: ").append(toIndentedString(actionLinkDef)).append("\n");
    sb.append("    storePromoDialog: ").append(toIndentedString(storePromoDialog)).append("\n");
    sb.append("    showExitButton: ").append(toIndentedString(showExitButton)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("type");
    openapiFields.add("titleKey");
    openapiFields.add("textKey");
    openapiFields.add("pointAt");
    openapiFields.add("appearEvent");
    openapiFields.add("dismissEvent");
    openapiFields.add("hideEvent");
    openapiFields.add("actionLink");
    openapiFields.add("nextMessageId");
    openapiFields.add("clientRequirement");
    openapiFields.add("characterDialog");
    openapiFields.add("nextMessageIdDecline");
    openapiFields.add("canDismissWhileHidden");
    openapiFields.add("ftueSubStep");
    openapiFields.add("cantinaCharacterDialog");
    openapiFields.add("actionLinkDef");
    openapiFields.add("storePromoDialog");
    openapiFields.add("showExitButton");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContextualMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContextualMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContextualMessage is not found in the empty JSON string", ContextualMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContextualMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContextualMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        ContextualMessageType.validateJsonElement(jsonObj.get("type"));
      }
      if ((jsonObj.get("titleKey") != null && !jsonObj.get("titleKey").isJsonNull()) && !jsonObj.get("titleKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `titleKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("titleKey").toString()));
      }
      if ((jsonObj.get("textKey") != null && !jsonObj.get("textKey").isJsonNull()) && !jsonObj.get("textKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `textKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("textKey").toString()));
      }
      // validate the optional field `pointAt`
      if (jsonObj.get("pointAt") != null && !jsonObj.get("pointAt").isJsonNull()) {
        PointAtElement.validateJsonElement(jsonObj.get("pointAt"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("appearEvent") != null && !jsonObj.get("appearEvent").isJsonNull() && !jsonObj.get("appearEvent").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `appearEvent` to be an array in the JSON string but got `%s`", jsonObj.get("appearEvent").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("dismissEvent") != null && !jsonObj.get("dismissEvent").isJsonNull() && !jsonObj.get("dismissEvent").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dismissEvent` to be an array in the JSON string but got `%s`", jsonObj.get("dismissEvent").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("hideEvent") != null && !jsonObj.get("hideEvent").isJsonNull() && !jsonObj.get("hideEvent").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `hideEvent` to be an array in the JSON string but got `%s`", jsonObj.get("hideEvent").toString()));
      }
      if ((jsonObj.get("actionLink") != null && !jsonObj.get("actionLink").isJsonNull()) && !jsonObj.get("actionLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `actionLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("actionLink").toString()));
      }
      if ((jsonObj.get("nextMessageId") != null && !jsonObj.get("nextMessageId").isJsonNull()) && !jsonObj.get("nextMessageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextMessageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextMessageId").toString()));
      }
      // validate the optional field `clientRequirement`
      if (jsonObj.get("clientRequirement") != null && !jsonObj.get("clientRequirement").isJsonNull()) {
        Requirement.validateJsonElement(jsonObj.get("clientRequirement"));
      }
      // validate the optional field `characterDialog`
      if (jsonObj.get("characterDialog") != null && !jsonObj.get("characterDialog").isJsonNull()) {
        CharacterDialog.validateJsonElement(jsonObj.get("characterDialog"));
      }
      if ((jsonObj.get("nextMessageIdDecline") != null && !jsonObj.get("nextMessageIdDecline").isJsonNull()) && !jsonObj.get("nextMessageIdDecline").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextMessageIdDecline` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextMessageIdDecline").toString()));
      }
      // validate the optional field `cantinaCharacterDialog`
      if (jsonObj.get("cantinaCharacterDialog") != null && !jsonObj.get("cantinaCharacterDialog").isJsonNull()) {
        CantinaCharacterDialog.validateJsonElement(jsonObj.get("cantinaCharacterDialog"));
      }
      // validate the optional field `actionLinkDef`
      if (jsonObj.get("actionLinkDef") != null && !jsonObj.get("actionLinkDef").isJsonNull()) {
        ActionLink.validateJsonElement(jsonObj.get("actionLinkDef"));
      }
      // validate the optional field `storePromoDialog`
      if (jsonObj.get("storePromoDialog") != null && !jsonObj.get("storePromoDialog").isJsonNull()) {
        StorePromoDialog.validateJsonElement(jsonObj.get("storePromoDialog"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContextualMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContextualMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContextualMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContextualMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ContextualMessage>() {
           @Override
           public void write(JsonWriter out, ContextualMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContextualMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContextualMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContextualMessage
   * @throws IOException if the JSON string is invalid with respect to ContextualMessage
   */
  public static ContextualMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContextualMessage.class);
  }

  /**
   * Convert an instance of ContextualMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

