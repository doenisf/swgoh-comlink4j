/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.TerritoryZoneCommandState;
import io.github.doenisf.comlink4j.TerritoryZoneState;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.JSON;

/**
 * TerritoryZoneStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-04T16:29:17.254694600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class TerritoryZoneStatus {
  public static final String SERIALIZED_NAME_ZONE_ID = "zoneId";
  @SerializedName(SERIALIZED_NAME_ZONE_ID)
  private String zoneId;

  public static final String SERIALIZED_NAME_ZONE_STATE = "zoneState";
  @SerializedName(SERIALIZED_NAME_ZONE_STATE)
  private TerritoryZoneState zoneState;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Long score;

  public static final String SERIALIZED_NAME_CHANNEL_ID = "channelId";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
  private String channelId;

  public static final String SERIALIZED_NAME_COMMAND_MESSAGE = "commandMessage";
  @SerializedName(SERIALIZED_NAME_COMMAND_MESSAGE)
  private String commandMessage;

  public static final String SERIALIZED_NAME_COMMAND_STATE = "commandState";
  @SerializedName(SERIALIZED_NAME_COMMAND_STATE)
  private TerritoryZoneCommandState commandState;

  public TerritoryZoneStatus() {
  }

  public TerritoryZoneStatus zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

  /**
   * Get zoneId
   * @return zoneId
   */
  @javax.annotation.Nullable
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  public TerritoryZoneStatus zoneState(TerritoryZoneState zoneState) {
    this.zoneState = zoneState;
    return this;
  }

  /**
   * Get zoneState
   * @return zoneState
   */
  @javax.annotation.Nullable
  public TerritoryZoneState getZoneState() {
    return zoneState;
  }

  public void setZoneState(TerritoryZoneState zoneState) {
    this.zoneState = zoneState;
  }


  public TerritoryZoneStatus score(Long score) {
    this.score = score;
    return this;
  }

  /**
   * Get score
   * @return score
   */
  @javax.annotation.Nullable
  public Long getScore() {
    return score;
  }

  public void setScore(Long score) {
    this.score = score;
  }


  public TerritoryZoneStatus channelId(String channelId) {
    this.channelId = channelId;
    return this;
  }

  /**
   * Get channelId
   * @return channelId
   */
  @javax.annotation.Nullable
  public String getChannelId() {
    return channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public TerritoryZoneStatus commandMessage(String commandMessage) {
    this.commandMessage = commandMessage;
    return this;
  }

  /**
   * Get commandMessage
   * @return commandMessage
   */
  @javax.annotation.Nullable
  public String getCommandMessage() {
    return commandMessage;
  }

  public void setCommandMessage(String commandMessage) {
    this.commandMessage = commandMessage;
  }


  public TerritoryZoneStatus commandState(TerritoryZoneCommandState commandState) {
    this.commandState = commandState;
    return this;
  }

  /**
   * Get commandState
   * @return commandState
   */
  @javax.annotation.Nullable
  public TerritoryZoneCommandState getCommandState() {
    return commandState;
  }

  public void setCommandState(TerritoryZoneCommandState commandState) {
    this.commandState = commandState;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerritoryZoneStatus territoryZoneStatus = (TerritoryZoneStatus) o;
    return Objects.equals(this.zoneId, territoryZoneStatus.zoneId) &&
        Objects.equals(this.zoneState, territoryZoneStatus.zoneState) &&
        Objects.equals(this.score, territoryZoneStatus.score) &&
        Objects.equals(this.channelId, territoryZoneStatus.channelId) &&
        Objects.equals(this.commandMessage, territoryZoneStatus.commandMessage) &&
        Objects.equals(this.commandState, territoryZoneStatus.commandState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(zoneId, zoneState, score, channelId, commandMessage, commandState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerritoryZoneStatus {\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("    zoneState: ").append(toIndentedString(zoneState)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    commandMessage: ").append(toIndentedString(commandMessage)).append("\n");
    sb.append("    commandState: ").append(toIndentedString(commandState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("zoneId");
    openapiFields.add("zoneState");
    openapiFields.add("score");
    openapiFields.add("channelId");
    openapiFields.add("commandMessage");
    openapiFields.add("commandState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TerritoryZoneStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TerritoryZoneStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TerritoryZoneStatus is not found in the empty JSON string", TerritoryZoneStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TerritoryZoneStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TerritoryZoneStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("zoneId") != null && !jsonObj.get("zoneId").isJsonNull()) && !jsonObj.get("zoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zoneId").toString()));
      }
      // validate the optional field `zoneState`
      if (jsonObj.get("zoneState") != null && !jsonObj.get("zoneState").isJsonNull()) {
        TerritoryZoneState.validateJsonElement(jsonObj.get("zoneState"));
      }
      if ((jsonObj.get("channelId") != null && !jsonObj.get("channelId").isJsonNull()) && !jsonObj.get("channelId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channelId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channelId").toString()));
      }
      if ((jsonObj.get("commandMessage") != null && !jsonObj.get("commandMessage").isJsonNull()) && !jsonObj.get("commandMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commandMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commandMessage").toString()));
      }
      // validate the optional field `commandState`
      if (jsonObj.get("commandState") != null && !jsonObj.get("commandState").isJsonNull()) {
        TerritoryZoneCommandState.validateJsonElement(jsonObj.get("commandState"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TerritoryZoneStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TerritoryZoneStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TerritoryZoneStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TerritoryZoneStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<TerritoryZoneStatus>() {
           @Override
           public void write(JsonWriter out, TerritoryZoneStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TerritoryZoneStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TerritoryZoneStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TerritoryZoneStatus
   * @throws IOException if the JSON string is invalid with respect to TerritoryZoneStatus
   */
  public static TerritoryZoneStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TerritoryZoneStatus.class);
  }

  /**
   * Convert an instance of TerritoryZoneStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

