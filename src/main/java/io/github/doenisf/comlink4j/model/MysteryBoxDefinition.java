/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.BucketItem;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.comlink4j.JSON;

/**
 * MysteryBoxDefinition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-05T21:53:04.897531600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class MysteryBoxDefinition {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TEXTURE = "texture";
  @SerializedName(SERIALIZED_NAME_TEXTURE)
  private String texture;

  public static final String SERIALIZED_NAME_TITLE_KEY = "titleKey";
  @SerializedName(SERIALIZED_NAME_TITLE_KEY)
  private String titleKey;

  public static final String SERIALIZED_NAME_DESC_KEY = "descKey";
  @SerializedName(SERIALIZED_NAME_DESC_KEY)
  private String descKey;

  public static final String SERIALIZED_NAME_DETAILS_TITLE_KEY = "detailsTitleKey";
  @SerializedName(SERIALIZED_NAME_DETAILS_TITLE_KEY)
  private String detailsTitleKey;

  public static final String SERIALIZED_NAME_DETAILS_DESC_KEY = "detailsDescKey";
  @SerializedName(SERIALIZED_NAME_DETAILS_DESC_KEY)
  private String detailsDescKey;

  public static final String SERIALIZED_NAME_ICON_TEXT_KEY = "iconTextKey";
  @SerializedName(SERIALIZED_NAME_ICON_TEXT_KEY)
  private String iconTextKey;

  public static final String SERIALIZED_NAME_PREVIEW_ITEM = "previewItem";
  @SerializedName(SERIALIZED_NAME_PREVIEW_ITEM)
  private List<BucketItem> previewItem = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHOW_PRIMARY_REWARDS = "showPrimaryRewards";
  @SerializedName(SERIALIZED_NAME_SHOW_PRIMARY_REWARDS)
  private Boolean showPrimaryRewards;

  public MysteryBoxDefinition() {
  }

  public MysteryBoxDefinition id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public MysteryBoxDefinition texture(String texture) {
    this.texture = texture;
    return this;
  }

  /**
   * Get texture
   * @return texture
   */
  @javax.annotation.Nullable
  public String getTexture() {
    return texture;
  }

  public void setTexture(String texture) {
    this.texture = texture;
  }


  public MysteryBoxDefinition titleKey(String titleKey) {
    this.titleKey = titleKey;
    return this;
  }

  /**
   * Get titleKey
   * @return titleKey
   */
  @javax.annotation.Nullable
  public String getTitleKey() {
    return titleKey;
  }

  public void setTitleKey(String titleKey) {
    this.titleKey = titleKey;
  }


  public MysteryBoxDefinition descKey(String descKey) {
    this.descKey = descKey;
    return this;
  }

  /**
   * Get descKey
   * @return descKey
   */
  @javax.annotation.Nullable
  public String getDescKey() {
    return descKey;
  }

  public void setDescKey(String descKey) {
    this.descKey = descKey;
  }


  public MysteryBoxDefinition detailsTitleKey(String detailsTitleKey) {
    this.detailsTitleKey = detailsTitleKey;
    return this;
  }

  /**
   * Get detailsTitleKey
   * @return detailsTitleKey
   */
  @javax.annotation.Nullable
  public String getDetailsTitleKey() {
    return detailsTitleKey;
  }

  public void setDetailsTitleKey(String detailsTitleKey) {
    this.detailsTitleKey = detailsTitleKey;
  }


  public MysteryBoxDefinition detailsDescKey(String detailsDescKey) {
    this.detailsDescKey = detailsDescKey;
    return this;
  }

  /**
   * Get detailsDescKey
   * @return detailsDescKey
   */
  @javax.annotation.Nullable
  public String getDetailsDescKey() {
    return detailsDescKey;
  }

  public void setDetailsDescKey(String detailsDescKey) {
    this.detailsDescKey = detailsDescKey;
  }


  public MysteryBoxDefinition iconTextKey(String iconTextKey) {
    this.iconTextKey = iconTextKey;
    return this;
  }

  /**
   * Get iconTextKey
   * @return iconTextKey
   */
  @javax.annotation.Nullable
  public String getIconTextKey() {
    return iconTextKey;
  }

  public void setIconTextKey(String iconTextKey) {
    this.iconTextKey = iconTextKey;
  }


  public MysteryBoxDefinition previewItem(List<BucketItem> previewItem) {
    this.previewItem = previewItem;
    return this;
  }

  public MysteryBoxDefinition addPreviewItemItem(BucketItem previewItemItem) {
    if (this.previewItem == null) {
      this.previewItem = new ArrayList<>();
    }
    this.previewItem.add(previewItemItem);
    return this;
  }

  /**
   * Get previewItem
   * @return previewItem
   */
  @javax.annotation.Nullable
  public List<BucketItem> getPreviewItem() {
    return previewItem;
  }

  public void setPreviewItem(List<BucketItem> previewItem) {
    this.previewItem = previewItem;
  }


  public MysteryBoxDefinition showPrimaryRewards(Boolean showPrimaryRewards) {
    this.showPrimaryRewards = showPrimaryRewards;
    return this;
  }

  /**
   * Get showPrimaryRewards
   * @return showPrimaryRewards
   */
  @javax.annotation.Nullable
  public Boolean getShowPrimaryRewards() {
    return showPrimaryRewards;
  }

  public void setShowPrimaryRewards(Boolean showPrimaryRewards) {
    this.showPrimaryRewards = showPrimaryRewards;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MysteryBoxDefinition mysteryBoxDefinition = (MysteryBoxDefinition) o;
    return Objects.equals(this.id, mysteryBoxDefinition.id) &&
        Objects.equals(this.texture, mysteryBoxDefinition.texture) &&
        Objects.equals(this.titleKey, mysteryBoxDefinition.titleKey) &&
        Objects.equals(this.descKey, mysteryBoxDefinition.descKey) &&
        Objects.equals(this.detailsTitleKey, mysteryBoxDefinition.detailsTitleKey) &&
        Objects.equals(this.detailsDescKey, mysteryBoxDefinition.detailsDescKey) &&
        Objects.equals(this.iconTextKey, mysteryBoxDefinition.iconTextKey) &&
        Objects.equals(this.previewItem, mysteryBoxDefinition.previewItem) &&
        Objects.equals(this.showPrimaryRewards, mysteryBoxDefinition.showPrimaryRewards);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, texture, titleKey, descKey, detailsTitleKey, detailsDescKey, iconTextKey, previewItem, showPrimaryRewards);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MysteryBoxDefinition {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    texture: ").append(toIndentedString(texture)).append("\n");
    sb.append("    titleKey: ").append(toIndentedString(titleKey)).append("\n");
    sb.append("    descKey: ").append(toIndentedString(descKey)).append("\n");
    sb.append("    detailsTitleKey: ").append(toIndentedString(detailsTitleKey)).append("\n");
    sb.append("    detailsDescKey: ").append(toIndentedString(detailsDescKey)).append("\n");
    sb.append("    iconTextKey: ").append(toIndentedString(iconTextKey)).append("\n");
    sb.append("    previewItem: ").append(toIndentedString(previewItem)).append("\n");
    sb.append("    showPrimaryRewards: ").append(toIndentedString(showPrimaryRewards)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("texture");
    openapiFields.add("titleKey");
    openapiFields.add("descKey");
    openapiFields.add("detailsTitleKey");
    openapiFields.add("detailsDescKey");
    openapiFields.add("iconTextKey");
    openapiFields.add("previewItem");
    openapiFields.add("showPrimaryRewards");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MysteryBoxDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MysteryBoxDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MysteryBoxDefinition is not found in the empty JSON string", MysteryBoxDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MysteryBoxDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MysteryBoxDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("texture") != null && !jsonObj.get("texture").isJsonNull()) && !jsonObj.get("texture").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `texture` to be a primitive type in the JSON string but got `%s`", jsonObj.get("texture").toString()));
      }
      if ((jsonObj.get("titleKey") != null && !jsonObj.get("titleKey").isJsonNull()) && !jsonObj.get("titleKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `titleKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("titleKey").toString()));
      }
      if ((jsonObj.get("descKey") != null && !jsonObj.get("descKey").isJsonNull()) && !jsonObj.get("descKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `descKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("descKey").toString()));
      }
      if ((jsonObj.get("detailsTitleKey") != null && !jsonObj.get("detailsTitleKey").isJsonNull()) && !jsonObj.get("detailsTitleKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detailsTitleKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detailsTitleKey").toString()));
      }
      if ((jsonObj.get("detailsDescKey") != null && !jsonObj.get("detailsDescKey").isJsonNull()) && !jsonObj.get("detailsDescKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detailsDescKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detailsDescKey").toString()));
      }
      if ((jsonObj.get("iconTextKey") != null && !jsonObj.get("iconTextKey").isJsonNull()) && !jsonObj.get("iconTextKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iconTextKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iconTextKey").toString()));
      }
      if (jsonObj.get("previewItem") != null && !jsonObj.get("previewItem").isJsonNull()) {
        JsonArray jsonArraypreviewItem = jsonObj.getAsJsonArray("previewItem");
        if (jsonArraypreviewItem != null) {
          // ensure the json data is an array
          if (!jsonObj.get("previewItem").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `previewItem` to be an array in the JSON string but got `%s`", jsonObj.get("previewItem").toString()));
          }

          // validate the optional field `previewItem` (array)
          for (int i = 0; i < jsonArraypreviewItem.size(); i++) {
            BucketItem.validateJsonElement(jsonArraypreviewItem.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MysteryBoxDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MysteryBoxDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MysteryBoxDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MysteryBoxDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<MysteryBoxDefinition>() {
           @Override
           public void write(JsonWriter out, MysteryBoxDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MysteryBoxDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MysteryBoxDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MysteryBoxDefinition
   * @throws IOException if the JSON string is invalid with respect to MysteryBoxDefinition
   */
  public static MysteryBoxDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MysteryBoxDefinition.class);
  }

  /**
   * Convert an instance of MysteryBoxDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

