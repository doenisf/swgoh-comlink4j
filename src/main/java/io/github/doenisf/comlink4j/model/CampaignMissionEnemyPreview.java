/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.BucketItem;
import io.github.doenisf.comlink4j.ForceAlignment;
import io.github.doenisf.comlink4j.RelicTier;
import io.github.doenisf.comlink4j.ThreatLevel;
import io.github.doenisf.comlink4j.UnitClass;
import io.github.doenisf.comlink4j.UnitTier;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.JSON;

/**
 * CampaignMissionEnemyPreview
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-04T16:29:17.254694600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class CampaignMissionEnemyPreview {
  public static final String SERIALIZED_NAME_BASE_ENEMY_ITEM = "baseEnemyItem";
  @SerializedName(SERIALIZED_NAME_BASE_ENEMY_ITEM)
  private BucketItem baseEnemyItem;

  public static final String SERIALIZED_NAME_ENEMY_LEVEL = "enemyLevel";
  @SerializedName(SERIALIZED_NAME_ENEMY_LEVEL)
  private Integer enemyLevel;

  public static final String SERIALIZED_NAME_ENEMY_TIER = "enemyTier";
  @SerializedName(SERIALIZED_NAME_ENEMY_TIER)
  private UnitTier enemyTier;

  public static final String SERIALIZED_NAME_THREAT_LEVEL = "threatLevel";
  @SerializedName(SERIALIZED_NAME_THREAT_LEVEL)
  private ThreatLevel threatLevel;

  public static final String SERIALIZED_NAME_THUMBNAIL_NAME = "thumbnailName";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL_NAME)
  private String thumbnailName;

  public static final String SERIALIZED_NAME_PREFAB_NAME = "prefabName";
  @SerializedName(SERIALIZED_NAME_PREFAB_NAME)
  private String prefabName;

  public static final String SERIALIZED_NAME_DISPLAYED_ENEMY = "displayedEnemy";
  @SerializedName(SERIALIZED_NAME_DISPLAYED_ENEMY)
  private Boolean displayedEnemy;

  public static final String SERIALIZED_NAME_UNIT_CLASS = "unitClass";
  @SerializedName(SERIALIZED_NAME_UNIT_CLASS)
  private UnitClass unitClass;

  public static final String SERIALIZED_NAME_ENEMY_FORCE_ALIGNMENT = "enemyForceAlignment";
  @SerializedName(SERIALIZED_NAME_ENEMY_FORCE_ALIGNMENT)
  private ForceAlignment enemyForceAlignment;

  public static final String SERIALIZED_NAME_ENEMY_RELIC_TIER = "enemyRelicTier";
  @SerializedName(SERIALIZED_NAME_ENEMY_RELIC_TIER)
  private RelicTier enemyRelicTier;

  public static final String SERIALIZED_NAME_ZETA_COUNT = "zetaCount";
  @SerializedName(SERIALIZED_NAME_ZETA_COUNT)
  private Integer zetaCount;

  public static final String SERIALIZED_NAME_IS_GALACTIC_LEGEND = "isGalacticLegend";
  @SerializedName(SERIALIZED_NAME_IS_GALACTIC_LEGEND)
  private Boolean isGalacticLegend;

  public static final String SERIALIZED_NAME_IS_ULTIMATE_UNLOCKED = "isUltimateUnlocked";
  @SerializedName(SERIALIZED_NAME_IS_ULTIMATE_UNLOCKED)
  private Boolean isUltimateUnlocked;

  public static final String SERIALIZED_NAME_OMICRON_COUNT = "omicronCount";
  @SerializedName(SERIALIZED_NAME_OMICRON_COUNT)
  private Integer omicronCount;

  public CampaignMissionEnemyPreview() {
  }

  public CampaignMissionEnemyPreview baseEnemyItem(BucketItem baseEnemyItem) {
    this.baseEnemyItem = baseEnemyItem;
    return this;
  }

  /**
   * Get baseEnemyItem
   * @return baseEnemyItem
   */
  @javax.annotation.Nullable
  public BucketItem getBaseEnemyItem() {
    return baseEnemyItem;
  }

  public void setBaseEnemyItem(BucketItem baseEnemyItem) {
    this.baseEnemyItem = baseEnemyItem;
  }


  public CampaignMissionEnemyPreview enemyLevel(Integer enemyLevel) {
    this.enemyLevel = enemyLevel;
    return this;
  }

  /**
   * Get enemyLevel
   * @return enemyLevel
   */
  @javax.annotation.Nullable
  public Integer getEnemyLevel() {
    return enemyLevel;
  }

  public void setEnemyLevel(Integer enemyLevel) {
    this.enemyLevel = enemyLevel;
  }


  public CampaignMissionEnemyPreview enemyTier(UnitTier enemyTier) {
    this.enemyTier = enemyTier;
    return this;
  }

  /**
   * Get enemyTier
   * @return enemyTier
   */
  @javax.annotation.Nullable
  public UnitTier getEnemyTier() {
    return enemyTier;
  }

  public void setEnemyTier(UnitTier enemyTier) {
    this.enemyTier = enemyTier;
  }


  public CampaignMissionEnemyPreview threatLevel(ThreatLevel threatLevel) {
    this.threatLevel = threatLevel;
    return this;
  }

  /**
   * Get threatLevel
   * @return threatLevel
   */
  @javax.annotation.Nullable
  public ThreatLevel getThreatLevel() {
    return threatLevel;
  }

  public void setThreatLevel(ThreatLevel threatLevel) {
    this.threatLevel = threatLevel;
  }


  public CampaignMissionEnemyPreview thumbnailName(String thumbnailName) {
    this.thumbnailName = thumbnailName;
    return this;
  }

  /**
   * Get thumbnailName
   * @return thumbnailName
   */
  @javax.annotation.Nullable
  public String getThumbnailName() {
    return thumbnailName;
  }

  public void setThumbnailName(String thumbnailName) {
    this.thumbnailName = thumbnailName;
  }


  public CampaignMissionEnemyPreview prefabName(String prefabName) {
    this.prefabName = prefabName;
    return this;
  }

  /**
   * Get prefabName
   * @return prefabName
   */
  @javax.annotation.Nullable
  public String getPrefabName() {
    return prefabName;
  }

  public void setPrefabName(String prefabName) {
    this.prefabName = prefabName;
  }


  public CampaignMissionEnemyPreview displayedEnemy(Boolean displayedEnemy) {
    this.displayedEnemy = displayedEnemy;
    return this;
  }

  /**
   * Get displayedEnemy
   * @return displayedEnemy
   */
  @javax.annotation.Nullable
  public Boolean getDisplayedEnemy() {
    return displayedEnemy;
  }

  public void setDisplayedEnemy(Boolean displayedEnemy) {
    this.displayedEnemy = displayedEnemy;
  }


  public CampaignMissionEnemyPreview unitClass(UnitClass unitClass) {
    this.unitClass = unitClass;
    return this;
  }

  /**
   * Get unitClass
   * @return unitClass
   */
  @javax.annotation.Nullable
  public UnitClass getUnitClass() {
    return unitClass;
  }

  public void setUnitClass(UnitClass unitClass) {
    this.unitClass = unitClass;
  }


  public CampaignMissionEnemyPreview enemyForceAlignment(ForceAlignment enemyForceAlignment) {
    this.enemyForceAlignment = enemyForceAlignment;
    return this;
  }

  /**
   * Get enemyForceAlignment
   * @return enemyForceAlignment
   */
  @javax.annotation.Nullable
  public ForceAlignment getEnemyForceAlignment() {
    return enemyForceAlignment;
  }

  public void setEnemyForceAlignment(ForceAlignment enemyForceAlignment) {
    this.enemyForceAlignment = enemyForceAlignment;
  }


  public CampaignMissionEnemyPreview enemyRelicTier(RelicTier enemyRelicTier) {
    this.enemyRelicTier = enemyRelicTier;
    return this;
  }

  /**
   * Get enemyRelicTier
   * @return enemyRelicTier
   */
  @javax.annotation.Nullable
  public RelicTier getEnemyRelicTier() {
    return enemyRelicTier;
  }

  public void setEnemyRelicTier(RelicTier enemyRelicTier) {
    this.enemyRelicTier = enemyRelicTier;
  }


  public CampaignMissionEnemyPreview zetaCount(Integer zetaCount) {
    this.zetaCount = zetaCount;
    return this;
  }

  /**
   * Get zetaCount
   * @return zetaCount
   */
  @javax.annotation.Nullable
  public Integer getZetaCount() {
    return zetaCount;
  }

  public void setZetaCount(Integer zetaCount) {
    this.zetaCount = zetaCount;
  }


  public CampaignMissionEnemyPreview isGalacticLegend(Boolean isGalacticLegend) {
    this.isGalacticLegend = isGalacticLegend;
    return this;
  }

  /**
   * Get isGalacticLegend
   * @return isGalacticLegend
   */
  @javax.annotation.Nullable
  public Boolean getIsGalacticLegend() {
    return isGalacticLegend;
  }

  public void setIsGalacticLegend(Boolean isGalacticLegend) {
    this.isGalacticLegend = isGalacticLegend;
  }


  public CampaignMissionEnemyPreview isUltimateUnlocked(Boolean isUltimateUnlocked) {
    this.isUltimateUnlocked = isUltimateUnlocked;
    return this;
  }

  /**
   * Get isUltimateUnlocked
   * @return isUltimateUnlocked
   */
  @javax.annotation.Nullable
  public Boolean getIsUltimateUnlocked() {
    return isUltimateUnlocked;
  }

  public void setIsUltimateUnlocked(Boolean isUltimateUnlocked) {
    this.isUltimateUnlocked = isUltimateUnlocked;
  }


  public CampaignMissionEnemyPreview omicronCount(Integer omicronCount) {
    this.omicronCount = omicronCount;
    return this;
  }

  /**
   * Get omicronCount
   * @return omicronCount
   */
  @javax.annotation.Nullable
  public Integer getOmicronCount() {
    return omicronCount;
  }

  public void setOmicronCount(Integer omicronCount) {
    this.omicronCount = omicronCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignMissionEnemyPreview campaignMissionEnemyPreview = (CampaignMissionEnemyPreview) o;
    return Objects.equals(this.baseEnemyItem, campaignMissionEnemyPreview.baseEnemyItem) &&
        Objects.equals(this.enemyLevel, campaignMissionEnemyPreview.enemyLevel) &&
        Objects.equals(this.enemyTier, campaignMissionEnemyPreview.enemyTier) &&
        Objects.equals(this.threatLevel, campaignMissionEnemyPreview.threatLevel) &&
        Objects.equals(this.thumbnailName, campaignMissionEnemyPreview.thumbnailName) &&
        Objects.equals(this.prefabName, campaignMissionEnemyPreview.prefabName) &&
        Objects.equals(this.displayedEnemy, campaignMissionEnemyPreview.displayedEnemy) &&
        Objects.equals(this.unitClass, campaignMissionEnemyPreview.unitClass) &&
        Objects.equals(this.enemyForceAlignment, campaignMissionEnemyPreview.enemyForceAlignment) &&
        Objects.equals(this.enemyRelicTier, campaignMissionEnemyPreview.enemyRelicTier) &&
        Objects.equals(this.zetaCount, campaignMissionEnemyPreview.zetaCount) &&
        Objects.equals(this.isGalacticLegend, campaignMissionEnemyPreview.isGalacticLegend) &&
        Objects.equals(this.isUltimateUnlocked, campaignMissionEnemyPreview.isUltimateUnlocked) &&
        Objects.equals(this.omicronCount, campaignMissionEnemyPreview.omicronCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseEnemyItem, enemyLevel, enemyTier, threatLevel, thumbnailName, prefabName, displayedEnemy, unitClass, enemyForceAlignment, enemyRelicTier, zetaCount, isGalacticLegend, isUltimateUnlocked, omicronCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignMissionEnemyPreview {\n");
    sb.append("    baseEnemyItem: ").append(toIndentedString(baseEnemyItem)).append("\n");
    sb.append("    enemyLevel: ").append(toIndentedString(enemyLevel)).append("\n");
    sb.append("    enemyTier: ").append(toIndentedString(enemyTier)).append("\n");
    sb.append("    threatLevel: ").append(toIndentedString(threatLevel)).append("\n");
    sb.append("    thumbnailName: ").append(toIndentedString(thumbnailName)).append("\n");
    sb.append("    prefabName: ").append(toIndentedString(prefabName)).append("\n");
    sb.append("    displayedEnemy: ").append(toIndentedString(displayedEnemy)).append("\n");
    sb.append("    unitClass: ").append(toIndentedString(unitClass)).append("\n");
    sb.append("    enemyForceAlignment: ").append(toIndentedString(enemyForceAlignment)).append("\n");
    sb.append("    enemyRelicTier: ").append(toIndentedString(enemyRelicTier)).append("\n");
    sb.append("    zetaCount: ").append(toIndentedString(zetaCount)).append("\n");
    sb.append("    isGalacticLegend: ").append(toIndentedString(isGalacticLegend)).append("\n");
    sb.append("    isUltimateUnlocked: ").append(toIndentedString(isUltimateUnlocked)).append("\n");
    sb.append("    omicronCount: ").append(toIndentedString(omicronCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("baseEnemyItem");
    openapiFields.add("enemyLevel");
    openapiFields.add("enemyTier");
    openapiFields.add("threatLevel");
    openapiFields.add("thumbnailName");
    openapiFields.add("prefabName");
    openapiFields.add("displayedEnemy");
    openapiFields.add("unitClass");
    openapiFields.add("enemyForceAlignment");
    openapiFields.add("enemyRelicTier");
    openapiFields.add("zetaCount");
    openapiFields.add("isGalacticLegend");
    openapiFields.add("isUltimateUnlocked");
    openapiFields.add("omicronCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CampaignMissionEnemyPreview
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CampaignMissionEnemyPreview.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CampaignMissionEnemyPreview is not found in the empty JSON string", CampaignMissionEnemyPreview.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CampaignMissionEnemyPreview.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CampaignMissionEnemyPreview` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `baseEnemyItem`
      if (jsonObj.get("baseEnemyItem") != null && !jsonObj.get("baseEnemyItem").isJsonNull()) {
        BucketItem.validateJsonElement(jsonObj.get("baseEnemyItem"));
      }
      // validate the optional field `enemyTier`
      if (jsonObj.get("enemyTier") != null && !jsonObj.get("enemyTier").isJsonNull()) {
        UnitTier.validateJsonElement(jsonObj.get("enemyTier"));
      }
      // validate the optional field `threatLevel`
      if (jsonObj.get("threatLevel") != null && !jsonObj.get("threatLevel").isJsonNull()) {
        ThreatLevel.validateJsonElement(jsonObj.get("threatLevel"));
      }
      if ((jsonObj.get("thumbnailName") != null && !jsonObj.get("thumbnailName").isJsonNull()) && !jsonObj.get("thumbnailName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumbnailName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumbnailName").toString()));
      }
      if ((jsonObj.get("prefabName") != null && !jsonObj.get("prefabName").isJsonNull()) && !jsonObj.get("prefabName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefabName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefabName").toString()));
      }
      // validate the optional field `unitClass`
      if (jsonObj.get("unitClass") != null && !jsonObj.get("unitClass").isJsonNull()) {
        UnitClass.validateJsonElement(jsonObj.get("unitClass"));
      }
      // validate the optional field `enemyForceAlignment`
      if (jsonObj.get("enemyForceAlignment") != null && !jsonObj.get("enemyForceAlignment").isJsonNull()) {
        ForceAlignment.validateJsonElement(jsonObj.get("enemyForceAlignment"));
      }
      // validate the optional field `enemyRelicTier`
      if (jsonObj.get("enemyRelicTier") != null && !jsonObj.get("enemyRelicTier").isJsonNull()) {
        RelicTier.validateJsonElement(jsonObj.get("enemyRelicTier"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CampaignMissionEnemyPreview.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CampaignMissionEnemyPreview' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CampaignMissionEnemyPreview> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CampaignMissionEnemyPreview.class));

       return (TypeAdapter<T>) new TypeAdapter<CampaignMissionEnemyPreview>() {
           @Override
           public void write(JsonWriter out, CampaignMissionEnemyPreview value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CampaignMissionEnemyPreview read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CampaignMissionEnemyPreview given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CampaignMissionEnemyPreview
   * @throws IOException if the JSON string is invalid with respect to CampaignMissionEnemyPreview
   */
  public static CampaignMissionEnemyPreview fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CampaignMissionEnemyPreview.class);
  }

  /**
   * Convert an instance of CampaignMissionEnemyPreview to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

