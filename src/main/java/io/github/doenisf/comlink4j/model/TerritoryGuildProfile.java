/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.comlink4j.JSON;

/**
 * TerritoryGuildProfile
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-05T21:53:04.897531600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class TerritoryGuildProfile {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LOGO_BACKGROUND = "logoBackground";
  @SerializedName(SERIALIZED_NAME_LOGO_BACKGROUND)
  private String logoBackground;

  public static final String SERIALIZED_NAME_BANNER_COLOR_ID = "bannerColorId";
  @SerializedName(SERIALIZED_NAME_BANNER_COLOR_ID)
  private String bannerColorId;

  public static final String SERIALIZED_NAME_BANNER_LOGO_ID = "bannerLogoId";
  @SerializedName(SERIALIZED_NAME_BANNER_LOGO_ID)
  private String bannerLogoId;

  public static final String SERIALIZED_NAME_GUILD_GALACTIC_POWER = "guildGalacticPower";
  @SerializedName(SERIALIZED_NAME_GUILD_GALACTIC_POWER)
  private Long guildGalacticPower;

  public TerritoryGuildProfile() {
  }

  public TerritoryGuildProfile id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TerritoryGuildProfile name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TerritoryGuildProfile logoBackground(String logoBackground) {
    this.logoBackground = logoBackground;
    return this;
  }

  /**
   * Get logoBackground
   * @return logoBackground
   */
  @javax.annotation.Nullable
  public String getLogoBackground() {
    return logoBackground;
  }

  public void setLogoBackground(String logoBackground) {
    this.logoBackground = logoBackground;
  }


  public TerritoryGuildProfile bannerColorId(String bannerColorId) {
    this.bannerColorId = bannerColorId;
    return this;
  }

  /**
   * Get bannerColorId
   * @return bannerColorId
   */
  @javax.annotation.Nullable
  public String getBannerColorId() {
    return bannerColorId;
  }

  public void setBannerColorId(String bannerColorId) {
    this.bannerColorId = bannerColorId;
  }


  public TerritoryGuildProfile bannerLogoId(String bannerLogoId) {
    this.bannerLogoId = bannerLogoId;
    return this;
  }

  /**
   * Get bannerLogoId
   * @return bannerLogoId
   */
  @javax.annotation.Nullable
  public String getBannerLogoId() {
    return bannerLogoId;
  }

  public void setBannerLogoId(String bannerLogoId) {
    this.bannerLogoId = bannerLogoId;
  }


  public TerritoryGuildProfile guildGalacticPower(Long guildGalacticPower) {
    this.guildGalacticPower = guildGalacticPower;
    return this;
  }

  /**
   * Get guildGalacticPower
   * @return guildGalacticPower
   */
  @javax.annotation.Nullable
  public Long getGuildGalacticPower() {
    return guildGalacticPower;
  }

  public void setGuildGalacticPower(Long guildGalacticPower) {
    this.guildGalacticPower = guildGalacticPower;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerritoryGuildProfile territoryGuildProfile = (TerritoryGuildProfile) o;
    return Objects.equals(this.id, territoryGuildProfile.id) &&
        Objects.equals(this.name, territoryGuildProfile.name) &&
        Objects.equals(this.logoBackground, territoryGuildProfile.logoBackground) &&
        Objects.equals(this.bannerColorId, territoryGuildProfile.bannerColorId) &&
        Objects.equals(this.bannerLogoId, territoryGuildProfile.bannerLogoId) &&
        Objects.equals(this.guildGalacticPower, territoryGuildProfile.guildGalacticPower);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, logoBackground, bannerColorId, bannerLogoId, guildGalacticPower);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerritoryGuildProfile {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    logoBackground: ").append(toIndentedString(logoBackground)).append("\n");
    sb.append("    bannerColorId: ").append(toIndentedString(bannerColorId)).append("\n");
    sb.append("    bannerLogoId: ").append(toIndentedString(bannerLogoId)).append("\n");
    sb.append("    guildGalacticPower: ").append(toIndentedString(guildGalacticPower)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("logoBackground");
    openapiFields.add("bannerColorId");
    openapiFields.add("bannerLogoId");
    openapiFields.add("guildGalacticPower");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TerritoryGuildProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TerritoryGuildProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TerritoryGuildProfile is not found in the empty JSON string", TerritoryGuildProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TerritoryGuildProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TerritoryGuildProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("logoBackground") != null && !jsonObj.get("logoBackground").isJsonNull()) && !jsonObj.get("logoBackground").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logoBackground` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logoBackground").toString()));
      }
      if ((jsonObj.get("bannerColorId") != null && !jsonObj.get("bannerColorId").isJsonNull()) && !jsonObj.get("bannerColorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerColorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerColorId").toString()));
      }
      if ((jsonObj.get("bannerLogoId") != null && !jsonObj.get("bannerLogoId").isJsonNull()) && !jsonObj.get("bannerLogoId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bannerLogoId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bannerLogoId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TerritoryGuildProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TerritoryGuildProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TerritoryGuildProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TerritoryGuildProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<TerritoryGuildProfile>() {
           @Override
           public void write(JsonWriter out, TerritoryGuildProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TerritoryGuildProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TerritoryGuildProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TerritoryGuildProfile
   * @throws IOException if the JSON string is invalid with respect to TerritoryGuildProfile
   */
  public static TerritoryGuildProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TerritoryGuildProfile.class);
  }

  /**
   * Convert an instance of TerritoryGuildProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

