/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.JSON;

import java.io.IOException;
import java.util.*;

/**
 * GuildMember
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-04T16:29:17.254694600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class GuildMember {
  public static final String SERIALIZED_NAME_PLAYER_ID = "playerId";
  @SerializedName(SERIALIZED_NAME_PLAYER_ID)
  private String playerId;

  public static final String SERIALIZED_NAME_PLAYER_NAME = "playerName";
  @SerializedName(SERIALIZED_NAME_PLAYER_NAME)
  private String playerName;

  public static final String SERIALIZED_NAME_PLAYER_LEVEL = "playerLevel";
  @SerializedName(SERIALIZED_NAME_PLAYER_LEVEL)
  private Integer playerLevel;

  public static final String SERIALIZED_NAME_MEMBER_LEVEL = "memberLevel";
  @SerializedName(SERIALIZED_NAME_MEMBER_LEVEL)
  private GuildMemberLevel memberLevel;

  public static final String SERIALIZED_NAME_GUILD_XP = "guildXp";
  @SerializedName(SERIALIZED_NAME_GUILD_XP)
  private Integer guildXp;

  public static final String SERIALIZED_NAME_LAST_ACTIVITY_TIME = "lastActivityTime";
  @SerializedName(SERIALIZED_NAME_LAST_ACTIVITY_TIME)
  private Long lastActivityTime;

  public static final String SERIALIZED_NAME_SQUAD_POWER = "squadPower";
  @SerializedName(SERIALIZED_NAME_SQUAD_POWER)
  private Integer squadPower;

  public static final String SERIALIZED_NAME_MEMBER_CONTRIBUTION = "memberContribution";
  @SerializedName(SERIALIZED_NAME_MEMBER_CONTRIBUTION)
  private List<GuildMemberContribution> memberContribution = new ArrayList<>();

  public static final String SERIALIZED_NAME_GUILD_JOIN_TIME = "guildJoinTime";
  @SerializedName(SERIALIZED_NAME_GUILD_JOIN_TIME)
  private Long guildJoinTime;

  public static final String SERIALIZED_NAME_GALACTIC_POWER = "galacticPower";
  @SerializedName(SERIALIZED_NAME_GALACTIC_POWER)
  private Long galacticPower;

  public static final String SERIALIZED_NAME_PLAYER_TITLE = "playerTitle";
  @SerializedName(SERIALIZED_NAME_PLAYER_TITLE)
  private String playerTitle;

  public static final String SERIALIZED_NAME_PLAYER_PORTRAIT = "playerPortrait";
  @SerializedName(SERIALIZED_NAME_PLAYER_PORTRAIT)
  private String playerPortrait;

  public static final String SERIALIZED_NAME_SEASON_STATUS = "seasonStatus";
  @SerializedName(SERIALIZED_NAME_SEASON_STATUS)
  private List<SeasonStatus> seasonStatus = new ArrayList<>();

  public static final String SERIALIZED_NAME_LIFETIME_SEASON_SCORE = "lifetimeSeasonScore";
  @SerializedName(SERIALIZED_NAME_LIFETIME_SEASON_SCORE)
  private Long lifetimeSeasonScore;

  public static final String SERIALIZED_NAME_LEAGUE_ID = "leagueId";
  @SerializedName(SERIALIZED_NAME_LEAGUE_ID)
  private String leagueId;

  public static final String SERIALIZED_NAME_SHIP_GALACTIC_POWER = "shipGalacticPower";
  @SerializedName(SERIALIZED_NAME_SHIP_GALACTIC_POWER)
  private Long shipGalacticPower;

  public static final String SERIALIZED_NAME_CHARACTER_GALACTIC_POWER = "characterGalacticPower";
  @SerializedName(SERIALIZED_NAME_CHARACTER_GALACTIC_POWER)
  private Long characterGalacticPower;

  public static final String SERIALIZED_NAME_NUCLEUS_ID = "nucleusId";
  @SerializedName(SERIALIZED_NAME_NUCLEUS_ID)
  private String nucleusId;

  public GuildMember() {
  }

  public GuildMember playerId(String playerId) {
    this.playerId = playerId;
    return this;
  }

  /**
   * Get playerId
   * @return playerId
   */
  @javax.annotation.Nullable
  public String getPlayerId() {
    return playerId;
  }

  public void setPlayerId(String playerId) {
    this.playerId = playerId;
  }


  public GuildMember playerName(String playerName) {
    this.playerName = playerName;
    return this;
  }

  /**
   * Get playerName
   * @return playerName
   */
  @javax.annotation.Nullable
  public String getPlayerName() {
    return playerName;
  }

  public void setPlayerName(String playerName) {
    this.playerName = playerName;
  }


  public GuildMember playerLevel(Integer playerLevel) {
    this.playerLevel = playerLevel;
    return this;
  }

  /**
   * Get playerLevel
   * @return playerLevel
   */
  @javax.annotation.Nullable
  public Integer getPlayerLevel() {
    return playerLevel;
  }

  public void setPlayerLevel(Integer playerLevel) {
    this.playerLevel = playerLevel;
  }


  public GuildMember memberLevel(GuildMemberLevel memberLevel) {
    this.memberLevel = memberLevel;
    return this;
  }

  /**
   * Get memberLevel
   * @return memberLevel
   */
  @javax.annotation.Nullable
  public GuildMemberLevel getMemberLevel() {
    return memberLevel;
  }

  public void setMemberLevel(GuildMemberLevel memberLevel) {
    this.memberLevel = memberLevel;
  }


  public GuildMember guildXp(Integer guildXp) {
    this.guildXp = guildXp;
    return this;
  }

  /**
   * Get guildXp
   * @return guildXp
   */
  @javax.annotation.Nullable
  public Integer getGuildXp() {
    return guildXp;
  }

  public void setGuildXp(Integer guildXp) {
    this.guildXp = guildXp;
  }


  public GuildMember lastActivityTime(Long lastActivityTime) {
    this.lastActivityTime = lastActivityTime;
    return this;
  }

  /**
   * Get lastActivityTime
   * @return lastActivityTime
   */
  @javax.annotation.Nullable
  public Long getLastActivityTime() {
    return lastActivityTime;
  }

  public void setLastActivityTime(Long lastActivityTime) {
    this.lastActivityTime = lastActivityTime;
  }


  public GuildMember squadPower(Integer squadPower) {
    this.squadPower = squadPower;
    return this;
  }

  /**
   * Get squadPower
   * @return squadPower
   */
  @javax.annotation.Nullable
  public Integer getSquadPower() {
    return squadPower;
  }

  public void setSquadPower(Integer squadPower) {
    this.squadPower = squadPower;
  }


  public GuildMember memberContribution(List<GuildMemberContribution> memberContribution) {
    this.memberContribution = memberContribution;
    return this;
  }

  public GuildMember addMemberContributionItem(GuildMemberContribution memberContributionItem) {
    if (this.memberContribution == null) {
      this.memberContribution = new ArrayList<>();
    }
    this.memberContribution.add(memberContributionItem);
    return this;
  }

  /**
   * Get memberContribution
   * @return memberContribution
   */
  @javax.annotation.Nullable
  public List<GuildMemberContribution> getMemberContribution() {
    return memberContribution;
  }

  public void setMemberContribution(List<GuildMemberContribution> memberContribution) {
    this.memberContribution = memberContribution;
  }


  public GuildMember guildJoinTime(Long guildJoinTime) {
    this.guildJoinTime = guildJoinTime;
    return this;
  }

  /**
   * Get guildJoinTime
   * @return guildJoinTime
   */
  @javax.annotation.Nullable
  public Long getGuildJoinTime() {
    return guildJoinTime;
  }

  public void setGuildJoinTime(Long guildJoinTime) {
    this.guildJoinTime = guildJoinTime;
  }


  public GuildMember galacticPower(Long galacticPower) {
    this.galacticPower = galacticPower;
    return this;
  }

  /**
   * Get galacticPower
   * @return galacticPower
   */
  @javax.annotation.Nullable
  public Long getGalacticPower() {
    return galacticPower;
  }

  public void setGalacticPower(Long galacticPower) {
    this.galacticPower = galacticPower;
  }


  public GuildMember playerTitle(String playerTitle) {
    this.playerTitle = playerTitle;
    return this;
  }

  /**
   * Get playerTitle
   * @return playerTitle
   */
  @javax.annotation.Nullable
  public String getPlayerTitle() {
    return playerTitle;
  }

  public void setPlayerTitle(String playerTitle) {
    this.playerTitle = playerTitle;
  }


  public GuildMember playerPortrait(String playerPortrait) {
    this.playerPortrait = playerPortrait;
    return this;
  }

  /**
   * Get playerPortrait
   * @return playerPortrait
   */
  @javax.annotation.Nullable
  public String getPlayerPortrait() {
    return playerPortrait;
  }

  public void setPlayerPortrait(String playerPortrait) {
    this.playerPortrait = playerPortrait;
  }


  public GuildMember seasonStatus(List<SeasonStatus> seasonStatus) {
    this.seasonStatus = seasonStatus;
    return this;
  }

  public GuildMember addSeasonStatusItem(SeasonStatus seasonStatusItem) {
    if (this.seasonStatus == null) {
      this.seasonStatus = new ArrayList<>();
    }
    this.seasonStatus.add(seasonStatusItem);
    return this;
  }

  /**
   * Get seasonStatus
   * @return seasonStatus
   */
  @javax.annotation.Nullable
  public List<SeasonStatus> getSeasonStatus() {
    return seasonStatus;
  }

  public void setSeasonStatus(List<SeasonStatus> seasonStatus) {
    this.seasonStatus = seasonStatus;
  }


  public GuildMember lifetimeSeasonScore(Long lifetimeSeasonScore) {
    this.lifetimeSeasonScore = lifetimeSeasonScore;
    return this;
  }

  /**
   * Get lifetimeSeasonScore
   * @return lifetimeSeasonScore
   */
  @javax.annotation.Nullable
  public Long getLifetimeSeasonScore() {
    return lifetimeSeasonScore;
  }

  public void setLifetimeSeasonScore(Long lifetimeSeasonScore) {
    this.lifetimeSeasonScore = lifetimeSeasonScore;
  }


  public GuildMember leagueId(String leagueId) {
    this.leagueId = leagueId;
    return this;
  }

  /**
   * Get leagueId
   * @return leagueId
   */
  @javax.annotation.Nullable
  public String getLeagueId() {
    return leagueId;
  }

  public void setLeagueId(String leagueId) {
    this.leagueId = leagueId;
  }


  public GuildMember shipGalacticPower(Long shipGalacticPower) {
    this.shipGalacticPower = shipGalacticPower;
    return this;
  }

  /**
   * Get shipGalacticPower
   * @return shipGalacticPower
   */
  @javax.annotation.Nullable
  public Long getShipGalacticPower() {
    return shipGalacticPower;
  }

  public void setShipGalacticPower(Long shipGalacticPower) {
    this.shipGalacticPower = shipGalacticPower;
  }


  public GuildMember characterGalacticPower(Long characterGalacticPower) {
    this.characterGalacticPower = characterGalacticPower;
    return this;
  }

  /**
   * Get characterGalacticPower
   * @return characterGalacticPower
   */
  @javax.annotation.Nullable
  public Long getCharacterGalacticPower() {
    return characterGalacticPower;
  }

  public void setCharacterGalacticPower(Long characterGalacticPower) {
    this.characterGalacticPower = characterGalacticPower;
  }


  public GuildMember nucleusId(String nucleusId) {
    this.nucleusId = nucleusId;
    return this;
  }

  /**
   * Get nucleusId
   * @return nucleusId
   */
  @javax.annotation.Nullable
  public String getNucleusId() {
    return nucleusId;
  }

  public void setNucleusId(String nucleusId) {
    this.nucleusId = nucleusId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GuildMember guildMember = (GuildMember) o;
    return Objects.equals(this.playerId, guildMember.playerId) &&
        Objects.equals(this.playerName, guildMember.playerName) &&
        Objects.equals(this.playerLevel, guildMember.playerLevel) &&
        Objects.equals(this.memberLevel, guildMember.memberLevel) &&
        Objects.equals(this.guildXp, guildMember.guildXp) &&
        Objects.equals(this.lastActivityTime, guildMember.lastActivityTime) &&
        Objects.equals(this.squadPower, guildMember.squadPower) &&
        Objects.equals(this.memberContribution, guildMember.memberContribution) &&
        Objects.equals(this.guildJoinTime, guildMember.guildJoinTime) &&
        Objects.equals(this.galacticPower, guildMember.galacticPower) &&
        Objects.equals(this.playerTitle, guildMember.playerTitle) &&
        Objects.equals(this.playerPortrait, guildMember.playerPortrait) &&
        Objects.equals(this.seasonStatus, guildMember.seasonStatus) &&
        Objects.equals(this.lifetimeSeasonScore, guildMember.lifetimeSeasonScore) &&
        Objects.equals(this.leagueId, guildMember.leagueId) &&
        Objects.equals(this.shipGalacticPower, guildMember.shipGalacticPower) &&
        Objects.equals(this.characterGalacticPower, guildMember.characterGalacticPower) &&
        Objects.equals(this.nucleusId, guildMember.nucleusId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(playerId, playerName, playerLevel, memberLevel, guildXp, lastActivityTime, squadPower, memberContribution, guildJoinTime, galacticPower, playerTitle, playerPortrait, seasonStatus, lifetimeSeasonScore, leagueId, shipGalacticPower, characterGalacticPower, nucleusId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GuildMember {\n");
    sb.append("    playerId: ").append(toIndentedString(playerId)).append("\n");
    sb.append("    playerName: ").append(toIndentedString(playerName)).append("\n");
    sb.append("    playerLevel: ").append(toIndentedString(playerLevel)).append("\n");
    sb.append("    memberLevel: ").append(toIndentedString(memberLevel)).append("\n");
    sb.append("    guildXp: ").append(toIndentedString(guildXp)).append("\n");
    sb.append("    lastActivityTime: ").append(toIndentedString(lastActivityTime)).append("\n");
    sb.append("    squadPower: ").append(toIndentedString(squadPower)).append("\n");
    sb.append("    memberContribution: ").append(toIndentedString(memberContribution)).append("\n");
    sb.append("    guildJoinTime: ").append(toIndentedString(guildJoinTime)).append("\n");
    sb.append("    galacticPower: ").append(toIndentedString(galacticPower)).append("\n");
    sb.append("    playerTitle: ").append(toIndentedString(playerTitle)).append("\n");
    sb.append("    playerPortrait: ").append(toIndentedString(playerPortrait)).append("\n");
    sb.append("    seasonStatus: ").append(toIndentedString(seasonStatus)).append("\n");
    sb.append("    lifetimeSeasonScore: ").append(toIndentedString(lifetimeSeasonScore)).append("\n");
    sb.append("    leagueId: ").append(toIndentedString(leagueId)).append("\n");
    sb.append("    shipGalacticPower: ").append(toIndentedString(shipGalacticPower)).append("\n");
    sb.append("    characterGalacticPower: ").append(toIndentedString(characterGalacticPower)).append("\n");
    sb.append("    nucleusId: ").append(toIndentedString(nucleusId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("playerId");
    openapiFields.add("playerName");
    openapiFields.add("playerLevel");
    openapiFields.add("memberLevel");
    openapiFields.add("guildXp");
    openapiFields.add("lastActivityTime");
    openapiFields.add("squadPower");
    openapiFields.add("memberContribution");
    openapiFields.add("guildJoinTime");
    openapiFields.add("galacticPower");
    openapiFields.add("playerTitle");
    openapiFields.add("playerPortrait");
    openapiFields.add("seasonStatus");
    openapiFields.add("lifetimeSeasonScore");
    openapiFields.add("leagueId");
    openapiFields.add("shipGalacticPower");
    openapiFields.add("characterGalacticPower");
    openapiFields.add("nucleusId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GuildMember
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GuildMember.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GuildMember is not found in the empty JSON string", GuildMember.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GuildMember.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GuildMember` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("playerId") != null && !jsonObj.get("playerId").isJsonNull()) && !jsonObj.get("playerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `playerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("playerId").toString()));
      }
      if ((jsonObj.get("playerName") != null && !jsonObj.get("playerName").isJsonNull()) && !jsonObj.get("playerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `playerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("playerName").toString()));
      }
      // validate the optional field `memberLevel`
      if (jsonObj.get("memberLevel") != null && !jsonObj.get("memberLevel").isJsonNull()) {
        GuildMemberLevel.validateJsonElement(jsonObj.get("memberLevel"));
      }
      if (jsonObj.get("memberContribution") != null && !jsonObj.get("memberContribution").isJsonNull()) {
        JsonArray jsonArraymemberContribution = jsonObj.getAsJsonArray("memberContribution");
        if (jsonArraymemberContribution != null) {
          // ensure the json data is an array
          if (!jsonObj.get("memberContribution").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `memberContribution` to be an array in the JSON string but got `%s`", jsonObj.get("memberContribution").toString()));
          }

          // validate the optional field `memberContribution` (array)
          for (int i = 0; i < jsonArraymemberContribution.size(); i++) {
            GuildMemberContribution.validateJsonElement(jsonArraymemberContribution.get(i));
          };
        }
      }
      if ((jsonObj.get("playerTitle") != null && !jsonObj.get("playerTitle").isJsonNull()) && !jsonObj.get("playerTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `playerTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("playerTitle").toString()));
      }
      if ((jsonObj.get("playerPortrait") != null && !jsonObj.get("playerPortrait").isJsonNull()) && !jsonObj.get("playerPortrait").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `playerPortrait` to be a primitive type in the JSON string but got `%s`", jsonObj.get("playerPortrait").toString()));
      }
      if (jsonObj.get("seasonStatus") != null && !jsonObj.get("seasonStatus").isJsonNull()) {
        JsonArray jsonArrayseasonStatus = jsonObj.getAsJsonArray("seasonStatus");
        if (jsonArrayseasonStatus != null) {
          // ensure the json data is an array
          if (!jsonObj.get("seasonStatus").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `seasonStatus` to be an array in the JSON string but got `%s`", jsonObj.get("seasonStatus").toString()));
          }

          // validate the optional field `seasonStatus` (array)
          for (int i = 0; i < jsonArrayseasonStatus.size(); i++) {
            SeasonStatus.validateJsonElement(jsonArrayseasonStatus.get(i));
          };
        }
      }
      if ((jsonObj.get("leagueId") != null && !jsonObj.get("leagueId").isJsonNull()) && !jsonObj.get("leagueId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `leagueId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("leagueId").toString()));
      }
      if ((jsonObj.get("nucleusId") != null && !jsonObj.get("nucleusId").isJsonNull()) && !jsonObj.get("nucleusId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nucleusId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nucleusId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GuildMember.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GuildMember' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GuildMember> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GuildMember.class));

       return (TypeAdapter<T>) new TypeAdapter<GuildMember>() {
           @Override
           public void write(JsonWriter out, GuildMember value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GuildMember read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GuildMember given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GuildMember
   * @throws IOException if the JSON string is invalid with respect to GuildMember
   */
  public static GuildMember fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GuildMember.class);
  }

  /**
   * Convert an instance of GuildMember to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

