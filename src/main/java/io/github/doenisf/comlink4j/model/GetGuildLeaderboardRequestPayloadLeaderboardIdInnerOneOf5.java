/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.JSON;

/**
 * Leaderboard type - &#39;high water mark&#39;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-04T16:29:17.254694600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 {
  public static final String SERIALIZED_NAME_LEADERBOARD_TYPE = "leaderboardType";
  @SerializedName(SERIALIZED_NAME_LEADERBOARD_TYPE)
  private Object leaderboardType = null;

  public static final String SERIALIZED_NAME_DEF_ID = "defId";
  @SerializedName(SERIALIZED_NAME_DEF_ID)
  private String defId;

  /**
   * Gets or Sets monthOffset
   */
  @JsonAdapter(MonthOffsetEnum.Adapter.class)
  public enum MonthOffsetEnum {
    NUMBER_0(new BigDecimal("0")),
    
    NUMBER_1(new BigDecimal("1"));

    private BigDecimal value;

    MonthOffsetEnum(BigDecimal value) {
      this.value = value;
    }

    public BigDecimal getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MonthOffsetEnum fromValue(BigDecimal value) {
      for (MonthOffsetEnum b : MonthOffsetEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MonthOffsetEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MonthOffsetEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MonthOffsetEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MonthOffsetEnum.fromValue(new BigDecimal(value));
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MonthOffsetEnum.fromValue(new BigDecimal(value));
    }
  }

  public static final String SERIALIZED_NAME_MONTH_OFFSET = "monthOffset";
  @SerializedName(SERIALIZED_NAME_MONTH_OFFSET)
  private MonthOffsetEnum monthOffset;

  public GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5() {
  }

  public GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 leaderboardType(Object leaderboardType) {
    this.leaderboardType = leaderboardType;
    return this;
  }

  /**
   * Get leaderboardType
   * @return leaderboardType
   */
  @javax.annotation.Nullable
  public Object getLeaderboardType() {
    return leaderboardType;
  }

  public void setLeaderboardType(Object leaderboardType) {
    this.leaderboardType = leaderboardType;
  }


  public GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 defId(String defId) {
    this.defId = defId;
    return this;
  }

  /**
   * Values such as &#x60;GUILD:RAIDS:NORMAL_DIFF:SITH_RAID:DIFF06&#x60;.  Known values are &#x60;SITH_RAID:DIFF06&#x60; and &#x60;HEROIC85&#x60;, &#x60;AAT:DIFF06&#x60; and &#x60;HEROIC80&#x60;, &#x60;RANCOR:DIFF01&#x60; through &#x60;DIFF06&#x60;, &#x60;KRAYTDRAGON:DIFF01&#x60;, and &#x60;ROTJ:SPEEDERBIKE&#x60;
   * @return defId
   */
  @javax.annotation.Nullable
  public String getDefId() {
    return defId;
  }

  public void setDefId(String defId) {
    this.defId = defId;
  }


  public GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 monthOffset(MonthOffsetEnum monthOffset) {
    this.monthOffset = monthOffset;
    return this;
  }

  /**
   * Get monthOffset
   * @return monthOffset
   */
  @javax.annotation.Nullable
  public MonthOffsetEnum getMonthOffset() {
    return monthOffset;
  }

  public void setMonthOffset(MonthOffsetEnum monthOffset) {
    this.monthOffset = monthOffset;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 getGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 = (GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5) o;
    return Objects.equals(this.leaderboardType, getGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5.leaderboardType) &&
        Objects.equals(this.defId, getGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5.defId) &&
        Objects.equals(this.monthOffset, getGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5.monthOffset);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(leaderboardType, defId, monthOffset);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 {\n");
    sb.append("    leaderboardType: ").append(toIndentedString(leaderboardType)).append("\n");
    sb.append("    defId: ").append(toIndentedString(defId)).append("\n");
    sb.append("    monthOffset: ").append(toIndentedString(monthOffset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("leaderboardType");
    openapiFields.add("defId");
    openapiFields.add("monthOffset");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 is not found in the empty JSON string", GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("defId") != null && !jsonObj.get("defId").isJsonNull()) && !jsonObj.get("defId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defId").toString()));
      }
      // validate the optional field `monthOffset`
      if (jsonObj.get("monthOffset") != null && !jsonObj.get("monthOffset").isJsonNull()) {
        MonthOffsetEnum.validateJsonElement(jsonObj.get("monthOffset"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5.class));

       return (TypeAdapter<T>) new TypeAdapter<GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5>() {
           @Override
           public void write(JsonWriter out, GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5
   * @throws IOException if the JSON string is invalid with respect to GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5
   */
  public static GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5.class);
  }

  /**
   * Convert an instance of GetGuildLeaderboardRequestPayloadLeaderboardIdInnerOneOf5 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

