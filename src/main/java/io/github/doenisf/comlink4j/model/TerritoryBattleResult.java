/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.JSON;

import java.io.IOException;
import java.util.*;

/**
 * TerritoryBattleResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-04T16:29:17.254694600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class TerritoryBattleResult {
  public static final String SERIALIZED_NAME_INSTANCE_ID = "instanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_DEFINITION_ID = "definitionId";
  @SerializedName(SERIALIZED_NAME_DEFINITION_ID)
  private String definitionId;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private Long endTime;

  public static final String SERIALIZED_NAME_TOTAL_STARS = "totalStars";
  @SerializedName(SERIALIZED_NAME_TOTAL_STARS)
  private Long totalStars;

  public static final String SERIALIZED_NAME_FINAL_STAT = "finalStat";
  @SerializedName(SERIALIZED_NAME_FINAL_STAT)
  private List<TerritoryMapStat> finalStat = new ArrayList<>();

  public TerritoryBattleResult() {
  }

  public TerritoryBattleResult instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public TerritoryBattleResult definitionId(String definitionId) {
    this.definitionId = definitionId;
    return this;
  }

  /**
   * Get definitionId
   * @return definitionId
   */
  @javax.annotation.Nullable
  public String getDefinitionId() {
    return definitionId;
  }

  public void setDefinitionId(String definitionId) {
    this.definitionId = definitionId;
  }


  public TerritoryBattleResult endTime(Long endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public Long getEndTime() {
    return endTime;
  }

  public void setEndTime(Long endTime) {
    this.endTime = endTime;
  }


  public TerritoryBattleResult totalStars(Long totalStars) {
    this.totalStars = totalStars;
    return this;
  }

  /**
   * Get totalStars
   * @return totalStars
   */
  @javax.annotation.Nullable
  public Long getTotalStars() {
    return totalStars;
  }

  public void setTotalStars(Long totalStars) {
    this.totalStars = totalStars;
  }


  public TerritoryBattleResult finalStat(List<TerritoryMapStat> finalStat) {
    this.finalStat = finalStat;
    return this;
  }

  public TerritoryBattleResult addFinalStatItem(TerritoryMapStat finalStatItem) {
    if (this.finalStat == null) {
      this.finalStat = new ArrayList<>();
    }
    this.finalStat.add(finalStatItem);
    return this;
  }

  /**
   * Get finalStat
   * @return finalStat
   */
  @javax.annotation.Nullable
  public List<TerritoryMapStat> getFinalStat() {
    return finalStat;
  }

  public void setFinalStat(List<TerritoryMapStat> finalStat) {
    this.finalStat = finalStat;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerritoryBattleResult territoryBattleResult = (TerritoryBattleResult) o;
    return Objects.equals(this.instanceId, territoryBattleResult.instanceId) &&
        Objects.equals(this.definitionId, territoryBattleResult.definitionId) &&
        Objects.equals(this.endTime, territoryBattleResult.endTime) &&
        Objects.equals(this.totalStars, territoryBattleResult.totalStars) &&
        Objects.equals(this.finalStat, territoryBattleResult.finalStat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceId, definitionId, endTime, totalStars, finalStat);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerritoryBattleResult {\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    definitionId: ").append(toIndentedString(definitionId)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    totalStars: ").append(toIndentedString(totalStars)).append("\n");
    sb.append("    finalStat: ").append(toIndentedString(finalStat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceId");
    openapiFields.add("definitionId");
    openapiFields.add("endTime");
    openapiFields.add("totalStars");
    openapiFields.add("finalStat");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TerritoryBattleResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TerritoryBattleResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TerritoryBattleResult is not found in the empty JSON string", TerritoryBattleResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TerritoryBattleResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TerritoryBattleResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("instanceId") != null && !jsonObj.get("instanceId").isJsonNull()) && !jsonObj.get("instanceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instanceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instanceId").toString()));
      }
      if ((jsonObj.get("definitionId") != null && !jsonObj.get("definitionId").isJsonNull()) && !jsonObj.get("definitionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `definitionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("definitionId").toString()));
      }
      if (jsonObj.get("finalStat") != null && !jsonObj.get("finalStat").isJsonNull()) {
        JsonArray jsonArrayfinalStat = jsonObj.getAsJsonArray("finalStat");
        if (jsonArrayfinalStat != null) {
          // ensure the json data is an array
          if (!jsonObj.get("finalStat").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `finalStat` to be an array in the JSON string but got `%s`", jsonObj.get("finalStat").toString()));
          }

          // validate the optional field `finalStat` (array)
          for (int i = 0; i < jsonArrayfinalStat.size(); i++) {
            TerritoryMapStat.validateJsonElement(jsonArrayfinalStat.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TerritoryBattleResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TerritoryBattleResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TerritoryBattleResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TerritoryBattleResult.class));

       return (TypeAdapter<T>) new TypeAdapter<TerritoryBattleResult>() {
           @Override
           public void write(JsonWriter out, TerritoryBattleResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TerritoryBattleResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TerritoryBattleResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TerritoryBattleResult
   * @throws IOException if the JSON string is invalid with respect to TerritoryBattleResult
   */
  public static TerritoryBattleResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TerritoryBattleResult.class);
  }

  /**
   * Convert an instance of TerritoryBattleResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

