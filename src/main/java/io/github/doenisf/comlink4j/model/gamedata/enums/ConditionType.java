package io.github.doenisf.comlink4j.model.gamedata.enums;

import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.util.GsonEnumAdapter;
import lombok.Getter;

import java.io.IOException;

@Getter
@GsonEnumAdapter
public enum ConditionType {
    ConditionType_DEFAULT(0),
    ROUNDCOUNT(1),
    ENDOFROUND(2),
    STARTOFROUND(3),
    STARTOFBATTLE(4),
    CHANCE(5),
    STARTOFENCOUNTER(7),
    CRIT(8),
    RECEIVECRIT(9),
    PERFORMMOVE(10),
    ATTACK(11),
    LIMITBREAK(12),
    RECEIVEDAMAGE(13),
    RECEIVEHEAL(14),
    COMBO(15),
    RECEIVECOMBO(16),
    KILL(17),
    REVIVE(18),
    ENEMYKILLED(19),
    ALLYKILLED(20),
    DEATH(21),
    ALLYREVIVED(22),
    ENEMYREVIVED(23),
    ENDOFENCOUNTER(24),
    STARTOFTURN(25),
    HEALTHDECREASE(26),
    HEALTHINCREASE(27),
    PERSISTENTEFFECTADD(28),
    PERSISTENTEFFECTREMOVE(29),
    DODGED(30),
    WASDODGED(31),
    ENDOFTURN(32),
    RESISTED(33),
    WASRESISTED(34),
    STARTMOVE(35),
    STARTATTACK(36),
    STARTLIMITBREAK(37),
    PREEFFECTEVAL(38),
    RECEIVEPREEFFECTEVAL(39),
    POSTEFFECTEVAL(40),
    RECEIVEPOSTEFFECTEVAL(41),
    PREEVASIONEVAL(42),
    RECEIVEPREEVASIONEVAL(43),
    POSTEVASIONEVAL(44),
    RECEIVEPOSTEVASIONEVAL(45),
    STARTOFGUILDRAIDFORPLAYER(46),
    STARTOFGUILDRAIDENCOUNTERFORPLAYER(47),
    PRERECEIVEDAMAGE(48),
    FULLTURNCOMPLETE(49),
    PERSISTENTEFFECTADDINSTANCE(50),
    PERSISTENTEFFECTREMOVEINSTANCE(51),
    FLED(52),
    ALLYFLED(53),
    ENEMYFLED(54),
    REINFORCED(55),
    ALLYREINFORCED(56),
    ENEMYREINFORCED(57),
    DEALDAMAGE(58),
    PERSISTENTEFFECTINFLICTED(59),
    PERSISTENTEFFECTINFLICTEDINSTANCE(60),
    DODGEDPOSTEVASIONEVAL(61),
    HEALTHMAXLIMITREACHED(62),
    HEALTHMINLIMITREACHED(63),
    RECEIVEPROTECTIONHEAL(64),
    BONUSSPEEDGAIN(65),
    BONUSSPEEDREMOVE(66),
    RECEIVEPROTECTIONHEALACTUAL(67),
    BONUSSPEEDGAINACTUAL(68),
    BONUSSPEEDREMOVEACTUAL(69),
    RECEIVEHEALACTUAL(70),
    PREDAMAGE(71),
    SUMMONED(72),
    ALLYSUMMONED(73),
    ENEMYSUMMONED(74),
    ULTIMATECHARGEINCREASED(75),
    ULTIMATECHARGEDECREASED(76),
    ULTIMATETHRESHOLDGAINED(77),
    ULTIMATETHRESHOLDLOST(78),
    ALLYTRANSFORMED(79),
    ENEMYTRANSFORMED(80),
    PERSISTENTEFFECTDISPELLED(83),
    PERSISTENTEFFECTDISPELLEDINSTANCE(84),
    PERSISTENTEFFECTWASDISPELLEDINSTANCE(85),
    PERSISTENTEFFECTWASDISPELLED(86),
    ALLYPERSISTENTEFFECTADD(87),
    ALLYPERSISTENTEFFECTADDINSTANCE(88),
    ENEMYPERSISTENTEFFECTADD(89),
    ENEMYPERSISTENTEFFECTADDINSTANCE(90),
    ALLYPERSISTENTEFFECTREMOVE(91),
    ALLYPERSISTENTEFFECTREMOVEINSTANCE(92),
    ENEMYPERSISTENTEFFECTREMOVE(93),
    ENEMYPERSISTENTEFFECTREMOVEINSTANCE(94),
    OWNERSHIPMODIFIED(95),
    ALLYOWNERSHIPMODIFIED(96),
    ENEMYOWNERSHIPMODIFIED(97),
    BLACKBOARDMINLIMITREACHED(98),
    BLACKBOARDMAXLIMITREACHED(99),
    BLACKBOARDINCREASED(100),
    BLACKBOARDDECREASED(101),
    SQUADBLACKBOARDMINLIMITREACHED(102),
    SQUADBLACKBOARDMAXLIMITREACHED(103),
    SQUADBLACKBOARDINCREASED(104),
    SQUADBLACKBOARDDECREASED(105);

    private final int value;

    ConditionType(int value) {
        this.value = value;
    }

    public static ConditionType fromValue(int value) {
        for (ConditionType conditionType : values()) {
            if (conditionType.value == value) {
                return conditionType;
            }
        }
        throw new IllegalArgumentException("Unknown value: " + value);
    }

    public static class Adapter extends TypeAdapter<ConditionType> {

        @Override
        public void write(JsonWriter out, ConditionType value) throws IOException {
            out.value(value.name());
        }

        @Override
        public ConditionType read(JsonReader in) throws IOException {
            return ConditionType.fromValue(in.nextInt());
        }
    }
}
