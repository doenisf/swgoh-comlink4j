/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.model.TerritoryMapStat;
import io.github.doenisf.comlink4j.model.TerritoryWarGuildStatus;
import io.github.doenisf.comlink4j.model.TerritoryWarParticipant;
import io.github.doenisf.comlink4j.model.TerritoryWarPlayerStatus;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.comlink4j.JSON;

/**
 * TerritoryWarStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-05T21:53:04.897531600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class TerritoryWarStatus {
  public static final String SERIALIZED_NAME_INSTANCE_ID = "instanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_DEFINITION_ID = "definitionId";
  @SerializedName(SERIALIZED_NAME_DEFINITION_ID)
  private String definitionId;

  public static final String SERIALIZED_NAME_CURRENT_ROUND = "currentRound";
  @SerializedName(SERIALIZED_NAME_CURRENT_ROUND)
  private Integer currentRound;

  public static final String SERIALIZED_NAME_CURRENT_ROUND_END_TIME = "currentRoundEndTime";
  @SerializedName(SERIALIZED_NAME_CURRENT_ROUND_END_TIME)
  private Long currentRoundEndTime;

  public static final String SERIALIZED_NAME_CHANNEL_ID = "channelId";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
  private String channelId;

  public static final String SERIALIZED_NAME_HOME_GUILD = "homeGuild";
  @SerializedName(SERIALIZED_NAME_HOME_GUILD)
  private TerritoryWarGuildStatus homeGuild;

  public static final String SERIALIZED_NAME_AWAY_GUILD = "awayGuild";
  @SerializedName(SERIALIZED_NAME_AWAY_GUILD)
  private TerritoryWarGuildStatus awayGuild;

  public static final String SERIALIZED_NAME_PLAYER_STATUS = "playerStatus";
  @SerializedName(SERIALIZED_NAME_PLAYER_STATUS)
  private TerritoryWarPlayerStatus playerStatus;

  public static final String SERIALIZED_NAME_CURRENT_STAT = "currentStat";
  @SerializedName(SERIALIZED_NAME_CURRENT_STAT)
  private List<TerritoryMapStat> currentStat = new ArrayList<>();

  public static final String SERIALIZED_NAME_OPTED_IN_MEMBER_ID = "optedInMemberId";
  @SerializedName(SERIALIZED_NAME_OPTED_IN_MEMBER_ID)
  private List<String> optedInMemberId = new ArrayList<>();

  public static final String SERIALIZED_NAME_OPTED_IN_MEMBER = "optedInMember";
  @SerializedName(SERIALIZED_NAME_OPTED_IN_MEMBER)
  private List<TerritoryWarParticipant> optedInMember = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXCLUDED_FROM_WAR = "excludedFromWar";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_FROM_WAR)
  private Boolean excludedFromWar;

  public static final String SERIALIZED_NAME_HAS_REPORTED_ENEMY_GUILD = "hasReportedEnemyGuild";
  @SerializedName(SERIALIZED_NAME_HAS_REPORTED_ENEMY_GUILD)
  private Boolean hasReportedEnemyGuild;

  public static final String SERIALIZED_NAME_LAST_COMMAND_NOTIFICATION_TIME = "lastCommandNotificationTime";
  @SerializedName(SERIALIZED_NAME_LAST_COMMAND_NOTIFICATION_TIME)
  private Long lastCommandNotificationTime;

  public static final String SERIALIZED_NAME_MAP_COMPLETED_EARLY = "mapCompletedEarly";
  @SerializedName(SERIALIZED_NAME_MAP_COMPLETED_EARLY)
  private Boolean mapCompletedEarly;

  public TerritoryWarStatus() {
  }

  public TerritoryWarStatus instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public TerritoryWarStatus definitionId(String definitionId) {
    this.definitionId = definitionId;
    return this;
  }

  /**
   * Get definitionId
   * @return definitionId
   */
  @javax.annotation.Nullable
  public String getDefinitionId() {
    return definitionId;
  }

  public void setDefinitionId(String definitionId) {
    this.definitionId = definitionId;
  }


  public TerritoryWarStatus currentRound(Integer currentRound) {
    this.currentRound = currentRound;
    return this;
  }

  /**
   * Get currentRound
   * @return currentRound
   */
  @javax.annotation.Nullable
  public Integer getCurrentRound() {
    return currentRound;
  }

  public void setCurrentRound(Integer currentRound) {
    this.currentRound = currentRound;
  }


  public TerritoryWarStatus currentRoundEndTime(Long currentRoundEndTime) {
    this.currentRoundEndTime = currentRoundEndTime;
    return this;
  }

  /**
   * Get currentRoundEndTime
   * @return currentRoundEndTime
   */
  @javax.annotation.Nullable
  public Long getCurrentRoundEndTime() {
    return currentRoundEndTime;
  }

  public void setCurrentRoundEndTime(Long currentRoundEndTime) {
    this.currentRoundEndTime = currentRoundEndTime;
  }


  public TerritoryWarStatus channelId(String channelId) {
    this.channelId = channelId;
    return this;
  }

  /**
   * Get channelId
   * @return channelId
   */
  @javax.annotation.Nullable
  public String getChannelId() {
    return channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public TerritoryWarStatus homeGuild(TerritoryWarGuildStatus homeGuild) {
    this.homeGuild = homeGuild;
    return this;
  }

  /**
   * Get homeGuild
   * @return homeGuild
   */
  @javax.annotation.Nullable
  public TerritoryWarGuildStatus getHomeGuild() {
    return homeGuild;
  }

  public void setHomeGuild(TerritoryWarGuildStatus homeGuild) {
    this.homeGuild = homeGuild;
  }


  public TerritoryWarStatus awayGuild(TerritoryWarGuildStatus awayGuild) {
    this.awayGuild = awayGuild;
    return this;
  }

  /**
   * Get awayGuild
   * @return awayGuild
   */
  @javax.annotation.Nullable
  public TerritoryWarGuildStatus getAwayGuild() {
    return awayGuild;
  }

  public void setAwayGuild(TerritoryWarGuildStatus awayGuild) {
    this.awayGuild = awayGuild;
  }


  public TerritoryWarStatus playerStatus(TerritoryWarPlayerStatus playerStatus) {
    this.playerStatus = playerStatus;
    return this;
  }

  /**
   * Get playerStatus
   * @return playerStatus
   */
  @javax.annotation.Nullable
  public TerritoryWarPlayerStatus getPlayerStatus() {
    return playerStatus;
  }

  public void setPlayerStatus(TerritoryWarPlayerStatus playerStatus) {
    this.playerStatus = playerStatus;
  }


  public TerritoryWarStatus currentStat(List<TerritoryMapStat> currentStat) {
    this.currentStat = currentStat;
    return this;
  }

  public TerritoryWarStatus addCurrentStatItem(TerritoryMapStat currentStatItem) {
    if (this.currentStat == null) {
      this.currentStat = new ArrayList<>();
    }
    this.currentStat.add(currentStatItem);
    return this;
  }

  /**
   * Get currentStat
   * @return currentStat
   */
  @javax.annotation.Nullable
  public List<TerritoryMapStat> getCurrentStat() {
    return currentStat;
  }

  public void setCurrentStat(List<TerritoryMapStat> currentStat) {
    this.currentStat = currentStat;
  }


  public TerritoryWarStatus optedInMemberId(List<String> optedInMemberId) {
    this.optedInMemberId = optedInMemberId;
    return this;
  }

  public TerritoryWarStatus addOptedInMemberIdItem(String optedInMemberIdItem) {
    if (this.optedInMemberId == null) {
      this.optedInMemberId = new ArrayList<>();
    }
    this.optedInMemberId.add(optedInMemberIdItem);
    return this;
  }

  /**
   * Get optedInMemberId
   * @return optedInMemberId
   */
  @javax.annotation.Nullable
  public List<String> getOptedInMemberId() {
    return optedInMemberId;
  }

  public void setOptedInMemberId(List<String> optedInMemberId) {
    this.optedInMemberId = optedInMemberId;
  }


  public TerritoryWarStatus optedInMember(List<TerritoryWarParticipant> optedInMember) {
    this.optedInMember = optedInMember;
    return this;
  }

  public TerritoryWarStatus addOptedInMemberItem(TerritoryWarParticipant optedInMemberItem) {
    if (this.optedInMember == null) {
      this.optedInMember = new ArrayList<>();
    }
    this.optedInMember.add(optedInMemberItem);
    return this;
  }

  /**
   * Get optedInMember
   * @return optedInMember
   */
  @javax.annotation.Nullable
  public List<TerritoryWarParticipant> getOptedInMember() {
    return optedInMember;
  }

  public void setOptedInMember(List<TerritoryWarParticipant> optedInMember) {
    this.optedInMember = optedInMember;
  }


  public TerritoryWarStatus excludedFromWar(Boolean excludedFromWar) {
    this.excludedFromWar = excludedFromWar;
    return this;
  }

  /**
   * Get excludedFromWar
   * @return excludedFromWar
   */
  @javax.annotation.Nullable
  public Boolean getExcludedFromWar() {
    return excludedFromWar;
  }

  public void setExcludedFromWar(Boolean excludedFromWar) {
    this.excludedFromWar = excludedFromWar;
  }


  public TerritoryWarStatus hasReportedEnemyGuild(Boolean hasReportedEnemyGuild) {
    this.hasReportedEnemyGuild = hasReportedEnemyGuild;
    return this;
  }

  /**
   * Get hasReportedEnemyGuild
   * @return hasReportedEnemyGuild
   */
  @javax.annotation.Nullable
  public Boolean getHasReportedEnemyGuild() {
    return hasReportedEnemyGuild;
  }

  public void setHasReportedEnemyGuild(Boolean hasReportedEnemyGuild) {
    this.hasReportedEnemyGuild = hasReportedEnemyGuild;
  }


  public TerritoryWarStatus lastCommandNotificationTime(Long lastCommandNotificationTime) {
    this.lastCommandNotificationTime = lastCommandNotificationTime;
    return this;
  }

  /**
   * Get lastCommandNotificationTime
   * @return lastCommandNotificationTime
   */
  @javax.annotation.Nullable
  public Long getLastCommandNotificationTime() {
    return lastCommandNotificationTime;
  }

  public void setLastCommandNotificationTime(Long lastCommandNotificationTime) {
    this.lastCommandNotificationTime = lastCommandNotificationTime;
  }


  public TerritoryWarStatus mapCompletedEarly(Boolean mapCompletedEarly) {
    this.mapCompletedEarly = mapCompletedEarly;
    return this;
  }

  /**
   * Get mapCompletedEarly
   * @return mapCompletedEarly
   */
  @javax.annotation.Nullable
  public Boolean getMapCompletedEarly() {
    return mapCompletedEarly;
  }

  public void setMapCompletedEarly(Boolean mapCompletedEarly) {
    this.mapCompletedEarly = mapCompletedEarly;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerritoryWarStatus territoryWarStatus = (TerritoryWarStatus) o;
    return Objects.equals(this.instanceId, territoryWarStatus.instanceId) &&
        Objects.equals(this.definitionId, territoryWarStatus.definitionId) &&
        Objects.equals(this.currentRound, territoryWarStatus.currentRound) &&
        Objects.equals(this.currentRoundEndTime, territoryWarStatus.currentRoundEndTime) &&
        Objects.equals(this.channelId, territoryWarStatus.channelId) &&
        Objects.equals(this.homeGuild, territoryWarStatus.homeGuild) &&
        Objects.equals(this.awayGuild, territoryWarStatus.awayGuild) &&
        Objects.equals(this.playerStatus, territoryWarStatus.playerStatus) &&
        Objects.equals(this.currentStat, territoryWarStatus.currentStat) &&
        Objects.equals(this.optedInMemberId, territoryWarStatus.optedInMemberId) &&
        Objects.equals(this.optedInMember, territoryWarStatus.optedInMember) &&
        Objects.equals(this.excludedFromWar, territoryWarStatus.excludedFromWar) &&
        Objects.equals(this.hasReportedEnemyGuild, territoryWarStatus.hasReportedEnemyGuild) &&
        Objects.equals(this.lastCommandNotificationTime, territoryWarStatus.lastCommandNotificationTime) &&
        Objects.equals(this.mapCompletedEarly, territoryWarStatus.mapCompletedEarly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceId, definitionId, currentRound, currentRoundEndTime, channelId, homeGuild, awayGuild, playerStatus, currentStat, optedInMemberId, optedInMember, excludedFromWar, hasReportedEnemyGuild, lastCommandNotificationTime, mapCompletedEarly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerritoryWarStatus {\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    definitionId: ").append(toIndentedString(definitionId)).append("\n");
    sb.append("    currentRound: ").append(toIndentedString(currentRound)).append("\n");
    sb.append("    currentRoundEndTime: ").append(toIndentedString(currentRoundEndTime)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    homeGuild: ").append(toIndentedString(homeGuild)).append("\n");
    sb.append("    awayGuild: ").append(toIndentedString(awayGuild)).append("\n");
    sb.append("    playerStatus: ").append(toIndentedString(playerStatus)).append("\n");
    sb.append("    currentStat: ").append(toIndentedString(currentStat)).append("\n");
    sb.append("    optedInMemberId: ").append(toIndentedString(optedInMemberId)).append("\n");
    sb.append("    optedInMember: ").append(toIndentedString(optedInMember)).append("\n");
    sb.append("    excludedFromWar: ").append(toIndentedString(excludedFromWar)).append("\n");
    sb.append("    hasReportedEnemyGuild: ").append(toIndentedString(hasReportedEnemyGuild)).append("\n");
    sb.append("    lastCommandNotificationTime: ").append(toIndentedString(lastCommandNotificationTime)).append("\n");
    sb.append("    mapCompletedEarly: ").append(toIndentedString(mapCompletedEarly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceId");
    openapiFields.add("definitionId");
    openapiFields.add("currentRound");
    openapiFields.add("currentRoundEndTime");
    openapiFields.add("channelId");
    openapiFields.add("homeGuild");
    openapiFields.add("awayGuild");
    openapiFields.add("playerStatus");
    openapiFields.add("currentStat");
    openapiFields.add("optedInMemberId");
    openapiFields.add("optedInMember");
    openapiFields.add("excludedFromWar");
    openapiFields.add("hasReportedEnemyGuild");
    openapiFields.add("lastCommandNotificationTime");
    openapiFields.add("mapCompletedEarly");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TerritoryWarStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TerritoryWarStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TerritoryWarStatus is not found in the empty JSON string", TerritoryWarStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TerritoryWarStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TerritoryWarStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("instanceId") != null && !jsonObj.get("instanceId").isJsonNull()) && !jsonObj.get("instanceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instanceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instanceId").toString()));
      }
      if ((jsonObj.get("definitionId") != null && !jsonObj.get("definitionId").isJsonNull()) && !jsonObj.get("definitionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `definitionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("definitionId").toString()));
      }
      if ((jsonObj.get("channelId") != null && !jsonObj.get("channelId").isJsonNull()) && !jsonObj.get("channelId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channelId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channelId").toString()));
      }
      // validate the optional field `homeGuild`
      if (jsonObj.get("homeGuild") != null && !jsonObj.get("homeGuild").isJsonNull()) {
        TerritoryWarGuildStatus.validateJsonElement(jsonObj.get("homeGuild"));
      }
      // validate the optional field `awayGuild`
      if (jsonObj.get("awayGuild") != null && !jsonObj.get("awayGuild").isJsonNull()) {
        TerritoryWarGuildStatus.validateJsonElement(jsonObj.get("awayGuild"));
      }
      // validate the optional field `playerStatus`
      if (jsonObj.get("playerStatus") != null && !jsonObj.get("playerStatus").isJsonNull()) {
        TerritoryWarPlayerStatus.validateJsonElement(jsonObj.get("playerStatus"));
      }
      if (jsonObj.get("currentStat") != null && !jsonObj.get("currentStat").isJsonNull()) {
        JsonArray jsonArraycurrentStat = jsonObj.getAsJsonArray("currentStat");
        if (jsonArraycurrentStat != null) {
          // ensure the json data is an array
          if (!jsonObj.get("currentStat").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `currentStat` to be an array in the JSON string but got `%s`", jsonObj.get("currentStat").toString()));
          }

          // validate the optional field `currentStat` (array)
          for (int i = 0; i < jsonArraycurrentStat.size(); i++) {
            TerritoryMapStat.validateJsonElement(jsonArraycurrentStat.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("optedInMemberId") != null && !jsonObj.get("optedInMemberId").isJsonNull() && !jsonObj.get("optedInMemberId").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `optedInMemberId` to be an array in the JSON string but got `%s`", jsonObj.get("optedInMemberId").toString()));
      }
      if (jsonObj.get("optedInMember") != null && !jsonObj.get("optedInMember").isJsonNull()) {
        JsonArray jsonArrayoptedInMember = jsonObj.getAsJsonArray("optedInMember");
        if (jsonArrayoptedInMember != null) {
          // ensure the json data is an array
          if (!jsonObj.get("optedInMember").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `optedInMember` to be an array in the JSON string but got `%s`", jsonObj.get("optedInMember").toString()));
          }

          // validate the optional field `optedInMember` (array)
          for (int i = 0; i < jsonArrayoptedInMember.size(); i++) {
            TerritoryWarParticipant.validateJsonElement(jsonArrayoptedInMember.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TerritoryWarStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TerritoryWarStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TerritoryWarStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TerritoryWarStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<TerritoryWarStatus>() {
           @Override
           public void write(JsonWriter out, TerritoryWarStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TerritoryWarStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TerritoryWarStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TerritoryWarStatus
   * @throws IOException if the JSON string is invalid with respect to TerritoryWarStatus
   */
  public static TerritoryWarStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TerritoryWarStatus.class);
  }

  /**
   * Convert an instance of TerritoryWarStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

