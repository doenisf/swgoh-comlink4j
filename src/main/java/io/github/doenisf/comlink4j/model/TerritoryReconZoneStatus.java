/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.JSON;

import java.io.IOException;
import java.util.*;

/**
 * TerritoryReconZoneStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-04T16:29:17.254694600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class TerritoryReconZoneStatus {
  public static final String SERIALIZED_NAME_ZONE_STATUS = "zoneStatus";
  @SerializedName(SERIALIZED_NAME_ZONE_STATUS)
  private TerritoryZoneStatus zoneStatus;

  public static final String SERIALIZED_NAME_PLATOON = "platoon";
  @SerializedName(SERIALIZED_NAME_PLATOON)
  private List<TerritoryReconZonePlatoon> platoon = new ArrayList<>();

  public TerritoryReconZoneStatus() {
  }

  public TerritoryReconZoneStatus zoneStatus(TerritoryZoneStatus zoneStatus) {
    this.zoneStatus = zoneStatus;
    return this;
  }

  /**
   * Get zoneStatus
   * @return zoneStatus
   */
  @javax.annotation.Nullable
  public TerritoryZoneStatus getZoneStatus() {
    return zoneStatus;
  }

  public void setZoneStatus(TerritoryZoneStatus zoneStatus) {
    this.zoneStatus = zoneStatus;
  }


  public TerritoryReconZoneStatus platoon(List<TerritoryReconZonePlatoon> platoon) {
    this.platoon = platoon;
    return this;
  }

  public TerritoryReconZoneStatus addPlatoonItem(TerritoryReconZonePlatoon platoonItem) {
    if (this.platoon == null) {
      this.platoon = new ArrayList<>();
    }
    this.platoon.add(platoonItem);
    return this;
  }

  /**
   * Get platoon
   * @return platoon
   */
  @javax.annotation.Nullable
  public List<TerritoryReconZonePlatoon> getPlatoon() {
    return platoon;
  }

  public void setPlatoon(List<TerritoryReconZonePlatoon> platoon) {
    this.platoon = platoon;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerritoryReconZoneStatus territoryReconZoneStatus = (TerritoryReconZoneStatus) o;
    return Objects.equals(this.zoneStatus, territoryReconZoneStatus.zoneStatus) &&
        Objects.equals(this.platoon, territoryReconZoneStatus.platoon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(zoneStatus, platoon);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerritoryReconZoneStatus {\n");
    sb.append("    zoneStatus: ").append(toIndentedString(zoneStatus)).append("\n");
    sb.append("    platoon: ").append(toIndentedString(platoon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("zoneStatus");
    openapiFields.add("platoon");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TerritoryReconZoneStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TerritoryReconZoneStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TerritoryReconZoneStatus is not found in the empty JSON string", TerritoryReconZoneStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TerritoryReconZoneStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TerritoryReconZoneStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `zoneStatus`
      if (jsonObj.get("zoneStatus") != null && !jsonObj.get("zoneStatus").isJsonNull()) {
        TerritoryZoneStatus.validateJsonElement(jsonObj.get("zoneStatus"));
      }
      if (jsonObj.get("platoon") != null && !jsonObj.get("platoon").isJsonNull()) {
        JsonArray jsonArrayplatoon = jsonObj.getAsJsonArray("platoon");
        if (jsonArrayplatoon != null) {
          // ensure the json data is an array
          if (!jsonObj.get("platoon").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `platoon` to be an array in the JSON string but got `%s`", jsonObj.get("platoon").toString()));
          }

          // validate the optional field `platoon` (array)
          for (int i = 0; i < jsonArrayplatoon.size(); i++) {
            TerritoryReconZonePlatoon.validateJsonElement(jsonArrayplatoon.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TerritoryReconZoneStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TerritoryReconZoneStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TerritoryReconZoneStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TerritoryReconZoneStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<TerritoryReconZoneStatus>() {
           @Override
           public void write(JsonWriter out, TerritoryReconZoneStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TerritoryReconZoneStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TerritoryReconZoneStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TerritoryReconZoneStatus
   * @throws IOException if the JSON string is invalid with respect to TerritoryReconZoneStatus
   */
  public static TerritoryReconZoneStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TerritoryReconZoneStatus.class);
  }

  /**
   * Convert an instance of TerritoryReconZoneStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

