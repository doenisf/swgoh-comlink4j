/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.Rarity;
import io.github.doenisf.comlink4j.RelicTier;
import io.github.doenisf.comlink4j.UnitTier;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.JSON;

/**
 * AbilityReference
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-04T16:29:17.254694600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class AbilityReference {
  public static final String SERIALIZED_NAME_ABILITY_ID = "abilityId";
  @SerializedName(SERIALIZED_NAME_ABILITY_ID)
  private String abilityId;

  public static final String SERIALIZED_NAME_REQUIRED_TIER = "requiredTier";
  @SerializedName(SERIALIZED_NAME_REQUIRED_TIER)
  private UnitTier requiredTier;

  public static final String SERIALIZED_NAME_REQUIRED_RARITY = "requiredRarity";
  @SerializedName(SERIALIZED_NAME_REQUIRED_RARITY)
  private Rarity requiredRarity;

  public static final String SERIALIZED_NAME_REQUIRED_SKILL_TIER = "requiredSkillTier";
  @SerializedName(SERIALIZED_NAME_REQUIRED_SKILL_TIER)
  private Integer requiredSkillTier;

  public static final String SERIALIZED_NAME_REQUIRED_RELIC_TIER = "requiredRelicTier";
  @SerializedName(SERIALIZED_NAME_REQUIRED_RELIC_TIER)
  private RelicTier requiredRelicTier;

  public static final String SERIALIZED_NAME_OVERRIDE_ALWAYS_DISPLAY_IN_BATTLE_UI = "overrideAlwaysDisplayInBattleUi";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_ALWAYS_DISPLAY_IN_BATTLE_UI)
  private Boolean overrideAlwaysDisplayInBattleUi;

  public static final String SERIALIZED_NAME_OVERRIDE_ICON = "overrideIcon";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_ICON)
  private String overrideIcon;

  public static final String SERIALIZED_NAME_OVERRIDE_NAME_KEY = "overrideNameKey";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_NAME_KEY)
  private String overrideNameKey;

  public static final String SERIALIZED_NAME_OVERRIDE_DESC_KEY = "overrideDescKey";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_DESC_KEY)
  private String overrideDescKey;

  public static final String SERIALIZED_NAME_POWER_ADDITIVE_TAG = "powerAdditiveTag";
  @SerializedName(SERIALIZED_NAME_POWER_ADDITIVE_TAG)
  private String powerAdditiveTag;

  public static final String SERIALIZED_NAME_UNLOCK_RECIPE_ID = "unlockRecipeId";
  @SerializedName(SERIALIZED_NAME_UNLOCK_RECIPE_ID)
  private String unlockRecipeId;

  public static final String SERIALIZED_NAME_INHERIT_MAPPING_ID = "inheritMappingId";
  @SerializedName(SERIALIZED_NAME_INHERIT_MAPPING_ID)
  private String inheritMappingId;

  public AbilityReference() {
  }

  public AbilityReference abilityId(String abilityId) {
    this.abilityId = abilityId;
    return this;
  }

  /**
   * Get abilityId
   * @return abilityId
   */
  @javax.annotation.Nullable
  public String getAbilityId() {
    return abilityId;
  }

  public void setAbilityId(String abilityId) {
    this.abilityId = abilityId;
  }


  public AbilityReference requiredTier(UnitTier requiredTier) {
    this.requiredTier = requiredTier;
    return this;
  }

  /**
   * Get requiredTier
   * @return requiredTier
   */
  @javax.annotation.Nullable
  public UnitTier getRequiredTier() {
    return requiredTier;
  }

  public void setRequiredTier(UnitTier requiredTier) {
    this.requiredTier = requiredTier;
  }


  public AbilityReference requiredRarity(Rarity requiredRarity) {
    this.requiredRarity = requiredRarity;
    return this;
  }

  /**
   * Get requiredRarity
   * @return requiredRarity
   */
  @javax.annotation.Nullable
  public Rarity getRequiredRarity() {
    return requiredRarity;
  }

  public void setRequiredRarity(Rarity requiredRarity) {
    this.requiredRarity = requiredRarity;
  }


  public AbilityReference requiredSkillTier(Integer requiredSkillTier) {
    this.requiredSkillTier = requiredSkillTier;
    return this;
  }

  /**
   * Get requiredSkillTier
   * @return requiredSkillTier
   */
  @javax.annotation.Nullable
  public Integer getRequiredSkillTier() {
    return requiredSkillTier;
  }

  public void setRequiredSkillTier(Integer requiredSkillTier) {
    this.requiredSkillTier = requiredSkillTier;
  }


  public AbilityReference requiredRelicTier(RelicTier requiredRelicTier) {
    this.requiredRelicTier = requiredRelicTier;
    return this;
  }

  /**
   * Get requiredRelicTier
   * @return requiredRelicTier
   */
  @javax.annotation.Nullable
  public RelicTier getRequiredRelicTier() {
    return requiredRelicTier;
  }

  public void setRequiredRelicTier(RelicTier requiredRelicTier) {
    this.requiredRelicTier = requiredRelicTier;
  }


  public AbilityReference overrideAlwaysDisplayInBattleUi(Boolean overrideAlwaysDisplayInBattleUi) {
    this.overrideAlwaysDisplayInBattleUi = overrideAlwaysDisplayInBattleUi;
    return this;
  }

  /**
   * Get overrideAlwaysDisplayInBattleUi
   * @return overrideAlwaysDisplayInBattleUi
   */
  @javax.annotation.Nullable
  public Boolean getOverrideAlwaysDisplayInBattleUi() {
    return overrideAlwaysDisplayInBattleUi;
  }

  public void setOverrideAlwaysDisplayInBattleUi(Boolean overrideAlwaysDisplayInBattleUi) {
    this.overrideAlwaysDisplayInBattleUi = overrideAlwaysDisplayInBattleUi;
  }


  public AbilityReference overrideIcon(String overrideIcon) {
    this.overrideIcon = overrideIcon;
    return this;
  }

  /**
   * Get overrideIcon
   * @return overrideIcon
   */
  @javax.annotation.Nullable
  public String getOverrideIcon() {
    return overrideIcon;
  }

  public void setOverrideIcon(String overrideIcon) {
    this.overrideIcon = overrideIcon;
  }


  public AbilityReference overrideNameKey(String overrideNameKey) {
    this.overrideNameKey = overrideNameKey;
    return this;
  }

  /**
   * Get overrideNameKey
   * @return overrideNameKey
   */
  @javax.annotation.Nullable
  public String getOverrideNameKey() {
    return overrideNameKey;
  }

  public void setOverrideNameKey(String overrideNameKey) {
    this.overrideNameKey = overrideNameKey;
  }


  public AbilityReference overrideDescKey(String overrideDescKey) {
    this.overrideDescKey = overrideDescKey;
    return this;
  }

  /**
   * Get overrideDescKey
   * @return overrideDescKey
   */
  @javax.annotation.Nullable
  public String getOverrideDescKey() {
    return overrideDescKey;
  }

  public void setOverrideDescKey(String overrideDescKey) {
    this.overrideDescKey = overrideDescKey;
  }


  public AbilityReference powerAdditiveTag(String powerAdditiveTag) {
    this.powerAdditiveTag = powerAdditiveTag;
    return this;
  }

  /**
   * Get powerAdditiveTag
   * @return powerAdditiveTag
   */
  @javax.annotation.Nullable
  public String getPowerAdditiveTag() {
    return powerAdditiveTag;
  }

  public void setPowerAdditiveTag(String powerAdditiveTag) {
    this.powerAdditiveTag = powerAdditiveTag;
  }


  public AbilityReference unlockRecipeId(String unlockRecipeId) {
    this.unlockRecipeId = unlockRecipeId;
    return this;
  }

  /**
   * Get unlockRecipeId
   * @return unlockRecipeId
   */
  @javax.annotation.Nullable
  public String getUnlockRecipeId() {
    return unlockRecipeId;
  }

  public void setUnlockRecipeId(String unlockRecipeId) {
    this.unlockRecipeId = unlockRecipeId;
  }


  public AbilityReference inheritMappingId(String inheritMappingId) {
    this.inheritMappingId = inheritMappingId;
    return this;
  }

  /**
   * Get inheritMappingId
   * @return inheritMappingId
   */
  @javax.annotation.Nullable
  public String getInheritMappingId() {
    return inheritMappingId;
  }

  public void setInheritMappingId(String inheritMappingId) {
    this.inheritMappingId = inheritMappingId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbilityReference abilityReference = (AbilityReference) o;
    return Objects.equals(this.abilityId, abilityReference.abilityId) &&
        Objects.equals(this.requiredTier, abilityReference.requiredTier) &&
        Objects.equals(this.requiredRarity, abilityReference.requiredRarity) &&
        Objects.equals(this.requiredSkillTier, abilityReference.requiredSkillTier) &&
        Objects.equals(this.requiredRelicTier, abilityReference.requiredRelicTier) &&
        Objects.equals(this.overrideAlwaysDisplayInBattleUi, abilityReference.overrideAlwaysDisplayInBattleUi) &&
        Objects.equals(this.overrideIcon, abilityReference.overrideIcon) &&
        Objects.equals(this.overrideNameKey, abilityReference.overrideNameKey) &&
        Objects.equals(this.overrideDescKey, abilityReference.overrideDescKey) &&
        Objects.equals(this.powerAdditiveTag, abilityReference.powerAdditiveTag) &&
        Objects.equals(this.unlockRecipeId, abilityReference.unlockRecipeId) &&
        Objects.equals(this.inheritMappingId, abilityReference.inheritMappingId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abilityId, requiredTier, requiredRarity, requiredSkillTier, requiredRelicTier, overrideAlwaysDisplayInBattleUi, overrideIcon, overrideNameKey, overrideDescKey, powerAdditiveTag, unlockRecipeId, inheritMappingId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbilityReference {\n");
    sb.append("    abilityId: ").append(toIndentedString(abilityId)).append("\n");
    sb.append("    requiredTier: ").append(toIndentedString(requiredTier)).append("\n");
    sb.append("    requiredRarity: ").append(toIndentedString(requiredRarity)).append("\n");
    sb.append("    requiredSkillTier: ").append(toIndentedString(requiredSkillTier)).append("\n");
    sb.append("    requiredRelicTier: ").append(toIndentedString(requiredRelicTier)).append("\n");
    sb.append("    overrideAlwaysDisplayInBattleUi: ").append(toIndentedString(overrideAlwaysDisplayInBattleUi)).append("\n");
    sb.append("    overrideIcon: ").append(toIndentedString(overrideIcon)).append("\n");
    sb.append("    overrideNameKey: ").append(toIndentedString(overrideNameKey)).append("\n");
    sb.append("    overrideDescKey: ").append(toIndentedString(overrideDescKey)).append("\n");
    sb.append("    powerAdditiveTag: ").append(toIndentedString(powerAdditiveTag)).append("\n");
    sb.append("    unlockRecipeId: ").append(toIndentedString(unlockRecipeId)).append("\n");
    sb.append("    inheritMappingId: ").append(toIndentedString(inheritMappingId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("abilityId");
    openapiFields.add("requiredTier");
    openapiFields.add("requiredRarity");
    openapiFields.add("requiredSkillTier");
    openapiFields.add("requiredRelicTier");
    openapiFields.add("overrideAlwaysDisplayInBattleUi");
    openapiFields.add("overrideIcon");
    openapiFields.add("overrideNameKey");
    openapiFields.add("overrideDescKey");
    openapiFields.add("powerAdditiveTag");
    openapiFields.add("unlockRecipeId");
    openapiFields.add("inheritMappingId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AbilityReference
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AbilityReference.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AbilityReference is not found in the empty JSON string", AbilityReference.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AbilityReference.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AbilityReference` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("abilityId") != null && !jsonObj.get("abilityId").isJsonNull()) && !jsonObj.get("abilityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `abilityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("abilityId").toString()));
      }
      // validate the optional field `requiredTier`
      if (jsonObj.get("requiredTier") != null && !jsonObj.get("requiredTier").isJsonNull()) {
        UnitTier.validateJsonElement(jsonObj.get("requiredTier"));
      }
      // validate the optional field `requiredRarity`
      if (jsonObj.get("requiredRarity") != null && !jsonObj.get("requiredRarity").isJsonNull()) {
        Rarity.validateJsonElement(jsonObj.get("requiredRarity"));
      }
      // validate the optional field `requiredRelicTier`
      if (jsonObj.get("requiredRelicTier") != null && !jsonObj.get("requiredRelicTier").isJsonNull()) {
        RelicTier.validateJsonElement(jsonObj.get("requiredRelicTier"));
      }
      if ((jsonObj.get("overrideIcon") != null && !jsonObj.get("overrideIcon").isJsonNull()) && !jsonObj.get("overrideIcon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `overrideIcon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("overrideIcon").toString()));
      }
      if ((jsonObj.get("overrideNameKey") != null && !jsonObj.get("overrideNameKey").isJsonNull()) && !jsonObj.get("overrideNameKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `overrideNameKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("overrideNameKey").toString()));
      }
      if ((jsonObj.get("overrideDescKey") != null && !jsonObj.get("overrideDescKey").isJsonNull()) && !jsonObj.get("overrideDescKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `overrideDescKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("overrideDescKey").toString()));
      }
      if ((jsonObj.get("powerAdditiveTag") != null && !jsonObj.get("powerAdditiveTag").isJsonNull()) && !jsonObj.get("powerAdditiveTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `powerAdditiveTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("powerAdditiveTag").toString()));
      }
      if ((jsonObj.get("unlockRecipeId") != null && !jsonObj.get("unlockRecipeId").isJsonNull()) && !jsonObj.get("unlockRecipeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unlockRecipeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unlockRecipeId").toString()));
      }
      if ((jsonObj.get("inheritMappingId") != null && !jsonObj.get("inheritMappingId").isJsonNull()) && !jsonObj.get("inheritMappingId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inheritMappingId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inheritMappingId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AbilityReference.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AbilityReference' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AbilityReference> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AbilityReference.class));

       return (TypeAdapter<T>) new TypeAdapter<AbilityReference>() {
           @Override
           public void write(JsonWriter out, AbilityReference value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AbilityReference read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AbilityReference given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AbilityReference
   * @throws IOException if the JSON string is invalid with respect to AbilityReference
   */
  public static AbilityReference fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AbilityReference.class);
  }

  /**
   * Convert an instance of AbilityReference to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

