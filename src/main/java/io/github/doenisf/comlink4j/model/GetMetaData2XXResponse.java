/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.doenisf.comlink4j.ClientCacheEntry;
import io.github.doenisf.comlink4j.ClientQualityData;
import io.github.doenisf.comlink4j.ConfigEntry;
import io.github.doenisf.comlink4j.EADPParameters;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.JSON;

/**
 * GetMetaData2XXResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-04T16:29:17.254694600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class GetMetaData2XXResponse {
  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private List<ConfigEntry> config = new ArrayList<>();

  public static final String SERIALIZED_NAME_ASSET_VERSION = "assetVersion";
  @SerializedName(SERIALIZED_NAME_ASSET_VERSION)
  private Integer assetVersion;

  public static final String SERIALIZED_NAME_ASSET_SUBPATH = "assetSubpath";
  @SerializedName(SERIALIZED_NAME_ASSET_SUBPATH)
  private String assetSubpath;

  public static final String SERIALIZED_NAME_TEX_FORMAT = "texFormat";
  @SerializedName(SERIALIZED_NAME_TEX_FORMAT)
  private String texFormat;

  public static final String SERIALIZED_NAME_SERVER_TIMESTAMP = "serverTimestamp";
  @SerializedName(SERIALIZED_NAME_SERVER_TIMESTAMP)
  private Long serverTimestamp;

  public static final String SERIALIZED_NAME_DEBUG_MODE = "debugMode";
  @SerializedName(SERIALIZED_NAME_DEBUG_MODE)
  private Boolean debugMode;

  public static final String SERIALIZED_NAME_LATEST_LOCALIZATION_BUNDLE_VERSION = "latestLocalizationBundleVersion";
  @SerializedName(SERIALIZED_NAME_LATEST_LOCALIZATION_BUNDLE_VERSION)
  private String latestLocalizationBundleVersion;

  public static final String SERIALIZED_NAME_LATEST_GAMEDATA_VERSION = "latestGamedataVersion";
  @SerializedName(SERIALIZED_NAME_LATEST_GAMEDATA_VERSION)
  private String latestGamedataVersion;

  public static final String SERIALIZED_NAME_RESOURCE_CACHE_MEMORY_LIMIT = "resourceCacheMemoryLimit";
  @SerializedName(SERIALIZED_NAME_RESOURCE_CACHE_MEMORY_LIMIT)
  private Integer resourceCacheMemoryLimit;

  public static final String SERIALIZED_NAME_GAMEDATA_REVISION = "gamedataRevision";
  @SerializedName(SERIALIZED_NAME_GAMEDATA_REVISION)
  private String gamedataRevision;

  public static final String SERIALIZED_NAME_MONO_EXTRA_MEMORY_ALLOCATION_DIVISOR = "monoExtraMemoryAllocationDivisor";
  @SerializedName(SERIALIZED_NAME_MONO_EXTRA_MEMORY_ALLOCATION_DIVISOR)
  private Integer monoExtraMemoryAllocationDivisor;

  public static final String SERIALIZED_NAME_QUALITY_DATA = "qualityData";
  @SerializedName(SERIALIZED_NAME_QUALITY_DATA)
  private ClientQualityData qualityData;

  public static final String SERIALIZED_NAME_LATEST_LOCALIZATION_REVISION = "latestLocalizationRevision";
  @SerializedName(SERIALIZED_NAME_LATEST_LOCALIZATION_REVISION)
  private String latestLocalizationRevision;

  public static final String SERIALIZED_NAME_SERVER_VERSION = "serverVersion";
  @SerializedName(SERIALIZED_NAME_SERVER_VERSION)
  private String serverVersion;

  public static final String SERIALIZED_NAME_CLIENT_CACHE = "clientCache";
  @SerializedName(SERIALIZED_NAME_CLIENT_CACHE)
  private List<ClientCacheEntry> clientCache = new ArrayList<>();

  public static final String SERIALIZED_NAME_EADP_PARAMETERS = "eadpParameters";
  @SerializedName(SERIALIZED_NAME_EADP_PARAMETERS)
  private EADPParameters eadpParameters;

  public GetMetaData2XXResponse() {
  }

  public GetMetaData2XXResponse config(List<ConfigEntry> config) {
    this.config = config;
    return this;
  }

  public GetMetaData2XXResponse addConfigItem(ConfigEntry configItem) {
    if (this.config == null) {
      this.config = new ArrayList<>();
    }
    this.config.add(configItem);
    return this;
  }

  /**
   * Get config
   * @return config
   */
  @javax.annotation.Nullable
  public List<ConfigEntry> getConfig() {
    return config;
  }

  public void setConfig(List<ConfigEntry> config) {
    this.config = config;
  }


  public GetMetaData2XXResponse assetVersion(Integer assetVersion) {
    this.assetVersion = assetVersion;
    return this;
  }

  /**
   * Get assetVersion
   * @return assetVersion
   */
  @javax.annotation.Nullable
  public Integer getAssetVersion() {
    return assetVersion;
  }

  public void setAssetVersion(Integer assetVersion) {
    this.assetVersion = assetVersion;
  }


  public GetMetaData2XXResponse assetSubpath(String assetSubpath) {
    this.assetSubpath = assetSubpath;
    return this;
  }

  /**
   * Get assetSubpath
   * @return assetSubpath
   */
  @javax.annotation.Nullable
  public String getAssetSubpath() {
    return assetSubpath;
  }

  public void setAssetSubpath(String assetSubpath) {
    this.assetSubpath = assetSubpath;
  }


  public GetMetaData2XXResponse texFormat(String texFormat) {
    this.texFormat = texFormat;
    return this;
  }

  /**
   * Get texFormat
   * @return texFormat
   */
  @javax.annotation.Nullable
  public String getTexFormat() {
    return texFormat;
  }

  public void setTexFormat(String texFormat) {
    this.texFormat = texFormat;
  }


  public GetMetaData2XXResponse serverTimestamp(Long serverTimestamp) {
    this.serverTimestamp = serverTimestamp;
    return this;
  }

  /**
   * Get serverTimestamp
   * @return serverTimestamp
   */
  @javax.annotation.Nullable
  public Long getServerTimestamp() {
    return serverTimestamp;
  }

  public void setServerTimestamp(Long serverTimestamp) {
    this.serverTimestamp = serverTimestamp;
  }


  public GetMetaData2XXResponse debugMode(Boolean debugMode) {
    this.debugMode = debugMode;
    return this;
  }

  /**
   * Get debugMode
   * @return debugMode
   */
  @javax.annotation.Nullable
  public Boolean getDebugMode() {
    return debugMode;
  }

  public void setDebugMode(Boolean debugMode) {
    this.debugMode = debugMode;
  }


  public GetMetaData2XXResponse latestLocalizationBundleVersion(String latestLocalizationBundleVersion) {
    this.latestLocalizationBundleVersion = latestLocalizationBundleVersion;
    return this;
  }

  /**
   * Get latestLocalizationBundleVersion
   * @return latestLocalizationBundleVersion
   */
  @javax.annotation.Nullable
  public String getLatestLocalizationBundleVersion() {
    return latestLocalizationBundleVersion;
  }

  public void setLatestLocalizationBundleVersion(String latestLocalizationBundleVersion) {
    this.latestLocalizationBundleVersion = latestLocalizationBundleVersion;
  }


  public GetMetaData2XXResponse latestGamedataVersion(String latestGamedataVersion) {
    this.latestGamedataVersion = latestGamedataVersion;
    return this;
  }

  /**
   * Get latestGamedataVersion
   * @return latestGamedataVersion
   */
  @javax.annotation.Nullable
  public String getLatestGamedataVersion() {
    return latestGamedataVersion;
  }

  public void setLatestGamedataVersion(String latestGamedataVersion) {
    this.latestGamedataVersion = latestGamedataVersion;
  }


  public GetMetaData2XXResponse resourceCacheMemoryLimit(Integer resourceCacheMemoryLimit) {
    this.resourceCacheMemoryLimit = resourceCacheMemoryLimit;
    return this;
  }

  /**
   * Get resourceCacheMemoryLimit
   * @return resourceCacheMemoryLimit
   */
  @javax.annotation.Nullable
  public Integer getResourceCacheMemoryLimit() {
    return resourceCacheMemoryLimit;
  }

  public void setResourceCacheMemoryLimit(Integer resourceCacheMemoryLimit) {
    this.resourceCacheMemoryLimit = resourceCacheMemoryLimit;
  }


  public GetMetaData2XXResponse gamedataRevision(String gamedataRevision) {
    this.gamedataRevision = gamedataRevision;
    return this;
  }

  /**
   * Get gamedataRevision
   * @return gamedataRevision
   */
  @javax.annotation.Nullable
  public String getGamedataRevision() {
    return gamedataRevision;
  }

  public void setGamedataRevision(String gamedataRevision) {
    this.gamedataRevision = gamedataRevision;
  }


  public GetMetaData2XXResponse monoExtraMemoryAllocationDivisor(Integer monoExtraMemoryAllocationDivisor) {
    this.monoExtraMemoryAllocationDivisor = monoExtraMemoryAllocationDivisor;
    return this;
  }

  /**
   * Get monoExtraMemoryAllocationDivisor
   * @return monoExtraMemoryAllocationDivisor
   */
  @javax.annotation.Nullable
  public Integer getMonoExtraMemoryAllocationDivisor() {
    return monoExtraMemoryAllocationDivisor;
  }

  public void setMonoExtraMemoryAllocationDivisor(Integer monoExtraMemoryAllocationDivisor) {
    this.monoExtraMemoryAllocationDivisor = monoExtraMemoryAllocationDivisor;
  }


  public GetMetaData2XXResponse qualityData(ClientQualityData qualityData) {
    this.qualityData = qualityData;
    return this;
  }

  /**
   * Get qualityData
   * @return qualityData
   */
  @javax.annotation.Nullable
  public ClientQualityData getQualityData() {
    return qualityData;
  }

  public void setQualityData(ClientQualityData qualityData) {
    this.qualityData = qualityData;
  }


  public GetMetaData2XXResponse latestLocalizationRevision(String latestLocalizationRevision) {
    this.latestLocalizationRevision = latestLocalizationRevision;
    return this;
  }

  /**
   * Get latestLocalizationRevision
   * @return latestLocalizationRevision
   */
  @javax.annotation.Nullable
  public String getLatestLocalizationRevision() {
    return latestLocalizationRevision;
  }

  public void setLatestLocalizationRevision(String latestLocalizationRevision) {
    this.latestLocalizationRevision = latestLocalizationRevision;
  }


  public GetMetaData2XXResponse serverVersion(String serverVersion) {
    this.serverVersion = serverVersion;
    return this;
  }

  /**
   * Get serverVersion
   * @return serverVersion
   */
  @javax.annotation.Nullable
  public String getServerVersion() {
    return serverVersion;
  }

  public void setServerVersion(String serverVersion) {
    this.serverVersion = serverVersion;
  }


  public GetMetaData2XXResponse clientCache(List<ClientCacheEntry> clientCache) {
    this.clientCache = clientCache;
    return this;
  }

  public GetMetaData2XXResponse addClientCacheItem(ClientCacheEntry clientCacheItem) {
    if (this.clientCache == null) {
      this.clientCache = new ArrayList<>();
    }
    this.clientCache.add(clientCacheItem);
    return this;
  }

  /**
   * Get clientCache
   * @return clientCache
   */
  @javax.annotation.Nullable
  public List<ClientCacheEntry> getClientCache() {
    return clientCache;
  }

  public void setClientCache(List<ClientCacheEntry> clientCache) {
    this.clientCache = clientCache;
  }


  public GetMetaData2XXResponse eadpParameters(EADPParameters eadpParameters) {
    this.eadpParameters = eadpParameters;
    return this;
  }

  /**
   * Get eadpParameters
   * @return eadpParameters
   */
  @javax.annotation.Nullable
  public EADPParameters getEadpParameters() {
    return eadpParameters;
  }

  public void setEadpParameters(EADPParameters eadpParameters) {
    this.eadpParameters = eadpParameters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMetaData2XXResponse getMetaData2XXResponse = (GetMetaData2XXResponse) o;
    return Objects.equals(this.config, getMetaData2XXResponse.config) &&
        Objects.equals(this.assetVersion, getMetaData2XXResponse.assetVersion) &&
        Objects.equals(this.assetSubpath, getMetaData2XXResponse.assetSubpath) &&
        Objects.equals(this.texFormat, getMetaData2XXResponse.texFormat) &&
        Objects.equals(this.serverTimestamp, getMetaData2XXResponse.serverTimestamp) &&
        Objects.equals(this.debugMode, getMetaData2XXResponse.debugMode) &&
        Objects.equals(this.latestLocalizationBundleVersion, getMetaData2XXResponse.latestLocalizationBundleVersion) &&
        Objects.equals(this.latestGamedataVersion, getMetaData2XXResponse.latestGamedataVersion) &&
        Objects.equals(this.resourceCacheMemoryLimit, getMetaData2XXResponse.resourceCacheMemoryLimit) &&
        Objects.equals(this.gamedataRevision, getMetaData2XXResponse.gamedataRevision) &&
        Objects.equals(this.monoExtraMemoryAllocationDivisor, getMetaData2XXResponse.monoExtraMemoryAllocationDivisor) &&
        Objects.equals(this.qualityData, getMetaData2XXResponse.qualityData) &&
        Objects.equals(this.latestLocalizationRevision, getMetaData2XXResponse.latestLocalizationRevision) &&
        Objects.equals(this.serverVersion, getMetaData2XXResponse.serverVersion) &&
        Objects.equals(this.clientCache, getMetaData2XXResponse.clientCache) &&
        Objects.equals(this.eadpParameters, getMetaData2XXResponse.eadpParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(config, assetVersion, assetSubpath, texFormat, serverTimestamp, debugMode, latestLocalizationBundleVersion, latestGamedataVersion, resourceCacheMemoryLimit, gamedataRevision, monoExtraMemoryAllocationDivisor, qualityData, latestLocalizationRevision, serverVersion, clientCache, eadpParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMetaData2XXResponse {\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    assetVersion: ").append(toIndentedString(assetVersion)).append("\n");
    sb.append("    assetSubpath: ").append(toIndentedString(assetSubpath)).append("\n");
    sb.append("    texFormat: ").append(toIndentedString(texFormat)).append("\n");
    sb.append("    serverTimestamp: ").append(toIndentedString(serverTimestamp)).append("\n");
    sb.append("    debugMode: ").append(toIndentedString(debugMode)).append("\n");
    sb.append("    latestLocalizationBundleVersion: ").append(toIndentedString(latestLocalizationBundleVersion)).append("\n");
    sb.append("    latestGamedataVersion: ").append(toIndentedString(latestGamedataVersion)).append("\n");
    sb.append("    resourceCacheMemoryLimit: ").append(toIndentedString(resourceCacheMemoryLimit)).append("\n");
    sb.append("    gamedataRevision: ").append(toIndentedString(gamedataRevision)).append("\n");
    sb.append("    monoExtraMemoryAllocationDivisor: ").append(toIndentedString(monoExtraMemoryAllocationDivisor)).append("\n");
    sb.append("    qualityData: ").append(toIndentedString(qualityData)).append("\n");
    sb.append("    latestLocalizationRevision: ").append(toIndentedString(latestLocalizationRevision)).append("\n");
    sb.append("    serverVersion: ").append(toIndentedString(serverVersion)).append("\n");
    sb.append("    clientCache: ").append(toIndentedString(clientCache)).append("\n");
    sb.append("    eadpParameters: ").append(toIndentedString(eadpParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("config");
    openapiFields.add("assetVersion");
    openapiFields.add("assetSubpath");
    openapiFields.add("texFormat");
    openapiFields.add("serverTimestamp");
    openapiFields.add("debugMode");
    openapiFields.add("latestLocalizationBundleVersion");
    openapiFields.add("latestGamedataVersion");
    openapiFields.add("resourceCacheMemoryLimit");
    openapiFields.add("gamedataRevision");
    openapiFields.add("monoExtraMemoryAllocationDivisor");
    openapiFields.add("qualityData");
    openapiFields.add("latestLocalizationRevision");
    openapiFields.add("serverVersion");
    openapiFields.add("clientCache");
    openapiFields.add("eadpParameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMetaData2XXResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMetaData2XXResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMetaData2XXResponse is not found in the empty JSON string", GetMetaData2XXResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMetaData2XXResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMetaData2XXResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("config") != null && !jsonObj.get("config").isJsonNull()) {
        JsonArray jsonArrayconfig = jsonObj.getAsJsonArray("config");
        if (jsonArrayconfig != null) {
          // ensure the json data is an array
          if (!jsonObj.get("config").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `config` to be an array in the JSON string but got `%s`", jsonObj.get("config").toString()));
          }

          // validate the optional field `config` (array)
          for (int i = 0; i < jsonArrayconfig.size(); i++) {
            ConfigEntry.validateJsonElement(jsonArrayconfig.get(i));
          };
        }
      }
      if ((jsonObj.get("assetSubpath") != null && !jsonObj.get("assetSubpath").isJsonNull()) && !jsonObj.get("assetSubpath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetSubpath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetSubpath").toString()));
      }
      if ((jsonObj.get("texFormat") != null && !jsonObj.get("texFormat").isJsonNull()) && !jsonObj.get("texFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `texFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("texFormat").toString()));
      }
      if ((jsonObj.get("latestLocalizationBundleVersion") != null && !jsonObj.get("latestLocalizationBundleVersion").isJsonNull()) && !jsonObj.get("latestLocalizationBundleVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestLocalizationBundleVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestLocalizationBundleVersion").toString()));
      }
      if ((jsonObj.get("latestGamedataVersion") != null && !jsonObj.get("latestGamedataVersion").isJsonNull()) && !jsonObj.get("latestGamedataVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestGamedataVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestGamedataVersion").toString()));
      }
      if ((jsonObj.get("gamedataRevision") != null && !jsonObj.get("gamedataRevision").isJsonNull()) && !jsonObj.get("gamedataRevision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gamedataRevision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gamedataRevision").toString()));
      }
      // validate the optional field `qualityData`
      if (jsonObj.get("qualityData") != null && !jsonObj.get("qualityData").isJsonNull()) {
        ClientQualityData.validateJsonElement(jsonObj.get("qualityData"));
      }
      if ((jsonObj.get("latestLocalizationRevision") != null && !jsonObj.get("latestLocalizationRevision").isJsonNull()) && !jsonObj.get("latestLocalizationRevision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestLocalizationRevision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestLocalizationRevision").toString()));
      }
      if ((jsonObj.get("serverVersion") != null && !jsonObj.get("serverVersion").isJsonNull()) && !jsonObj.get("serverVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverVersion").toString()));
      }
      if (jsonObj.get("clientCache") != null && !jsonObj.get("clientCache").isJsonNull()) {
        JsonArray jsonArrayclientCache = jsonObj.getAsJsonArray("clientCache");
        if (jsonArrayclientCache != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clientCache").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clientCache` to be an array in the JSON string but got `%s`", jsonObj.get("clientCache").toString()));
          }

          // validate the optional field `clientCache` (array)
          for (int i = 0; i < jsonArrayclientCache.size(); i++) {
            ClientCacheEntry.validateJsonElement(jsonArrayclientCache.get(i));
          };
        }
      }
      // validate the optional field `eadpParameters`
      if (jsonObj.get("eadpParameters") != null && !jsonObj.get("eadpParameters").isJsonNull()) {
        EADPParameters.validateJsonElement(jsonObj.get("eadpParameters"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMetaData2XXResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMetaData2XXResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMetaData2XXResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMetaData2XXResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMetaData2XXResponse>() {
           @Override
           public void write(JsonWriter out, GetMetaData2XXResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMetaData2XXResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMetaData2XXResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMetaData2XXResponse
   * @throws IOException if the JSON string is invalid with respect to GetMetaData2XXResponse
   */
  public static GetMetaData2XXResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMetaData2XXResponse.class);
  }

  /**
   * Convert an instance of GetMetaData2XXResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

