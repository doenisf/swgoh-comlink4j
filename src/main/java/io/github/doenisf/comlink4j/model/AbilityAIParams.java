/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import io.github.doenisf.JSON;

/**
 * AbilityAIParams
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-04T16:29:17.254694600+02:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class AbilityAIParams {
  public static final String SERIALIZED_NAME_PREFERRED_ALLY_TARGETING_RULE_ID = "preferredAllyTargetingRuleId";
  @SerializedName(SERIALIZED_NAME_PREFERRED_ALLY_TARGETING_RULE_ID)
  private String preferredAllyTargetingRuleId;

  public static final String SERIALIZED_NAME_PREFERRED_ENEMY_TARGETING_RULE_ID = "preferredEnemyTargetingRuleId";
  @SerializedName(SERIALIZED_NAME_PREFERRED_ENEMY_TARGETING_RULE_ID)
  private String preferredEnemyTargetingRuleId;

  public static final String SERIALIZED_NAME_REQUIRE_ENEMY_PREFERRED_TARGETS = "requireEnemyPreferredTargets";
  @SerializedName(SERIALIZED_NAME_REQUIRE_ENEMY_PREFERRED_TARGETS)
  private Boolean requireEnemyPreferredTargets;

  public static final String SERIALIZED_NAME_REQUIRE_ALLY_TARGETS = "requireAllyTargets";
  @SerializedName(SERIALIZED_NAME_REQUIRE_ALLY_TARGETS)
  private Boolean requireAllyTargets;

  public static final String SERIALIZED_NAME_PREFERRED_ALLY_TARGETING_RULE_ID_LIST = "preferredAllyTargetingRuleIdList";
  @SerializedName(SERIALIZED_NAME_PREFERRED_ALLY_TARGETING_RULE_ID_LIST)
  private List<String> preferredAllyTargetingRuleIdList = new ArrayList<>();

  public static final String SERIALIZED_NAME_PREFERRED_ENEMY_TARGETING_RULE_ID_LIST = "preferredEnemyTargetingRuleIdList";
  @SerializedName(SERIALIZED_NAME_PREFERRED_ENEMY_TARGETING_RULE_ID_LIST)
  private List<String> preferredEnemyTargetingRuleIdList = new ArrayList<>();

  public AbilityAIParams() {
  }

  public AbilityAIParams preferredAllyTargetingRuleId(String preferredAllyTargetingRuleId) {
    this.preferredAllyTargetingRuleId = preferredAllyTargetingRuleId;
    return this;
  }

  /**
   * Get preferredAllyTargetingRuleId
   * @return preferredAllyTargetingRuleId
   */
  @javax.annotation.Nullable
  public String getPreferredAllyTargetingRuleId() {
    return preferredAllyTargetingRuleId;
  }

  public void setPreferredAllyTargetingRuleId(String preferredAllyTargetingRuleId) {
    this.preferredAllyTargetingRuleId = preferredAllyTargetingRuleId;
  }


  public AbilityAIParams preferredEnemyTargetingRuleId(String preferredEnemyTargetingRuleId) {
    this.preferredEnemyTargetingRuleId = preferredEnemyTargetingRuleId;
    return this;
  }

  /**
   * Get preferredEnemyTargetingRuleId
   * @return preferredEnemyTargetingRuleId
   */
  @javax.annotation.Nullable
  public String getPreferredEnemyTargetingRuleId() {
    return preferredEnemyTargetingRuleId;
  }

  public void setPreferredEnemyTargetingRuleId(String preferredEnemyTargetingRuleId) {
    this.preferredEnemyTargetingRuleId = preferredEnemyTargetingRuleId;
  }


  public AbilityAIParams requireEnemyPreferredTargets(Boolean requireEnemyPreferredTargets) {
    this.requireEnemyPreferredTargets = requireEnemyPreferredTargets;
    return this;
  }

  /**
   * Get requireEnemyPreferredTargets
   * @return requireEnemyPreferredTargets
   */
  @javax.annotation.Nullable
  public Boolean getRequireEnemyPreferredTargets() {
    return requireEnemyPreferredTargets;
  }

  public void setRequireEnemyPreferredTargets(Boolean requireEnemyPreferredTargets) {
    this.requireEnemyPreferredTargets = requireEnemyPreferredTargets;
  }


  public AbilityAIParams requireAllyTargets(Boolean requireAllyTargets) {
    this.requireAllyTargets = requireAllyTargets;
    return this;
  }

  /**
   * Get requireAllyTargets
   * @return requireAllyTargets
   */
  @javax.annotation.Nullable
  public Boolean getRequireAllyTargets() {
    return requireAllyTargets;
  }

  public void setRequireAllyTargets(Boolean requireAllyTargets) {
    this.requireAllyTargets = requireAllyTargets;
  }


  public AbilityAIParams preferredAllyTargetingRuleIdList(List<String> preferredAllyTargetingRuleIdList) {
    this.preferredAllyTargetingRuleIdList = preferredAllyTargetingRuleIdList;
    return this;
  }

  public AbilityAIParams addPreferredAllyTargetingRuleIdListItem(String preferredAllyTargetingRuleIdListItem) {
    if (this.preferredAllyTargetingRuleIdList == null) {
      this.preferredAllyTargetingRuleIdList = new ArrayList<>();
    }
    this.preferredAllyTargetingRuleIdList.add(preferredAllyTargetingRuleIdListItem);
    return this;
  }

  /**
   * Get preferredAllyTargetingRuleIdList
   * @return preferredAllyTargetingRuleIdList
   */
  @javax.annotation.Nullable
  public List<String> getPreferredAllyTargetingRuleIdList() {
    return preferredAllyTargetingRuleIdList;
  }

  public void setPreferredAllyTargetingRuleIdList(List<String> preferredAllyTargetingRuleIdList) {
    this.preferredAllyTargetingRuleIdList = preferredAllyTargetingRuleIdList;
  }


  public AbilityAIParams preferredEnemyTargetingRuleIdList(List<String> preferredEnemyTargetingRuleIdList) {
    this.preferredEnemyTargetingRuleIdList = preferredEnemyTargetingRuleIdList;
    return this;
  }

  public AbilityAIParams addPreferredEnemyTargetingRuleIdListItem(String preferredEnemyTargetingRuleIdListItem) {
    if (this.preferredEnemyTargetingRuleIdList == null) {
      this.preferredEnemyTargetingRuleIdList = new ArrayList<>();
    }
    this.preferredEnemyTargetingRuleIdList.add(preferredEnemyTargetingRuleIdListItem);
    return this;
  }

  /**
   * Get preferredEnemyTargetingRuleIdList
   * @return preferredEnemyTargetingRuleIdList
   */
  @javax.annotation.Nullable
  public List<String> getPreferredEnemyTargetingRuleIdList() {
    return preferredEnemyTargetingRuleIdList;
  }

  public void setPreferredEnemyTargetingRuleIdList(List<String> preferredEnemyTargetingRuleIdList) {
    this.preferredEnemyTargetingRuleIdList = preferredEnemyTargetingRuleIdList;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbilityAIParams abilityAIParams = (AbilityAIParams) o;
    return Objects.equals(this.preferredAllyTargetingRuleId, abilityAIParams.preferredAllyTargetingRuleId) &&
        Objects.equals(this.preferredEnemyTargetingRuleId, abilityAIParams.preferredEnemyTargetingRuleId) &&
        Objects.equals(this.requireEnemyPreferredTargets, abilityAIParams.requireEnemyPreferredTargets) &&
        Objects.equals(this.requireAllyTargets, abilityAIParams.requireAllyTargets) &&
        Objects.equals(this.preferredAllyTargetingRuleIdList, abilityAIParams.preferredAllyTargetingRuleIdList) &&
        Objects.equals(this.preferredEnemyTargetingRuleIdList, abilityAIParams.preferredEnemyTargetingRuleIdList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(preferredAllyTargetingRuleId, preferredEnemyTargetingRuleId, requireEnemyPreferredTargets, requireAllyTargets, preferredAllyTargetingRuleIdList, preferredEnemyTargetingRuleIdList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbilityAIParams {\n");
    sb.append("    preferredAllyTargetingRuleId: ").append(toIndentedString(preferredAllyTargetingRuleId)).append("\n");
    sb.append("    preferredEnemyTargetingRuleId: ").append(toIndentedString(preferredEnemyTargetingRuleId)).append("\n");
    sb.append("    requireEnemyPreferredTargets: ").append(toIndentedString(requireEnemyPreferredTargets)).append("\n");
    sb.append("    requireAllyTargets: ").append(toIndentedString(requireAllyTargets)).append("\n");
    sb.append("    preferredAllyTargetingRuleIdList: ").append(toIndentedString(preferredAllyTargetingRuleIdList)).append("\n");
    sb.append("    preferredEnemyTargetingRuleIdList: ").append(toIndentedString(preferredEnemyTargetingRuleIdList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("preferredAllyTargetingRuleId");
    openapiFields.add("preferredEnemyTargetingRuleId");
    openapiFields.add("requireEnemyPreferredTargets");
    openapiFields.add("requireAllyTargets");
    openapiFields.add("preferredAllyTargetingRuleIdList");
    openapiFields.add("preferredEnemyTargetingRuleIdList");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AbilityAIParams
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AbilityAIParams.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AbilityAIParams is not found in the empty JSON string", AbilityAIParams.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AbilityAIParams.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AbilityAIParams` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("preferredAllyTargetingRuleId") != null && !jsonObj.get("preferredAllyTargetingRuleId").isJsonNull()) && !jsonObj.get("preferredAllyTargetingRuleId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredAllyTargetingRuleId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferredAllyTargetingRuleId").toString()));
      }
      if ((jsonObj.get("preferredEnemyTargetingRuleId") != null && !jsonObj.get("preferredEnemyTargetingRuleId").isJsonNull()) && !jsonObj.get("preferredEnemyTargetingRuleId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredEnemyTargetingRuleId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferredEnemyTargetingRuleId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("preferredAllyTargetingRuleIdList") != null && !jsonObj.get("preferredAllyTargetingRuleIdList").isJsonNull() && !jsonObj.get("preferredAllyTargetingRuleIdList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredAllyTargetingRuleIdList` to be an array in the JSON string but got `%s`", jsonObj.get("preferredAllyTargetingRuleIdList").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("preferredEnemyTargetingRuleIdList") != null && !jsonObj.get("preferredEnemyTargetingRuleIdList").isJsonNull() && !jsonObj.get("preferredEnemyTargetingRuleIdList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredEnemyTargetingRuleIdList` to be an array in the JSON string but got `%s`", jsonObj.get("preferredEnemyTargetingRuleIdList").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AbilityAIParams.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AbilityAIParams' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AbilityAIParams> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AbilityAIParams.class));

       return (TypeAdapter<T>) new TypeAdapter<AbilityAIParams>() {
           @Override
           public void write(JsonWriter out, AbilityAIParams value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AbilityAIParams read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AbilityAIParams given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AbilityAIParams
   * @throws IOException if the JSON string is invalid with respect to AbilityAIParams
   */
  public static AbilityAIParams fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AbilityAIParams.class);
  }

  /**
   * Convert an instance of AbilityAIParams to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

