/*
 * swgoh-comlink
 * An API for sending requests to Star Wars Galaxy of Heroes' game services
 *
 * The version of the OpenAPI document: 0.34.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.doenisf.comlink4j.api;

import io.github.doenisf.comlink4j.ApiCallback;
import io.github.doenisf.comlink4j.ApiClient;
import io.github.doenisf.comlink4j.ApiException;
import io.github.doenisf.comlink4j.ApiResponse;
import io.github.doenisf.comlink4j.Configuration;
import io.github.doenisf.comlink4j.Pair;
import io.github.doenisf.comlink4j.ProgressRequestBody;
import io.github.doenisf.comlink4j.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.github.doenisf.comlink4j.model.GetGuild2XXResponse;
import io.github.doenisf.comlink4j.model.GetGuildLeaderboard2XXResponse;
import io.github.doenisf.comlink4j.model.GetGuildLeaderboardRequest;
import io.github.doenisf.comlink4j.model.GetGuildRequest;
import io.github.doenisf.comlink4j.model.GetGuilds2XXResponse;
import io.github.doenisf.comlink4j.model.GetGuildsRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GuildApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public GuildApi() {
        this(Configuration.getDefaultApiClient());
    }

    public GuildApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getGuild
     * @param getGuildRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuild successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGuildCall(GetGuildRequest getGuildRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = getGuildRequest;

        // create path and map variables
        String localVarPath = "/guild";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGuildValidateBeforeCall(GetGuildRequest getGuildRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'getGuildRequest' is set
        if (getGuildRequest == null) {
            throw new ApiException("Missing the required parameter 'getGuildRequest' when calling getGuild(Async)");
        }

        return getGuildCall(getGuildRequest, _callback);

    }

    /**
     * Get information about a guild
     * 
     * @param getGuildRequest  (required)
     * @return GetGuild2XXResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuild successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public GetGuild2XXResponse getGuild(GetGuildRequest getGuildRequest) throws ApiException {
        ApiResponse<GetGuild2XXResponse> localVarResp = getGuildWithHttpInfo(getGuildRequest);
        return localVarResp.getData();
    }

    /**
     * Get information about a guild
     * 
     * @param getGuildRequest  (required)
     * @return ApiResponse&lt;GetGuild2XXResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuild successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetGuild2XXResponse> getGuildWithHttpInfo(GetGuildRequest getGuildRequest) throws ApiException {
        okhttp3.Call localVarCall = getGuildValidateBeforeCall(getGuildRequest, null);
        Type localVarReturnType = new TypeToken<GetGuild2XXResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get information about a guild (asynchronously)
     * 
     * @param getGuildRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuild successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGuildAsync(GetGuildRequest getGuildRequest, final ApiCallback<GetGuild2XXResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGuildValidateBeforeCall(getGuildRequest, _callback);
        Type localVarReturnType = new TypeToken<GetGuild2XXResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getGuildLeaderboard
     * @param getGuildLeaderboardRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuildLeaderboard successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGuildLeaderboardCall(GetGuildLeaderboardRequest getGuildLeaderboardRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = getGuildLeaderboardRequest;

        // create path and map variables
        String localVarPath = "/getGuildLeaderboard";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGuildLeaderboardValidateBeforeCall(GetGuildLeaderboardRequest getGuildLeaderboardRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'getGuildLeaderboardRequest' is set
        if (getGuildLeaderboardRequest == null) {
            throw new ApiException("Missing the required parameter 'getGuildLeaderboardRequest' when calling getGuildLeaderboard(Async)");
        }

        return getGuildLeaderboardCall(getGuildLeaderboardRequest, _callback);

    }

    /**
     * Get the guild leaderboards
     * 
     * @param getGuildLeaderboardRequest  (required)
     * @return GetGuildLeaderboard2XXResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuildLeaderboard successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public GetGuildLeaderboard2XXResponse getGuildLeaderboard(GetGuildLeaderboardRequest getGuildLeaderboardRequest) throws ApiException {
        ApiResponse<GetGuildLeaderboard2XXResponse> localVarResp = getGuildLeaderboardWithHttpInfo(getGuildLeaderboardRequest);
        return localVarResp.getData();
    }

    /**
     * Get the guild leaderboards
     * 
     * @param getGuildLeaderboardRequest  (required)
     * @return ApiResponse&lt;GetGuildLeaderboard2XXResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuildLeaderboard successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetGuildLeaderboard2XXResponse> getGuildLeaderboardWithHttpInfo(GetGuildLeaderboardRequest getGuildLeaderboardRequest) throws ApiException {
        okhttp3.Call localVarCall = getGuildLeaderboardValidateBeforeCall(getGuildLeaderboardRequest, null);
        Type localVarReturnType = new TypeToken<GetGuildLeaderboard2XXResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get the guild leaderboards (asynchronously)
     * 
     * @param getGuildLeaderboardRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuildLeaderboard successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGuildLeaderboardAsync(GetGuildLeaderboardRequest getGuildLeaderboardRequest, final ApiCallback<GetGuildLeaderboard2XXResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGuildLeaderboardValidateBeforeCall(getGuildLeaderboardRequest, _callback);
        Type localVarReturnType = new TypeToken<GetGuildLeaderboard2XXResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getGuilds
     * @param getGuildsRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuilds successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGuildsCall(GetGuildsRequest getGuildsRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = getGuildsRequest;

        // create path and map variables
        String localVarPath = "/getGuilds";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGuildsValidateBeforeCall(GetGuildsRequest getGuildsRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'getGuildsRequest' is set
        if (getGuildsRequest == null) {
            throw new ApiException("Missing the required parameter 'getGuildsRequest' when calling getGuilds(Async)");
        }

        return getGuildsCall(getGuildsRequest, _callback);

    }

    /**
     * Search guilds
     * 
     * @param getGuildsRequest  (required)
     * @return GetGuilds2XXResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuilds successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public GetGuilds2XXResponse getGuilds(GetGuildsRequest getGuildsRequest) throws ApiException {
        ApiResponse<GetGuilds2XXResponse> localVarResp = getGuildsWithHttpInfo(getGuildsRequest);
        return localVarResp.getData();
    }

    /**
     * Search guilds
     * 
     * @param getGuildsRequest  (required)
     * @return ApiResponse&lt;GetGuilds2XXResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuilds successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetGuilds2XXResponse> getGuildsWithHttpInfo(GetGuildsRequest getGuildsRequest) throws ApiException {
        okhttp3.Call localVarCall = getGuildsValidateBeforeCall(getGuildsRequest, null);
        Type localVarReturnType = new TypeToken<GetGuilds2XXResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search guilds (asynchronously)
     * 
     * @param getGuildsRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 2XX </td><td> getGuilds successful response </td><td>  -  </td></tr>
        <tr><td> 4XX </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getGuildsAsync(GetGuildsRequest getGuildsRequest, final ApiCallback<GetGuilds2XXResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGuildsValidateBeforeCall(getGuildsRequest, _callback);
        Type localVarReturnType = new TypeToken<GetGuilds2XXResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
