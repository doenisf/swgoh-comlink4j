package de.sf.model.player.stat;

import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import lombok.Getter;

import java.io.IOException;

import java.io.IOException;

@Getter
public enum UnitStat {
    UnitStat_DEFAULT(0),
    UNITSTATMAXHEALTH(1),
    UNITSTATSTRENGTH(2),
    UNITSTATAGILITY(3),
    UNITSTATINTELLIGENCE(4),
    UNITSTATSPEED(5),
    UNITSTATATTACKDAMAGE(6),
    UNITSTATABILITYPOWER(7),
    UNITSTATARMOR(8),
    UNITSTATSUPPRESSION(9),
    UNITSTATARMORPENETRATION(10),
    UNITSTATSUPPRESSIONPENETRATION(11),
    UNITSTATDODGERATING(12),
    UNITSTATDEFLECTIONRATING(13),
    UNITSTATATTACKCRITICALRATING(14),
    UNITSTATABILITYCRITICALRATING(15),
    UNITSTATCRITICALDAMAGE(16),
    UNITSTATACCURACY(17),
    UNITSTATRESISTANCE(18),
    UNITSTATDODGEPERCENTADDITIVE(19),
    UNITSTATDEFLECTIONPERCENTADDITIVE(20),
    UNITSTATATTACKCRITICALPERCENTADDITIVE(21),
    UNITSTATABILITYCRITICALPERCENTADDITIVE(22),
    UNITSTATARMORPERCENTADDITIVE(23),
    UNITSTATSUPPRESSIONPERCENTADDITIVE(24),
    UNITSTATARMORPENETRATIONPERCENTADDITIVE(25),
    UNITSTATSUPPRESSIONPENETRATIONPERCENTADDITIVE(26),
    UNITSTATHEALTHSTEAL(27),
    UNITSTATMAXSHIELD(28),
    UNITSTATSHIELDPENETRATION(29),
    UNITSTATHEALTHREGEN(30),
    UNITSTATATTACKDAMAGEPERCENTADDITIVE(31),
    UNITSTATABILITYPOWERPERCENTADDITIVE(32),
    UNITSTATDODGENEGATEPERCENTADDITIVE(33),
    UNITSTATDEFLECTIONNEGATEPERCENTADDITIVE(34),
    UNITSTATATTACKCRITICALNEGATEPERCENTADDITIVE(35),
    UNITSTATABILITYCRITICALNEGATEPERCENTADDITIVE(36),
    UNITSTATDODGENEGATERATING(37),
    UNITSTATDEFLECTIONNEGATERATING(38),
    UNITSTATATTACKCRITICALNEGATERATING(39),
    UNITSTATABILITYCRITICALNEGATERATING(40),
    UNITSTATOFFENSE(41),
    UNITSTATDEFENSE(42),
    UNITSTATDEFENSEPENETRATION(43),
    UNITSTATEVASIONRATING(44),
    UNITSTATCRITICALRATING(45),
    UNITSTATEVASIONNEGATERATING(46),
    UNITSTATCRITICALNEGATERATING(47),
    UNITSTATOFFENSEPERCENTADDITIVE(48),
    UNITSTATDEFENSEPERCENTADDITIVE(49),
    UNITSTATDEFENSEPENETRATIONPERCENTADDITIVE(50),
    UNITSTATEVASIONPERCENTADDITIVE(51),
    UNITSTATEVASIONNEGATEPERCENTADDITIVE(52),
    UNITSTATCRITICALCHANCEPERCENTADDITIVE(53),
    UNITSTATCRITICALNEGATECHANCEPERCENTADDITIVE(54),
    UNITSTATMAXHEALTHPERCENTADDITIVE(55),
    UNITSTATMAXSHIELDPERCENTADDITIVE(56),
    UNITSTATSPEEDPERCENTADDITIVE(57),
    UNITSTATCOUNTERATTACKRATING(58),
    UNITSTATTAUNT(59),
    UNITSTATDEFENSEPENETRATIONTARGETPERCENTADDITIVE(60),
    UNITSTATMASTERY(61);

    private final int value;

    UnitStat(int value) {
        this.value = value;
    }

    public static UnitStat fromValue(int value) {
        for (UnitStat stat : values()) {
            if (stat.value == value) {
                return stat;
            }
        }
        throw new IllegalArgumentException("Unknown value: " + value);
    }



    public static class Adapter extends TypeAdapter<UnitStat> {

        @Override
        public void write(JsonWriter out, UnitStat value) throws IOException {
            out.value(value.name());
        }

        @Override
        public UnitStat read(JsonReader in) throws IOException {
            return UnitStat.fromValue(in.nextInt());
        }
    }
}
