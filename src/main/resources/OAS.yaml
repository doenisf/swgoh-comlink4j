openapi: 3.1.0
info:
  title: swgoh-comlink
  description: An API for sending requests to Star Wars Galaxy of Heroes' game services
  version: 0.34.0
paths:
  /enums:
    get:
      summary: Get an object containing all of the game data enums
      tags:
        - game data
      responses:
        2XX:
          $ref: '#/components/responses/successResponse'
        4XX:
          $ref: '#/components/responses/errorResponse'
  /getEvents:
    post:
      summary: Get the game events
      operationId: getEvents
      tags:
        - events
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  type: object
                  properties: {}
                  additionalProperties: false
                enums:
                  type: boolean
                  default: false
              additionalProperties: false
        required: false
      responses:
        2XX:
          description: getEvents successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  gameEvent:
                    type: array
                    items:
                      $ref: '#/components/schemas/GameEvent'
        4XX:
          $ref: '#/components/responses/errorResponse'
  /data:
    post:
      summary: Get the game data
      operationId: getGameData
      tags:
        - game data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - payload
              properties:
                payload:
                  type: object
                  required:
                    - version
                  properties:
                    version:
                      type: string
                    includePveUnits:
                      type: boolean
                      default: true
                    requestSegment:
                      type: number
                      default: 0
                  additionalProperties: false
                enums:
                  type: boolean
                  default: false
              additionalProperties: false
        required: true
      responses:
        2XX:
          description: getGameData successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  units:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnitDef'
                  battleEnvironments:
                    type: array
                    items:
                      $ref: '#/components/schemas/BattleEnvironment'
                  xpTable:
                    type: array
                    items:
                      $ref: '#/components/schemas/XpTable'
                  material:
                    type: array
                    items:
                      $ref: '#/components/schemas/CraftingMaterialDef'
                  recipe:
                    type: array
                    items:
                      $ref: '#/components/schemas/Recipe'
                  statProgression:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatProgression'
                  category:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  helpEntry:
                    type: array
                    items:
                      $ref: '#/components/schemas/HelpEntry'
                  challenge:
                    type: array
                    items:
                      $ref: '#/components/schemas/Challenge'
                  skill:
                    type: array
                    items:
                      $ref: '#/components/schemas/SkillDefinition'
                  eventSampling:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventSampling'
                  equipment:
                    type: array
                    items:
                      $ref: '#/components/schemas/EquipmentDef'
                  warDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/WarDef'
                  targetingSet:
                    type: array
                    items:
                      $ref: '#/components/schemas/TargetingSet'
                  ability:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ability'
                  effect:
                    type: array
                    items:
                      $ref: '#/components/schemas/Effect'
                  requirement:
                    type: array
                    items:
                      $ref: '#/components/schemas/Requirement'
                  powerUpBundle:
                    type: array
                    items:
                      $ref: '#/components/schemas/PowerUpBundle'
                  guildBanner:
                    $ref: '#/components/schemas/GuildBannerDef'
                  raidConfig:
                    type: array
                    items:
                      $ref: '#/components/schemas/GuildRaidConfig'
                  guildRaid:
                    type: array
                    items:
                      $ref: '#/components/schemas/GuildRaid'
                  statModSet:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatModSetDefinition'
                  statMod:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatModDefinition'
                  guildExchangeItem:
                    type: array
                    items:
                      $ref: '#/components/schemas/GuildExchangeItem'
                  table:
                    type: array
                    items:
                      $ref: '#/components/schemas/Table'
                  unlockAnnouncementDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnlockAnnouncementDefinition'
                  battleTargetingRule:
                    type: array
                    items:
                      $ref: '#/components/schemas/EffectTarget'
                  territoryBattleDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/TerritoryBattleDefinition'
                  territoryWarDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/TerritoryWarDefinition'
                  environmentCollection:
                    type: array
                    items:
                      $ref: '#/components/schemas/EnvironmentCollection'
                  challengeStyle:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChallengeStyle'
                  socialStatus:
                    $ref: '#/components/schemas/SocialStatus'
                  starterGuild:
                    type: array
                    items:
                      $ref: '#/components/schemas/StarterGuildDef'
                  playerTitle:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerTitleDefinition'
                  modRecommendation:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModRecommendation'
                  persistentVfx:
                    type: array
                    items:
                      $ref: '#/components/schemas/PersistentVfx'
                  territoryTournamentDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/TerritoryTournamentDefinition'
                  eventBonus:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventBonus'
                  seasonDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/SeasonDefinition'
                  playerPortrait:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerPortraitDefinition'
                  timeZoneChangeConfig:
                    $ref: '#/components/schemas/TimeZoneChangeConfig'
                  effectIconPriority:
                    type: array
                    items:
                      type: string
                  mysteryBox:
                    type: array
                    items:
                      $ref: '#/components/schemas/MysteryBoxDefinition'
                  mysteryStatMod:
                    type: array
                    items:
                      $ref: '#/components/schemas/MysteryStatModDefinition'
                  cooldown:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cooldown'
                  dailyActionCap:
                    type: array
                    items:
                      $ref: '#/components/schemas/DailyActionCap'
                  energyReward:
                    type: array
                    items:
                      $ref: '#/components/schemas/EnergyRewardDefinition'
                  territoryTournamentMatchmakingDescKey:
                    type: string
                  seasonLeagueDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/SeasonLeagueDefinition'
                  seasonDivisionDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/SeasonDivisionDefinition'
                  seasonRewardTable:
                    type: array
                    items:
                      $ref: '#/components/schemas/SeasonRewardTable'
                  relicTierDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/RelicTierDefinition'
                  scavengerConversionSet:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConversionSet'
                  unitGuideDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnitGuideDefinition'
                  galacticBundle:
                    type: array
                    items:
                      $ref: '#/components/schemas/GalacticBundle'
                  linkedStoreItem:
                    type: array
                    items:
                      $ref: '#/components/schemas/LinkedStoreItem'
                  territoryTournamentLeagueDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/TerritoryTournamentLeagueDefinition'
                  territoryTournamentDivisionDefinition:
                    type: array
                    items:
                      $ref: >-
                        #/components/schemas/TerritoryTournamentDivisionDefinition
                  savedSquadConfig:
                    type: array
                    items:
                      $ref: '#/components/schemas/SaveSquadConfig'
                  guildRaidGlobalConfig:
                    $ref: '#/components/schemas/GuildRaidGlobalConfig'
                  campaign:
                    type: array
                    items:
                      $ref: '#/components/schemas/Campaign'
                  conquestDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConquestDefinition'
                  conquestMission:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConquestMission'
                  artifactDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/ArtifactDefinition'
                  abilityDecisionTree:
                    type: array
                    items:
                      $ref: '#/components/schemas/AbilityDecisionTree'
                  consumableDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConsumableDefinition'
                  consumableType:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConsumableType'
                  artifactTierDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/ArtifactTierDefinition'
                  consumableTierDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConsumableTierDefinition'
                  recommendedSquad:
                    type: array
                    items:
                      $ref: '#/components/schemas/RecommendedSquad'
                  unitGuideLayout:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnitGuideLayout'
                  dailyLoginRewardDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/DailyLoginRewardDefinition'
                  calendarCategoryDefinition:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendarCategoryDefinition'
                  territoryTournamentDailyRewardTable:
                    $ref: '#/components/schemas/TerritoryTournamentDailyRewardTable'
                  datacronSet:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatacronSet'
                  datacronTemplate:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatacronTemplate'
                  datacronAffixTemplateSet:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatacronAffixTemplateSet'
                  datacronHelpEntry:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatacronHelpEntry'
                  displayableEnemy:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnitDefPreview'
        4XX:
          $ref: '#/components/responses/errorResponse'
  /guild:
    post:
      summary: Get information about a guild
      operationId: getGuild
      tags:
        - guild
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - payload
              properties:
                payload:
                  type: object
                  required:
                    - guildId
                  properties:
                    guildId:
                      type: string
                      pattern: ^[A-Za-z0-9\-_]{22}$
                      errorMessage:
                        pattern: >-
                          must be 22 digits long and only contain alphanumeric
                          characters plus - and _
                    includeRecentGuildActivityInfo:
                      type: boolean
                      default: false
                  additionalProperties: false
                enums:
                  type: boolean
                  default: false
              additionalProperties: false
        required: true
      responses:
        2XX:
          description: getGuild successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  guild:
                    $ref: '#/components/schemas/Guild'
        4XX:
          $ref: '#/components/responses/errorResponse'
  /getGuildLeaderboard:
    post:
      summary: Get the guild leaderboards
      operationId: getGuildLeaderboard
      tags:
        - guild
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - payload
              properties:
                payload:
                  type: object
                  required:
                    - leaderboardId
                  properties:
                    leaderboardId:
                      type: array
                      items:
                        oneOf:
                          - description: Leaderboard type - total raid points
                            type: object
                            properties:
                              leaderboardType:
                                const: 0
                              monthOffset:
                                type: number
                                enum:
                                  - 0
                                  - 1
                          - description: Leaderboard type - specific raid events
                            type: object
                            properties:
                              leaderboardType:
                                const: 2
                              defId:
                                type: string
                                description: >-
                                  Values such as `sith_raid`, `rancor`,
                                  `rancor_challenge`, `aat`, `kraytdragon`,
                                  `speederbike` and so on
                              monthOffset:
                                type: number
                                enum:
                                  - 0
                                  - 1
                          - description: Leaderboard type - Galactic Power
                            type: object
                            properties:
                              leaderboardType:
                                const: 3
                              monthOffset:
                                type: number
                                enum:
                                  - 0
                                  - 1
                          - description: Leaderboard type - TB stars
                            type: object
                            properties:
                              leaderboardType:
                                const: 4
                              defId:
                                type: string
                                description: Values such as `t01D`, `t02D`, and so on
                              monthOffset:
                                type: number
                                enum:
                                  - 0
                                  - 1
                          - description: Leaderboard type - TW
                            type: object
                            properties:
                              leaderboardType:
                                const: 5
                              defId:
                                const: TERRITORY_WAR_LEADERBOARD
                              monthOffset:
                                type: number
                                enum:
                                  - 0
                                  - 1
                          - description: Leaderboard type - 'high water mark'
                            type: object
                            properties:
                              leaderboardType:
                                const: 6
                              defId:
                                type: string
                                description: >-
                                  Values such as
                                  `GUILD:RAIDS:NORMAL_DIFF:SITH_RAID:DIFF06`. 
                                  Known values are `SITH_RAID:DIFF06` and
                                  `HEROIC85`, `AAT:DIFF06` and `HEROIC80`,
                                  `RANCOR:DIFF01` through `DIFF06`,
                                  `KRAYTDRAGON:DIFF01`, and `ROTJ:SPEEDERBIKE`
                              monthOffset:
                                type: number
                                enum:
                                  - 0
                                  - 1
                    count:
                      type: number
                      default: 200
                  additionalProperties: false
                enums:
                  type: boolean
                  default: false
              additionalProperties: false
        required: true
      responses:
        2XX:
          description: getGuildLeaderboard successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  leaderboard:
                    type: array
                    items:
                      $ref: '#/components/schemas/GuildLeaderboard'
        4XX:
          $ref: '#/components/responses/errorResponse'
  /getGuilds:
    post:
      summary: Search guilds
      operationId: getGuilds
      tags:
        - guild
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - payload
              properties:
                payload:
                  type: object
                  properties:
                    filterType:
                      type: number
                      enum:
                        - 4
                        - 5
                  allOf:
                    - if:
                        properties:
                          filterType:
                            const: 4
                      then:
                        required:
                          - name
                        properties:
                          filterType:
                            const: 4
                          name:
                            type: string
                          startIndex:
                            type: number
                            default: 0
                          count:
                            type: number
                            default: 10
                        additionalProperties: false
                        errorMessage:
                          additionalProperties: >-
                            The searchCriteria field (and any other fields not
                            in the spec) must not be included when searching by
                            name
                      errorMessage:
                        then: ''
                    - errorMessage:
                        then: ''
                      if:
                        properties:
                          filterType:
                            const: 5
                      then:
                        required:
                          - searchCriteria
                        additionalProperties: false
                        errorMessage:
                          additionalProperties: >-
                            The name field (and any other fields not in the
                            spec) must not be included when searching by
                            searchCriteria
                        properties:
                          filterType:
                            const: 5
                          startIndex:
                            type: number
                            default: 0
                          count:
                            type: number
                            default: 10
                          searchCriteria:
                            type: object
                            properties:
                              minMemberCount:
                                type: number
                                default: 1
                              maxMemberCount:
                                type: number
                                default: 50
                              includeInviteOnly:
                                type: boolean
                                default: true
                              minGuildGalacticPower:
                                type: number
                                default: 1
                              maxGuildGalacticPower:
                                type: number
                                default: 500000000
                              recentTbParticipatedIn:
                                type: array
                                items:
                                  type: string
                enums:
                  type: boolean
                  default: false
              additionalProperties: false
        required: true
      responses:
        2XX:
          description: getGuilds successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  guild:
                    type: array
                    items:
                      $ref: '#/components/schemas/GuildProfile'
                  totalRecords:
                    type: integer
                    format: int32
                  includeStarterGuild:
                    type: boolean
        4XX:
          $ref: '#/components/responses/errorResponse'
  /getLeaderboard:
    post:
      summary: >-
        View GAC leaderboards.  Supports both the global leaderboards, as well
        as the leaderboards for the GAC groupings of 8.
      operationId: getLeaderboard
      tags:
        - gac
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - payload
              properties:
                payload:
                  type: object
                  properties:
                    leaderboardType:
                      type: number
                      enum:
                        - 4
                        - 6
                  allOf:
                    - if:
                        properties:
                          leaderboardType:
                            const: 4
                      then:
                        description: >-
                          Leaderboards from the individual brackets of 8. Only
                          returns results while the event bracket is active.
                        required:
                          - eventInstanceId
                          - groupId
                        properties:
                          leaderboardType:
                            const: 4
                          eventInstanceId:
                            type: string
                            description: >-
                              Combination of the event Id and the instance ID,
                              separated by :
                            example: >-
                              CHAMPIONSHIPS_GRAND_ARENA_GA2_EVENT_SEASON_36:O1675202400000
                          groupId:
                            type: string
                            description: >-
                              Must start with the same eventInstanceId, followed
                              by the league and bracketId, separated by :. The
                              number at the end is the bracketId, and goes from
                              0 to N, where N is the last group of 8 players.
                            example: >-
                              CHAMPIONSHIPS_GRAND_ARENA_GA2_EVENT_SEASON_36:O1675202400000:CARBONITE:10431
                        additionalProperties: false
                        errorMessage:
                          additionalProperties: >-
                            Fields other than groupId and eventInstanceId must
                            not be included when using leaderboardType 4
                      errorMessage:
                        then: ''
                    - errorMessage:
                        then: ''
                      if:
                        properties:
                          leaderboardType:
                            const: 6
                      then:
                        description: '''Global'' GAC leaderboards for each league and division'
                        required:
                          - league
                          - division
                        additionalProperties: false
                        errorMessage:
                          additionalProperties: >-
                            Fields other than league and division must not be
                            included when using leaderboardType 6
                        properties:
                          leaderboardType:
                            const: 6
                          league:
                            type: number
                            enum:
                              - 20
                              - 40
                              - 60
                              - 80
                              - 100
                            description: >-
                              Enum values 20, 40, 60, 80, and 100 correspond to
                              carbonite, bronzium, chromium, aurodium, and kyber
                              respectively
                          division:
                            type: number
                            enum:
                              - 5
                              - 10
                              - 15
                              - 20
                              - 25
                            description: >-
                              Enum values 5, 10, 15, 20, and 25 correspond to
                              divisions 5 through 1 respectively
                enums:
                  type: boolean
                  default: false
              additionalProperties: false
        required: true
      responses:
        2XX:
          description: getLeaderboard successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  player:
                    type: array
                    items:
                      $ref: '#/components/schemas/LeaderboardPlayer'
                  playerStatus:
                    $ref: '#/components/schemas/LeaderboardStatus'
        4XX:
          $ref: '#/components/responses/errorResponse'
  /localization:
    post:
      summary: Get the localization bundle
      operationId: getLocalizationBundle
      tags:
        - game data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - payload
              properties:
                unzip:
                  type: boolean
                payload:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                  additionalProperties: false
                enums:
                  type: boolean
                  default: false
              additionalProperties: false
        required: true
      responses:
        2XX:
          description: getLocalizationBundle successful response
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      localizationBundle:
                        type: string
                        contentEncoding: base64
                        contentMediaType: application/zip
                  - type: object
        4XX:
          $ref: '#/components/responses/errorResponse'
  /metadata:
    post:
      summary: Get the game metadata
      operationId: getMetaData
      tags:
        - game data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  type: object
                  properties:
                    clientSpecs:
                      type: object
                      properties:
                        platform:
                          type: string
                        bundleId:
                          type: string
                        externalVersion:
                          type: string
                        internalVersion:
                          type: string
                        region:
                          type: string
                      additionalProperties: false
                  additionalProperties: false
                enums:
                  type: boolean
                  default: false
              additionalProperties: false
        required: false
      responses:
        2XX:
          description: getMetaData successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  config:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfigEntry'
                  assetVersion:
                    type: integer
                    format: int32
                  assetSubpath:
                    type: string
                  texFormat:
                    type: string
                  serverTimestamp:
                    type: integer
                    format: int64
                  debugMode:
                    type: boolean
                  latestLocalizationBundleVersion:
                    type: string
                  latestGamedataVersion:
                    type: string
                  resourceCacheMemoryLimit:
                    type: integer
                    format: int32
                  gamedataRevision:
                    type: string
                  monoExtraMemoryAllocationDivisor:
                    type: integer
                    format: int32
                  qualityData:
                    $ref: '#/components/schemas/ClientQualityData'
                  latestLocalizationRevision:
                    type: string
                  serverVersion:
                    type: string
                  clientCache:
                    type: array
                    items:
                      $ref: '#/components/schemas/ClientCacheEntry'
                  eadpParameters:
                    $ref: '#/components/schemas/EADPParameters'
        4XX:
          $ref: '#/components/responses/errorResponse'
  /player:
    post:
      summary: Get a player profile
      operationId: getPlayer
      tags:
        - player
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - payload
              properties:
                payload:
                  type: object
                  oneOf:
                    - required:
                        - allyCode
                    - required:
                        - playerId
                  properties:
                    allyCode:
                      type: string
                      pattern: ^[1-9]{9}$
                      errorMessage:
                        pattern: must be 9 digits long and only contain numbers 1-9
                    playerId:
                      type: string
                      pattern: ^[A-Za-z0-9\-_]{22}$
                      errorMessage:
                        pattern: >-
                          must be 22 digits long and only contain alphanumeric
                          characters plus - and _
                  additionalProperties: false
                  errorMessage:
                    oneOf: Must include either allyCode or playerId, but not both
                enums:
                  type: boolean
                  default: false
              additionalProperties: false
        required: true
      responses:
        2XX:
          description: getPlayer successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  level:
                    type: integer
                    format: int32
                  allyCode:
                    type: integer
                    format: int64
                  playerId:
                    type: string
                  rosterUnit:
                    type: array
                    items:
                      $ref: '#/components/schemas/Unit'
                  profileStat:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerProfileStat'
                  guildId:
                    type: string
                  guildName:
                    type: string
                  guildLogoBackground:
                    type: string
                  guildBannerColor:
                    type: string
                  guildBannerLogo:
                    type: string
                  pvpProfile:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerPvpProfile'
                  selectedPlayerTitle:
                    $ref: '#/components/schemas/PlayerTitle'
                  unlockedPlayerTitle:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerTitle'
                  guildTypeId:
                    type: string
                  localTimeZoneOffsetMinutes:
                    type: integer
                    format: int32
                  lastActivityTime:
                    type: integer
                    format: int64
                  selectedPlayerPortrait:
                    $ref: '#/components/schemas/PlayerPortrait'
                  unlockedPlayerPortrait:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerPortrait'
                  seasonStatus:
                    type: array
                    items:
                      $ref: '#/components/schemas/SeasonStatus'
                  lifetimeSeasonScore:
                    type: integer
                    format: int64
                  playerRating:
                    $ref: '#/components/schemas/PlayerRating'
                  datacron:
                    type: array
                    items:
                      $ref: '#/components/schemas/Datacron'
                  nucleusId:
                    type: string
        4XX:
          $ref: '#/components/responses/errorResponse'
  /playerArena:
    post:
      summary: Get a player's arena profile
      operationId: getPlayerArenaProfile
      tags:
        - player
        - arena
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - payload
              properties:
                payload:
                  type: object
                  oneOf:
                    - required:
                        - allyCode
                    - required:
                        - playerId
                  properties:
                    allyCode:
                      type: string
                      pattern: ^[1-9]{9}$
                      errorMessage:
                        pattern: must be 9 digits long and only contain numbers 1-9
                    playerId:
                      type: string
                      pattern: ^[A-Za-z0-9\-_]{22}$
                      errorMessage:
                        pattern: >-
                          must be 22 digits long and only contain alphanumeric
                          characters plus - and _
                    playerDetailsOnly:
                      type: boolean
                      default: false
                  additionalProperties: false
                  errorMessage:
                    oneOf: Must include either allyCode or playerId, but not both
                enums:
                  type: boolean
                  default: false
              additionalProperties: false
        required: true
      responses:
        2XX:
          description: getPlayerArenaProfile successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  level:
                    type: integer
                    format: int32
                  allyCode:
                    type: integer
                    format: int64
                  playerId:
                    type: string
                  pvpProfile:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerPvpProfile'
                  localTimeZoneOffsetMinutes:
                    type: integer
                    format: int32
                  lifetimeSeasonScore:
                    type: integer
                    format: int64
                  playerRating:
                    $ref: '#/components/schemas/PlayerRating'
                  nucleusId:
                    type: string
        4XX:
          $ref: '#/components/responses/errorResponse'
components:
  schemas:
    GameEvent:
      type: object
      properties:
        id:
          type: string
        priority:
          type: integer
          format: int32
        nameKey:
          type: string
        summaryKey:
          type: string
        descKey:
          type: string
        image:
          type: string
        type:
          $ref: '#/components/schemas/GameEventType'
        instance:
          type: array
          items:
            $ref: '#/components/schemas/GameEventInstance'
        status:
          $ref: '#/components/schemas/GameEventStatus'
        campaignElementIdentifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        squadType:
          $ref: '#/components/schemas/SquadType'
        previewKey:
          type: string
        reviewKey:
          type: string
        uiLocation:
          $ref: '#/components/schemas/GameEventUILocation'
        icon:
          type: string
        defensiveSquadUsageCostEnabled:
          type: boolean
        encounterMessage:
          type: array
          items:
            $ref: '#/components/schemas/ContextualMessageGroup'
        environment:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
        descKeyUnitCriteriaMet:
          type: string
        defensiveSquadType:
          $ref: '#/components/schemas/SquadType'
        combatType:
          $ref: '#/components/schemas/CombatType'
        imageEffect:
          type: string
        unlockRequirementLocalizationKey:
          type: string
        territoryMapId:
          type: string
        pushNotificationTitleKey:
          type: string
        pushNotificationDescKey:
          type: string
        seasonDefId:
          type: string
        unlockRequirementId:
          type: string
        feat:
          type: array
          items:
            $ref: '#/components/schemas/Feat'
        linkedStoreItemId:
          type: array
          items:
            type: string
        factionImage:
          type: string
        detailsType:
          $ref: '#/components/schemas/GameEventDetailsType'
        conquestId:
          type: string
        rankRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        iconJoin:
          type: string
        iconSetDefense:
          type: string
        iconAttack:
          type: string
    GameEventType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
        - type: string
          enum:
            - GameEventType_DEFAULT
            - SCHEDULED
            - KEYCARD
            - PROGRESSION
            - MODS
            - PVPEVENT
            - ECONOMYEVENT
            - TERRITORYMAPEVENT
            - TERRITORYWAREVENT
            - TERRITORYBATTLEEVENT
            - TERRITORYTOURNAMENTEVENT
            - ARCADERAID
            - SEASON
            - LIFECYCLED
            - CONQUESTEVENT
    GameEventInstance:
      type: object
      properties:
        id:
          type: string
        startTime:
          type: integer
          format: int64
        endTime:
          type: integer
          format: int64
        displayStartTime:
          type: integer
          format: int64
        displayEndTime:
          type: integer
          format: int64
        timeLimited:
          type: boolean
        campaignElementIdentifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        rewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        rankRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        entryCategoryAllowed:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        defensiveSquadSize:
          type: integer
          format: int32
        unitDailyUsageCapKey:
          type: string
        rosterRefreshTime:
          type: integer
          format: int64
        joined:
          type: boolean
        summaryKey:
          type: string
        rewardTime:
          type: integer
          format: int64
        defensiveSquadSaveTimeLimit:
          type: integer
          format: int64
        systemModifier:
          $ref: '#/components/schemas/SystemModifier'
        supportsPushNotifications:
          type: boolean
        linkedEventId:
          type: array
          items:
            type: string
    CampaignElementIdentifier:
      type: object
      properties:
        campaignId:
          type: string
        campaignMapId:
          type: string
        campaignNodeId:
          type: string
        campaignNodeDifficulty:
          $ref: '#/components/schemas/CampaignNodeDifficulty'
        campaignMissionId:
          type: string
    CampaignNodeDifficulty:
      oneOf:
        - type: integer
          enum:
            - 0
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
        - type: string
          enum:
            - NOTSET
            - NORMALDIFF
            - HARDDIFF
            - NIGHTMAREDIFF
            - SPECIALDIFF
            - IDIFF
            - IIDIFF
            - IIIDIFF
            - IVDIFF
            - VDIFF
            - VIDIFF
    BucketItem:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ItemType'
        minQuantity:
          type: integer
          format: int32
        maxQuantity:
          type: integer
          format: int32
        rarity:
          $ref: '#/components/schemas/Rarity'
        statMod:
          $ref: '#/components/schemas/StatMod'
        previewPriority:
          type: integer
          format: int32
        unitLevel:
          type: integer
          format: int32
        unitTier:
          $ref: '#/components/schemas/UnitTier'
        primaryReward:
          type: boolean
    ItemType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 6
            - 7
            - 8
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
        - type: string
          enum:
            - ItemType_DEFAULT
            - EMPTY
            - UNIT
            - CURRENCY
            - BUCKET
            - XP
            - MATERIAL
            - ENERGY
            - EQUIPMENT
            - EVENTKEYCARD
            - POWERUPBUNDLE
            - MYSTERYBOX
            - STATMOD
            - MYSTERYSTATMOD
            - PLAYERTITLE
            - STATMODPARAMETERIZED
            - PLAYERPORTRAIT
            - SEASONPOINT
            - GALACTICBUNDLE
            - CONQUESTPOINT
            - ARTIFACT
            - CONQUESTCONSUMABLE
            - BATTLEPASS
            - LOGINCALENDAR
            - CONQUESTSTAMINAREGENREDUCE
            - CONQUESTENERGYREGENREDUCE
            - CONQUESTARTIFACTFREESWAPBONUS
            - DATACRON
    Rarity:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
        - type: string
          enum:
            - Rarity_DEFAULT
            - ONESTAR
            - TWOSTAR
            - THREESTAR
            - FOURSTAR
            - FIVESTAR
            - SIXSTAR
            - SEVENSTAR
            - NOSTAR
    StatMod:
      type: object
      properties:
        id:
          type: string
        definitionId:
          type: string
        level:
          type: integer
          format: int32
        tier:
          $ref: '#/components/schemas/StatModTier'
        sellValue:
          $ref: '#/components/schemas/CurrencyItem'
        removeCost:
          $ref: '#/components/schemas/CurrencyItem'
        locked:
          type: boolean
        primaryStat:
          $ref: '#/components/schemas/StatModStat'
        secondaryStat:
          type: array
          items:
            $ref: '#/components/schemas/StatModStat'
        xp:
          type: integer
          format: int32
        levelCost:
          $ref: '#/components/schemas/CurrencyItem'
        bonusQuantity:
          type: integer
          format: int32
        convertedItem:
          $ref: '#/components/schemas/BucketItem'
        rerolledCount:
          type: integer
          format: int32
    StatModTier:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        - type: string
          enum:
            - StatModTier_DEFAULT
            - STATMODTIER01
            - STATMODTIER02
            - STATMODTIER03
            - STATMODTIER04
            - STATMODTIER05
    CurrencyItem:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyType'
        quantity:
          type: integer
          format: int32
        bonusQuantity:
          type: integer
          format: int32
    CurrencyType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 37
            - 38
            - 39
            - 40
            - 41
            - 42
            - 43
            - 44
            - 45
            - 46
            - 47
        - type: string
          enum:
            - CurrencyType_DEFAULT
            - GRIND
            - PREMIUM
            - REALMONEY
            - SOCIAL
            - IGCEVENTKEYCARD
            - XPEVENTKEYCARD
            - PVPCURRENCY
            - FORCEPOINT
            - PVPSHIPCURRENCY
            - FREE
            - WARSHIPCURRENCY
            - GRINDTICKET
            - SHARDCURRENCY
            - GUILDCURRENCY
            - GUILDBANKCURRENCY
            - SHIPGRIND
            - GUILDRAIDCURRENCY01
            - GUILDRAIDCURRENCY02
            - GUILDRAIDCURRENCY03
            - GUILDRAIDCURRENCY04
            - GUILDRAIDCURRENCY05
            - GUILDRAIDCURRENCY06
            - GUILDRAIDCURRENCY07
            - GUILDRAIDCURRENCY08
            - GUILDRAIDCURRENCY09
            - GUILDRAIDCURRENCY10
            - GUILDRAIDCURRENCY11
            - GUILDRAIDCURRENCY12
            - TERRITORYBATTLECURRENCY
            - SEASONSCURRENCY
            - TERRITORYBATTLECURRENCY02
            - GALACTICBUNDLECURRENCY
            - LIGHTSIDECURRENCY
            - DARKSIDECURRENCY
            - GALACTICCHALLENGECURRENCY
            - CONQUESTCURRENCY
            - DATACRONCURRENCY
            - MODREROLLCURRENCY
            - TERRITORYBATTLECURRENCY03
            - RAIDREWARDCURRENCY01
            - RAIDREWARDCURRENCY02
            - RAIDREWARDCURRENCY03
            - RAIDREWARDCURRENCY04
            - GLEVENTCURRENCY
    StatModStat:
      type: object
      properties:
        stat:
          $ref: '#/components/schemas/Stat'
        roll:
          type: array
          items:
            type: string
        statRolls:
          type: integer
          format: int32
        statRollerBoundsMin:
          type: integer
          format: int64
        statRollerBoundsMax:
          type: integer
          format: int64
        unscaledRollValue:
          type: array
          items:
            type: integer
            format: int64
    Stat:
      type: object
      properties:
        unitStatId:
          $ref: '#/components/schemas/UnitStat'
        statValueDecimal:
          type: integer
          format: int64
        unscaledDecimalValue:
          type: integer
          format: int64
        uiDisplayOverrideValue:
          type: integer
          format: int64
        scalar:
          type: integer
          format: int64
    UnitStat:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 37
            - 38
            - 39
            - 40
            - 41
            - 42
            - 43
            - 44
            - 45
            - 46
            - 47
            - 48
            - 49
            - 50
            - 51
            - 52
            - 53
            - 54
            - 55
            - 56
            - 57
            - 58
            - 59
            - 60
            - 61
        - type: string
          enum:
            - UnitStat_DEFAULT
            - UNITSTATMAXHEALTH
            - UNITSTATSTRENGTH
            - UNITSTATAGILITY
            - UNITSTATINTELLIGENCE
            - UNITSTATSPEED
            - UNITSTATATTACKDAMAGE
            - UNITSTATABILITYPOWER
            - UNITSTATARMOR
            - UNITSTATSUPPRESSION
            - UNITSTATARMORPENETRATION
            - UNITSTATSUPPRESSIONPENETRATION
            - UNITSTATDODGERATING
            - UNITSTATDEFLECTIONRATING
            - UNITSTATATTACKCRITICALRATING
            - UNITSTATABILITYCRITICALRATING
            - UNITSTATCRITICALDAMAGE
            - UNITSTATACCURACY
            - UNITSTATRESISTANCE
            - UNITSTATDODGEPERCENTADDITIVE
            - UNITSTATDEFLECTIONPERCENTADDITIVE
            - UNITSTATATTACKCRITICALPERCENTADDITIVE
            - UNITSTATABILITYCRITICALPERCENTADDITIVE
            - UNITSTATARMORPERCENTADDITIVE
            - UNITSTATSUPPRESSIONPERCENTADDITIVE
            - UNITSTATARMORPENETRATIONPERCENTADDITIVE
            - UNITSTATSUPPRESSIONPENETRATIONPERCENTADDITIVE
            - UNITSTATHEALTHSTEAL
            - UNITSTATMAXSHIELD
            - UNITSTATSHIELDPENETRATION
            - UNITSTATHEALTHREGEN
            - UNITSTATATTACKDAMAGEPERCENTADDITIVE
            - UNITSTATABILITYPOWERPERCENTADDITIVE
            - UNITSTATDODGENEGATEPERCENTADDITIVE
            - UNITSTATDEFLECTIONNEGATEPERCENTADDITIVE
            - UNITSTATATTACKCRITICALNEGATEPERCENTADDITIVE
            - UNITSTATABILITYCRITICALNEGATEPERCENTADDITIVE
            - UNITSTATDODGENEGATERATING
            - UNITSTATDEFLECTIONNEGATERATING
            - UNITSTATATTACKCRITICALNEGATERATING
            - UNITSTATABILITYCRITICALNEGATERATING
            - UNITSTATOFFENSE
            - UNITSTATDEFENSE
            - UNITSTATDEFENSEPENETRATION
            - UNITSTATEVASIONRATING
            - UNITSTATCRITICALRATING
            - UNITSTATEVASIONNEGATERATING
            - UNITSTATCRITICALNEGATERATING
            - UNITSTATOFFENSEPERCENTADDITIVE
            - UNITSTATDEFENSEPERCENTADDITIVE
            - UNITSTATDEFENSEPENETRATIONPERCENTADDITIVE
            - UNITSTATEVASIONPERCENTADDITIVE
            - UNITSTATEVASIONNEGATEPERCENTADDITIVE
            - UNITSTATCRITICALCHANCEPERCENTADDITIVE
            - UNITSTATCRITICALNEGATECHANCEPERCENTADDITIVE
            - UNITSTATMAXHEALTHPERCENTADDITIVE
            - UNITSTATMAXSHIELDPERCENTADDITIVE
            - UNITSTATSPEEDPERCENTADDITIVE
            - UNITSTATCOUNTERATTACKRATING
            - UNITSTATTAUNT
            - UNITSTATDEFENSEPENETRATIONTARGETPERCENTADDITIVE
            - UNITSTATMASTERY
    UnitTier:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
        - type: string
          enum:
            - TIERUNDEFINED
            - TIER01
            - TIER02
            - TIER03
            - TIER04
            - TIER05
            - TIER06
            - TIER07
            - TIER08
            - TIER09
            - TIER10
            - TIER11
            - TIER12
            - TIER13
            - TIER14
            - TIER15
            - TIER16
            - TIER17
            - TIER18
            - TIER19
            - TIER20
    RankRewardPreview:
      type: object
      properties:
        rankStart:
          type: integer
          format: int32
        rankEnd:
          type: integer
          format: int32
        primaryReward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        detailedReward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
    EntryCategoryAllowed:
      type: object
      properties:
        categoryId:
          type: array
          items:
            type: string
        maximumAllowedUnitQuantity:
          type: integer
          format: int32
        matchType:
          $ref: '#/components/schemas/CategoryMatchType'
        minimumRequiredUnitQuantity:
          type: integer
          format: int32
        minimumUnitRarity:
          $ref: '#/components/schemas/Rarity'
        minimumOwnedUnitQuantity:
          type: integer
          format: int32
        minimumUnitLevel:
          type: integer
          format: int32
        minimumUnitTier:
          $ref: '#/components/schemas/UnitTier'
        maximumReinforcement:
          type: integer
          format: int32
        commanderCategoryId:
          type: array
          items:
            type: string
        minimumReinforcement:
          type: integer
          format: int32
        minimumGalacticPower:
          type: integer
          format: int32
        mandatoryRosterUnit:
          type: array
          items:
            $ref: '#/components/schemas/MandatoryRosterUnit'
        excludeCategoryId:
          type: array
          items:
            type: string
        minimumRelicTier:
          $ref: '#/components/schemas/RelicTier'
        minimumModRarity:
          $ref: '#/components/schemas/Rarity'
        minimumAbilityLevelAvg:
          type: integer
          format: int32
        minimumAbilityLevelAll:
          type: integer
          format: int32
        legendLimit:
          type: integer
          format: int32
        unitGuideMinimumRequiredUnitQuantity:
          type: integer
          format: int32
        bigUnitLimit:
          type: integer
          format: int32
    CategoryMatchType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - CategoryMatchType_DEFAULT
            - MATCHALL
            - MATCHANY
    MandatoryRosterUnit:
      type: object
      properties:
        id:
          type: string
        slot:
          type: integer
          format: int32
    RelicTier:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 37
            - 38
            - 39
            - 40
            - 41
            - 42
            - 43
            - 44
            - 45
            - 46
            - 47
            - 48
            - 49
            - 50
            - 51
            - 52
        - type: string
          enum:
            - RelicTier_DEFAULT
            - RELICLOCKED
            - RELICUNLOCKED
            - RELICTIER01
            - RELICTIER02
            - RELICTIER03
            - RELICTIER04
            - RELICTIER05
            - RELICTIER06
            - RELICTIER07
            - RELICTIER08
            - RELICTIER09
            - RELICTIER10
            - RELICTIER11
            - RELICTIER12
            - RELICTIER13
            - RELICTIER14
            - RELICTIER15
            - RELICTIER16
            - RELICTIER17
            - RELICTIER18
            - RELICTIER19
            - RELICTIER20
            - RELICTIER21
            - RELICTIER22
            - RELICTIER23
            - RELICTIER24
            - RELICTIER25
            - RELICTIER26
            - RELICTIER27
            - RELICTIER28
            - RELICTIER29
            - RELICTIER30
            - RELICTIER31
            - RELICTIER32
            - RELICTIER33
            - RELICTIER34
            - RELICTIER35
            - RELICTIER36
            - RELICTIER37
            - RELICTIER38
            - RELICTIER39
            - RELICTIER40
            - RELICTIER41
            - RELICTIER42
            - RELICTIER43
            - RELICTIER44
            - RELICTIER45
            - RELICTIER46
            - RELICTIER47
            - RELICTIER48
            - RELICTIER49
            - RELICTIER50
    SystemModifier:
      type: object
      properties:
        id:
          type: string
        scaleItemModifier:
          $ref: '#/components/schemas/ScaleItemModifier'
        location:
          type: array
          items:
            $ref: '#/components/schemas/ModifierLocation'
        additionalItemModifier:
          $ref: '#/components/schemas/AdditionalItemModifier'
        descKey:
          type: string
        actionLink:
          $ref: '#/components/schemas/ActionLink'
    ScaleItemModifier:
      type: object
      properties:
        scale:
          type: integer
          format: int32
        target:
          type: array
          items:
            $ref: '#/components/schemas/ModifierItem'
    ModifierItem:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ItemType'
        materialType:
          $ref: '#/components/schemas/MaterialType'
        id:
          type: string
        category:
          type: string
    MaterialType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
        - type: string
          enum:
            - MaterialType_DEFAULT
            - CRAFTINGMATERIAL
            - XPMATERIAL
            - UNITSHARDMATERIAL
            - PROMOTIONMATERIAL
            - SKILLMATERIAL
            - SELLMATERIAL
            - SHIPXPMATERIAL
            - SHIPSKILLMATERIAL
            - STATMODSLICINGMATERIAL
            - STATMODOVERCLOCKINGMATERIAL
            - RELICMATERIAL
            - SCRAPMATERIAL
            - SCRAPSURPLUS
            - DATACRONMATERIAL
    ModifierLocation:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ModifierLocationType'
        identifier:
          type: string
    ModifierLocationType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - ModifierLocationType_DEFAULT
            - MODIFIERLOCATIONCAMPAIGN
            - MODIFIERLOCATIONGALACTICWAR
    AdditionalItemModifier:
      type: object
      properties:
        addedItem:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
    ActionLink:
      type: object
      properties:
        link:
          type: string
        type:
          $ref: '#/components/schemas/ActionLinkType'
    ActionLinkType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - ActionLinkType_DEFAULT
            - INTERNAL
            - EXTERNAL
    GameEventStatus:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - GameEventStatus_DEFAULT
            - EVENTLOCKED
            - EVENTUNLOCKED
    SquadType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 37
            - 38
            - 39
            - 40
            - 41
            - 42
            - 43
            - 44
            - 45
            - 46
            - 47
            - 48
            - 49
            - 50
            - 51
            - 52
            - 53
            - 54
            - 55
            - 56
            - 57
            - 58
        - type: string
          enum:
            - SquadType_DEFAULT
            - SQUADNEUTRAL
            - SQUADLIGHT
            - SQUADDARK
            - SQUADEVENT
            - SQUADPVP
            - SQUADRESTRICTED
            - SQUADSUPPLIED
            - SQUADWAR
            - SQUADEVENT01
            - SQUADEVENT02
            - SQUADEVENT03
            - SQUADEVENT04
            - SQUADEVENT05
            - SQUADEVENT06
            - SQUADEVENT07
            - SQUADEVENT08
            - SQUADEVENT09
            - SQUADEVENT10
            - SQUADEVENT11
            - SQUADEVENT12
            - SQUADEVENT13
            - SQUADEVENT14
            - SQUADEVENT15
            - SQUADEVENT16
            - SQUADEVENT17
            - SQUADEVENT18
            - SQUADEVENT19
            - SQUADEVENT20
            - SQUADWARDEFENSIVE
            - SQUADGUILDRAID
            - SQUADSTATMODBATTLES
            - SQUADEVENTDEFENSIVE
            - SQUADEVENTDEFENSIVE01
            - SQUADEVENTDEFENSIVE02
            - SQUADEVENTDEFENSIVE03
            - SQUADEVENTDEFENSIVE04
            - SQUADEVENTDEFENSIVE05
            - SQUADEVENTDEFENSIVE06
            - SQUADEVENTDEFENSIVE07
            - SQUADEVENTDEFENSIVE08
            - SQUADEVENTDEFENSIVE09
            - SQUADEVENTDEFENSIVE10
            - SQUADEVENTDEFENSIVE11
            - SQUADEVENTDEFENSIVE12
            - SQUADEVENTDEFENSIVE13
            - SQUADEVENTDEFENSIVE14
            - SQUADEVENTDEFENSIVE15
            - SQUADEVENTDEFENSIVE16
            - SQUADEVENTDEFENSIVE17
            - SQUADEVENTDEFENSIVE18
            - SQUADEVENTDEFENSIVE19
            - SQUADEVENTDEFENSIVE20
            - SQUADTERRITORYWARATTACK
            - SQUADTERRITORYWARDEFENSIVE
            - SQUADTERRITORYTOURNAMENTATTACK
            - SQUADTERRITORYTOURNAMENTDEFENSIVE
            - SQUADARCADERAID
            - SQUADCONQUEST
    GameEventUILocation:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
        - type: string
          enum:
            - GameEventUILocation_DEFAULT
            - GAMEEVENTUILOCATIONTRIALS
            - GAMEEVENTUILOCATIONEVENTS
            - GAMEEVENTUILOCATIONMODS
            - GAMEEVENTUILOCATIONSHIPTRIALS
            - GAMEEVENTUILOCATIONNONE
            - GAMEEVENTUILOCATIONSEASONHUB
            - GAMEEVENTUILOCATIONCONQUEST
    ContextualMessageGroup:
      type: object
      properties:
        groupId:
          type: string
        startMessage:
          type: string
        message:
          type: array
          items:
            $ref: '#/components/schemas/ContextualMessage'
        priority:
          type: integer
          format: int32
        canDismissWhileHidden:
          type: boolean
        startTime:
          type: integer
          format: int64
        endTime:
          type: integer
          format: int64
        isFtue:
          type: boolean
    ContextualMessage:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ContextualMessageType'
        titleKey:
          type: string
        textKey:
          type: string
        pointAt:
          $ref: '#/components/schemas/PointAtElement'
        appearEvent:
          type: array
          items:
            type: string
        dismissEvent:
          type: array
          items:
            type: string
        hideEvent:
          type: array
          items:
            type: string
        actionLink:
          type: string
        nextMessageId:
          type: string
        clientRequirement:
          $ref: '#/components/schemas/Requirement'
        characterDialog:
          $ref: '#/components/schemas/CharacterDialog'
        nextMessageIdDecline:
          type: string
        canDismissWhileHidden:
          type: boolean
        ftueSubStep:
          type: integer
          format: int32
        cantinaCharacterDialog:
          $ref: '#/components/schemas/CantinaCharacterDialog'
        actionLinkDef:
          $ref: '#/components/schemas/ActionLink'
        storePromoDialog:
          $ref: '#/components/schemas/StorePromoDialog'
        showExitButton:
          type: boolean
    ContextualMessageType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
        - type: string
          enum:
            - ContextualMessageType_DEFAULT
            - POINTATVIEWELEMENT
            - CHARACTERDIALOG
            - MODALDIALOGONEBUTTON
            - MODALDIALOGTWOBUTTON
            - CANTINACHARACTERDIALOG
            - UNITUNLOCK
            - STOREPROMODIALOG
            - CHALLENGEQUESTREWARDS
    PointAtElement:
      type: object
      properties:
        elementId:
          type: string
        offsetX:
          type: integer
          format: int32
        offsetY:
          type: integer
          format: int32
        rotation:
          type: number
          format: float
        textOffsetX:
          type: integer
          format: int32
        textOffsetY:
          type: integer
          format: int32
        textOffsetAnchor:
          type: string
        update:
          type: boolean
        clamp:
          type: boolean
        rotationBehavior:
          $ref: '#/components/schemas/PointAtRotationBehavior'
        delaySeconds:
          type: number
          format: float
        showArrow:
          type: boolean
        showHighlight:
          type: boolean
        imageSource:
          type: string
        imageWidth:
          type: integer
          format: int32
        imageHeight:
          type: integer
          format: int32
        imageOffsetX:
          type: integer
          format: int32
        imageOffsetY:
          type: integer
          format: int32
        pointerType:
          $ref: '#/components/schemas/PointerType'
        tapDismiss:
          type: boolean
        scrimVisible:
          type: boolean
        scrimBlocking:
          type: boolean
        showText:
          type: boolean
        showBartender:
          type: boolean
        bartenderTexture:
          type: string
    PointAtRotationBehavior:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - PointAtRotationBehavior_DEFAULT
            - ROTATIONBEHAVIORNONE
            - ROTATIONBEHAVIORAUTOFROMCENTER
            - ROTATIONBEHAVIORAUTOFROMCENTERIFCLAMPED
    PointerType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - PointerType_DEFAULT
            - POINT
            - CLICK
            - SWIPE
    Requirement:
      type: object
      properties:
        evalType:
          $ref: '#/components/schemas/EvaluationType'
        requirementItem:
          type: array
          items:
            $ref: '#/components/schemas/RequirementItem'
        id:
          type: string
        descKey:
          type: string
    EvaluationType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - EvaluationType_DEFAULT
            - AND
            - OR
    RequirementItem:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RequirementType'
        id:
          type: string
        value:
          type: integer
          format: int32
        locKey:
          type: string
        negate:
          type: boolean
    RequirementType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 3
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 19
            - 20
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 37
            - 38
            - 39
            - 40
            - 41
            - 42
            - 43
            - 44
            - 45
            - 46
            - 47
            - 48
            - 49
            - 50
            - 51
            - 52
            - 53
            - 54
            - 55
            - 56
            - 57
            - 58
            - 59
            - 60
            - 61
            - 62
            - 63
            - 64
            - 65
            - 66
            - 67
            - 68
            - 69
            - 70
            - 71
            - 72
            - 73
            - 74
            - 75
            - 76
            - 77
            - 78
            - 79
            - 80
            - 81
            - 82
            - 83
            - 84
            - 85
            - 86
            - 87
            - 88
            - 89
            - 90
            - 91
            - 92
            - 93
            - 94
            - 95
            - 96
            - 97
            - 98
            - 99
            - 100
            - 101
            - 102
            - 103
            - 104
            - 105
            - 106
            - 107
            - 108
            - 109
            - 110
            - 111
            - 112
            - 113
            - 114
            - 115
            - 116
            - 117
            - 118
        - type: string
          enum:
            - RequirementType_DEFAULT
            - CURRENCYREQUIREMENT
            - ROSTERCHARACTERNOTCATEGORYNOTINSQUADREQUIREMENT
            - SQUADSIZEMAXIMUMREQUIREMENT
            - ROSTERCHARACTERCATEGORYNOTINUSEREQUIREMENT
            - ROSTERCHARACTERNOTINUSEREQUIREMENT
            - SQUADSIZEMINIMUMREQUIREMENT
            - ENEMYTHREATLEVELREQUIREMENT
            - ANYCHARACTERREADYFORPROMOTION
            - UNITTRAININGAVAILABLE
            - PLAYERLEVELMINREQUIREMENT
            - ROSTERUNITTYPEREQUIREMENT
            - ROSTERUNITTYPEMAXREQUIREMENT
            - UNITABILITYUPGRADEAVAILABLE
            - UNITGEAREQUIPAVAILABLE
            - CURRENTUNITGEAREQUIPAVAILABLE
            - PLAYERUNITHEALTHBELOWPERCENT
            - REQUIREMENTINVALID
            - CURRENTCHARACTERREADYFORPROMOTION
            - BATTLEANYSTATUSEFFECTACTIVE
            - STOREITEMAVAILABLEFORPURCHASE
            - CURRENTMISSIONHASGEARDROP
            - PLAYERLEVELMAXREQUIREMENT
            - CAMPAIGNREQUIREMENT
            - ANYDAILYACTIVITYREADYFORCLAIM
            - FACEBOOKLOGINAVAILABLE
            - ANYUNITREACHEDMAXRARITY
            - CURRENTCHARACTERREADYFORTIERUP
            - EVENTACTIVE
            - BATTLEANYUNITHASSHIELD
            - CURRENTCHARACTERMINTIER
            - UNITLEVELMAXREQUIREMENT
            - UNITLEVELMINREQUIREMENT
            - ROSTERUNITREQUIREMENT
            - UNITSHARDREQUIREMENT
            - ROSTERUNITCOMBATTYPEREQUIREMENT
            - BATTLETURNCOUNT
            - BATTLEENCOUNTERSTARTED
            - BATTLEUNITTURNSQUADCELLINDEX
            - ROSTERUNITCLASSREQUIREMENT
            - SHIPSUNLOCKED
            - UNITHASALLYABILITYREQUIREMENT
            - UNITHASREINFORCEMENTABILITYREADY
            - REINFORCEMENTSLOTAVAILABLE
            - ROSTERCANBUILDVALIDSQUADREQUIREMENT
            - BATTLEACTIVECOMBATTYPE
            - BATTLEPLAYERUNITABILITYCANBEACTIVATED
            - BATTLETURNOWNER
            - ROSTERUNITNOTOWNEDREQUIREMENT
            - UNITUNLOCKREQUIREMENT
            - GUILDTERRITORYMAPCONFLICTCOMPLETED
            - GUILDTERRITORYRECONSCOREMIN
            - GUILDTERRITORYRECONSCOREMAX
            - UNITDEPLOYREQUIREMENT
            - GUILDTERRITORYZONESTATUS
            - TERRITORYWAREVENTAVAILABLE
            - CHALLENGEQUESTREWARDSPENDING
            - QUESTCOMPLETEREQUIREMENT
            - GRANDARENAEVENTACTIVE
            - GUILDSTATREQUIREMENT
            - GUILDCAMPAIGNWINREQUIREMENT
            - GUILDGALACTICPOWERMIN
            - AUTOBATTLEINACTIVE
            - AUTOBATTLEACTIVE
            - BATTLENOTPAUSED
            - BATTLESETTINGSCLOSED
            - SEASONSMAXDIVISION
            - SEASONSMINDIVISION
            - SEASONSINDIVISION
            - SEASONSMAXLEAGUE
            - SEASONSMINLEAGUE
            - SEASONSINLEAGUE
            - PLAYERPORTRAITOWNED
            - SEASONSEQUALHIGHESTLIFETIMELEAGUE
            - SEASONSMAXHIGHESTLIFETIMELEAGUE
            - SEASONSMINHIGHESTLIFETIMELEAGUE
            - EQUIPMENTOWNEDCOUNT
            - RELICUNLOCKAVAILABLE
            - MESSAGEGROUPAVAILABLE
            - REQUIREMENT
            - DAYSSINCEINSTALLMINREQUIREMENT
            - DAYSSINCEINSTALLMAXREQUIREMENT
            - UNITMINRELICLEVEL
            - ANYUNITMINRELICLEVEL
            - GALACTICBUNDLEREQUIREMENT
            - UNITMINGALACTICPOWER
            - UNITMAXGALACTICPOWER
            - OWNEDUNITMAXRARITY
            - EVENTCOMPLETEDREQUIREMENT
            - GALACTICPOWERHIGHWATERMARKREQUIREMENT
            - PLAYERISELIGIBLEFORACTIVETERRITORYBATTLE
            - TERRITORYBATTLEMINROUND
            - TERRITORYBATTLEMAXROUND
            - RAIDACTIVEREQUIREMENT
            - CHALLENGEREQUIREMENT
            - PLAYERINGUILDREQUIREMENT
            - EVENTMISSIONSVIEWVISIBLE
            - FINDFLOWFIRSTTIMEREWARD
            - CAMPAIGNTIMESCOMPLETED
            - CURRENTCHARACTERREADYFORABILITYUPGRADE
            - CONQUESTACTIVEEVENTJOINED
            - LOGINCALENDARACTIVE
            - GALACTICLEGENDSOWNEDMIN
            - DATACRONSOWNEDMIN
            - UNITOWNEDSHARDREQUIREMENT
            - WINMISSIONNTIMES
            - FILLSPECIFICPLATOON
            - CONQUESTPASSOWNED
    CharacterDialog:
      type: object
      properties:
        characterPrefab:
          type: string
        animations:
          type: array
          items:
            type: string
        audioKey:
          type: string
        layout:
          type: string
        useHologramEffect:
          type: boolean
    CantinaCharacterDialog:
      type: object
      properties:
        texture:
          type: string
    StorePromoDialog:
      type: object
      properties:
        storeItemId:
          type: string
        descriptionTexture:
          type: string
        buttonKey:
          type: string
        showPrice:
          type: boolean
    Environment:
      type: object
      properties:
        prefab:
          type: string
        layout:
          type: string
        layoutPrefab:
          type: string
    CombatType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - CombatType_DEFAULT
            - CHARACTER
            - SHIP
    Feat:
      type: object
      properties:
        challengeId:
          type: string
    GameEventDetailsType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - GameEventDetailsType_DEFAULT
            - EVENTDEFAULT
            - EVENTMODULAR
    UnitDef:
      type: object
      properties:
        id:
          type: string
        unitPrefab:
          type: string
        thumbnailName:
          type: string
        nameKey:
          type: string
        rarity:
          $ref: '#/components/schemas/Rarity'
        maxRarity:
          $ref: '#/components/schemas/Rarity'
        forceAlignment:
          $ref: '#/components/schemas/ForceAlignment'
        xpTableId:
          type: string
        actionCountMin:
          type: integer
          format: int32
        actionCountMax:
          type: integer
          format: int32
        combatType:
          $ref: '#/components/schemas/CombatType'
        descKey:
          type: string
        threatLevel:
          $ref: '#/components/schemas/ThreatLevel'
        obtainable:
          type: boolean
        baseId:
          type: string
        promotionRecipeReference:
          type: string
        statProgressionId:
          type: string
        categoryId:
          type: array
          items:
            type: string
        trainingXpWorthBaseValueOverride:
          type: integer
          format: int32
        maxLevelOverride:
          type: integer
          format: int32
        trainingCostMultiplierOverride:
          type: integer
          format: int32
        creationRecipeReference:
          type: string
        skillReference:
          type: array
          items:
            $ref: '#/components/schemas/SkillDefinitionReference'
        basePower:
          type: integer
          format: int32
        baseStat:
          $ref: '#/components/schemas/StatDef'
        primaryStat:
          type: string
        unitTier:
          type: array
          items:
            $ref: '#/components/schemas/UnitTierDef'
        basicAttack:
          $ref: '#/components/schemas/Ability'
        leaderAbility:
          $ref: '#/components/schemas/Ability'
        limitBreak:
          type: array
          items:
            $ref: '#/components/schemas/Ability'
        uniqueAbility:
          type: array
          items:
            $ref: '#/components/schemas/Ability'
        basicAttackRef:
          $ref: '#/components/schemas/AbilityReference'
        leaderAbilityRef:
          $ref: '#/components/schemas/AbilityReference'
        limitBreakRef:
          type: array
          items:
            $ref: '#/components/schemas/AbilityReference'
        uniqueAbilityRef:
          type: array
          items:
            $ref: '#/components/schemas/AbilityReference'
        primaryUnitStat:
          $ref: '#/components/schemas/UnitStat'
        obtainableTime:
          type: integer
          format: int64
        crew:
          type: array
          items:
            $ref: '#/components/schemas/CrewMember'
        commandCost:
          type: integer
          format: int32
        crewContributionTableId:
          type: string
        unitClass:
          $ref: '#/components/schemas/UnitClass'
        battlePortraitPrefab:
          type: string
        battlePortraitNameKey:
          type: string
        modRecommendation:
          type: array
          items:
            $ref: '#/components/schemas/UnitModRecommendation'
        effectIconPriorityOverride:
          type: array
          items:
            type: string
        summonStatTable:
          type: array
          items:
            $ref: '#/components/schemas/SummonStatTable'
        relicDefinition:
          $ref: '#/components/schemas/RelicDefinition'
        capitalUnlockKey:
          type: string
        legend:
          type: boolean
        squadPositionPriority:
          type: integer
          format: int32
        exampleSquad:
          type: array
          items:
            $ref: '#/components/schemas/RecommendedSquad'
        big:
          type: boolean
        hideInTurnOrder:
          type: boolean
        thumbImageTurnOrder:
          type: string
        requireUltimateUnlock:
          type: boolean
    ForceAlignment:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - ForceAlignment_DEFAULT
            - NEUTRAL
            - LIGHT
            - DARK
    ThreatLevel:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        - type: string
          enum:
            - ThreatLevel_DEFAULT
            - NORMAL
            - ELITE
            - BOSS
            - ANY
            - SUMMON
    SkillDefinitionReference:
      type: object
      properties:
        skillId:
          type: string
        requiredTier:
          $ref: '#/components/schemas/UnitTier'
        requiredRarity:
          $ref: '#/components/schemas/Rarity'
        requiredRelicTier:
          $ref: '#/components/schemas/RelicTier'
    StatDef:
      type: object
      properties:
        stat:
          type: array
          items:
            $ref: '#/components/schemas/Stat'
    UnitTierDef:
      type: object
      properties:
        tier:
          $ref: '#/components/schemas/UnitTier'
        equipmentSet:
          type: array
          items:
            type: string
        baseStat:
          $ref: '#/components/schemas/StatDef'
    Ability:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descKey:
          type: string
        prefabName:
          type: string
        triggerCondition:
          type: array
          items:
            $ref: '#/components/schemas/BattleCondition'
        stackingLineOverride:
          type: string
        tier:
          type: array
          items:
            $ref: '#/components/schemas/AbilityTier'
        cooldown:
          type: integer
          format: int32
        icon:
          type: string
        applyTypeTooltipKey:
          type: string
        descriptiveTag:
          type: array
          items:
            $ref: '#/components/schemas/EffectTag'
        effectReference:
          type: array
          items:
            $ref: '#/components/schemas/EffectReference'
        confirmationMessage:
          $ref: '#/components/schemas/MessageDialog'
        buttonLocation:
          $ref: '#/components/schemas/AbilityButtonLocationType'
        shortDescKey:
          type: string
        abilityType:
          $ref: '#/components/schemas/AbilityType'
        detailLocation:
          $ref: '#/components/schemas/UnitDetailsAbilityLocation'
        allyTargetingRuleId:
          type: string
        useAsReinforcementDesc:
          type: boolean
        interactsWithTag:
          type: array
          items:
            $ref: '#/components/schemas/EffectTag'
        subIcon:
          type: string
        aiParams:
          $ref: '#/components/schemas/AbilityAIParams'
        cooldownType:
          $ref: '#/components/schemas/AbilityCooldownType'
        alwaysDisplayInBattleUi:
          type: boolean
        highlightWhenReadyInBattleUi:
          type: boolean
        hideCooldownDescription:
          type: boolean
        blockingEffectId:
          type: string
        blockedLocKey:
          type: string
        ultimateChargeRequired:
          type: array
          items:
            type: integer
            format: int32
        grantedPriority:
          type: integer
          format: int32
        synergy:
          $ref: '#/components/schemas/AbilitySynergy'
        visualTarget:
          $ref: '#/components/schemas/EffectTarget'
    BattleCondition:
      type: object
      properties:
        conditionType:
          $ref: '#/components/schemas/ConditionType'
        conditionValue:
          type: string
        priority:
          type: integer
          format: int32
    ConditionType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 37
            - 38
            - 39
            - 40
            - 41
            - 42
            - 43
            - 44
            - 45
            - 46
            - 47
            - 48
            - 49
            - 50
            - 51
            - 52
            - 53
            - 54
            - 55
            - 56
            - 57
            - 58
            - 59
            - 60
            - 61
            - 62
            - 63
            - 64
            - 65
            - 66
            - 67
            - 68
            - 69
            - 70
            - 71
            - 72
            - 73
            - 74
            - 75
            - 76
            - 77
            - 78
            - 79
            - 80
            - 83
            - 84
            - 85
            - 86
            - 87
            - 88
            - 89
            - 90
            - 91
            - 92
            - 93
            - 94
            - 95
            - 96
            - 97
            - 98
            - 99
            - 100
            - 101
            - 102
            - 103
            - 104
            - 105
        - type: string
          enum:
            - ConditionType_DEFAULT
            - ROUNDCOUNT
            - ENDOFROUND
            - STARTOFROUND
            - STARTOFBATTLE
            - CHANCE
            - STARTOFENCOUNTER
            - CRIT
            - RECEIVECRIT
            - PERFORMMOVE
            - ATTACK
            - LIMITBREAK
            - RECEIVEDAMAGE
            - RECEIVEHEAL
            - COMBO
            - RECEIVECOMBO
            - KILL
            - REVIVE
            - ENEMYKILLED
            - ALLYKILLED
            - DEATH
            - ALLYREVIVED
            - ENEMYREVIVED
            - ENDOFENCOUNTER
            - STARTOFTURN
            - HEALTHDECREASE
            - HEALTHINCREASE
            - PERSISTENTEFFECTADD
            - PERSISTENTEFFECTREMOVE
            - DODGED
            - WASDODGED
            - ENDOFTURN
            - RESISTED
            - WASRESISTED
            - STARTMOVE
            - STARTATTACK
            - STARTLIMITBREAK
            - PREEFFECTEVAL
            - RECEIVEPREEFFECTEVAL
            - POSTEFFECTEVAL
            - RECEIVEPOSTEFFECTEVAL
            - PREEVASIONEVAL
            - RECEIVEPREEVASIONEVAL
            - POSTEVASIONEVAL
            - RECEIVEPOSTEVASIONEVAL
            - STARTOFGUILDRAIDFORPLAYER
            - STARTOFGUILDRAIDENCOUNTERFORPLAYER
            - PRERECEIVEDAMAGE
            - FULLTURNCOMPLETE
            - PERSISTENTEFFECTADDINSTANCE
            - PERSISTENTEFFECTREMOVEINSTANCE
            - FLED
            - ALLYFLED
            - ENEMYFLED
            - REINFORCED
            - ALLYREINFORCED
            - ENEMYREINFORCED
            - DEALDAMAGE
            - PERSISTENTEFFECTINFLICTED
            - PERSISTENTEFFECTINFLICTEDINSTANCE
            - DODGEDPOSTEVASIONEVAL
            - HEALTHMAXLIMITREACHED
            - HEALTHMINLIMITREACHED
            - RECEIVEPROTECTIONHEAL
            - BONUSSPEEDGAIN
            - BONUSSPEEDREMOVE
            - RECEIVEPROTECTIONHEALACTUAL
            - BONUSSPEEDGAINACTUAL
            - BONUSSPEEDREMOVEACTUAL
            - RECEIVEHEALACTUAL
            - PREDAMAGE
            - SUMMONED
            - ALLYSUMMONED
            - ENEMYSUMMONED
            - ULTIMATECHARGEINCREASED
            - ULTIMATECHARGEDECREASED
            - ULTIMATETHRESHOLDGAINED
            - ULTIMATETHRESHOLDLOST
            - ALLYTRANSFORMED
            - ENEMYTRANSFORMED
            - PERSISTENTEFFECTDISPELLED
            - PERSISTENTEFFECTDISPELLEDINSTANCE
            - PERSISTENTEFFECTWASDISPELLEDINSTANCE
            - PERSISTENTEFFECTWASDISPELLED
            - ALLYPERSISTENTEFFECTADD
            - ALLYPERSISTENTEFFECTADDINSTANCE
            - ENEMYPERSISTENTEFFECTADD
            - ENEMYPERSISTENTEFFECTADDINSTANCE
            - ALLYPERSISTENTEFFECTREMOVE
            - ALLYPERSISTENTEFFECTREMOVEINSTANCE
            - ENEMYPERSISTENTEFFECTREMOVE
            - ENEMYPERSISTENTEFFECTREMOVEINSTANCE
            - OWNERSHIPMODIFIED
            - ALLYOWNERSHIPMODIFIED
            - ENEMYOWNERSHIPMODIFIED
            - BLACKBOARDMINLIMITREACHED
            - BLACKBOARDMAXLIMITREACHED
            - BLACKBOARDINCREASED
            - BLACKBOARDDECREASED
            - SQUADBLACKBOARDMINLIMITREACHED
            - SQUADBLACKBOARDMAXLIMITREACHED
            - SQUADBLACKBOARDINCREASED
            - SQUADBLACKBOARDDECREASED
    AbilityTier:
      type: object
      properties:
        descKey:
          type: string
        upgradeDescKey:
          type: string
        cooldownMaxOverride:
          type: integer
          format: int32
        effectReference:
          type: array
          items:
            $ref: '#/components/schemas/EffectReference'
        interactsWithTag:
          type: array
          items:
            $ref: '#/components/schemas/EffectTag'
        blockingEffectId:
          type: string
        blockedLocKey:
          type: string
    EffectReference:
      type: object
      properties:
        id:
          type: string
        contextIndex:
          type: array
          items:
            type: integer
            format: int32
        maxBonusMove:
          type: integer
          format: int32
    EffectTag:
      type: object
      properties:
        tag:
          type: string
        exclude:
          type: boolean
    MessageDialog:
      type: object
      properties:
        titleKey:
          type: string
        descKey:
          type: string
    AbilityButtonLocationType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - AbilityButtonLocationType_DEFAULT
            - ABILITYSTANDARD
            - ABILITYADDITIONAL
            - ABILITYHIDDEN
            - ABILITYSECONDSTANDARD
    AbilityType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 7
            - 8
            - 9
            - 10
            - 11
        - type: string
          enum:
            - AbilityType_DEFAULT
            - ABILITYACTIVATED
            - ABILITYPASSIVE
            - ABILITYREINFORCEMENT
            - ABILITYACTIVATEDALLYSELECT
            - ABILITYHARDWARE
    UnitDetailsAbilityLocation:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - UnitDetailsAbilityLocation_DEFAULT
            - ABILITYLOCATIONNORMAL
            - ABILITYLOCATIONADVANCED
            - ABILITYLOCATIONCREW
            - ABILITYLOCATIONHIDDEN
    AbilityAIParams:
      type: object
      properties:
        preferredAllyTargetingRuleId:
          type: string
        preferredEnemyTargetingRuleId:
          type: string
        requireEnemyPreferredTargets:
          type: boolean
        requireAllyTargets:
          type: boolean
        preferredAllyTargetingRuleIdList:
          type: array
          items:
            type: string
        preferredEnemyTargetingRuleIdList:
          type: array
          items:
            type: string
    AbilityCooldownType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - AbilityCooldownType_DEFAULT
            - ABILITYCOOLDOWNTURNBASED
            - ABILITYCOOLDOWNSPEEDBASED
    AbilitySynergy:
      type: object
      properties:
        separateCategoryId:
          type: array
          items:
            type: string
        groupedCategoryId:
          type: array
          items:
            type: string
    EffectTarget:
      type: object
      properties:
        unitSelect:
          $ref: '#/components/schemas/EffectTargetUnitSelect'
        battleSide:
          $ref: '#/components/schemas/EffectTargetBattleSide'
        unitClass:
          type: array
          items:
            $ref: '#/components/schemas/UnitClass'
        forceAlignment:
          type: array
          items:
            $ref: '#/components/schemas/ForceAlignment'
        category:
          $ref: '#/components/schemas/EffectTargetCategoryCriteria'
        healthState:
          $ref: '#/components/schemas/UnitHealthState'
        statValue:
          type: array
          items:
            $ref: '#/components/schemas/StatValueRange'
        activeEffectTagCriteria:
          type: array
          items:
            $ref: '#/components/schemas/EffectTagCriteria'
        battleDeploymentState:
          $ref: '#/components/schemas/BattleDeploymentState'
        id:
          type: string
        excludeSelf:
          type: boolean
        excludeSelectedTarget:
          type: boolean
        requiredCategory:
          $ref: '#/components/schemas/EffectTargetCategoryCriteria'
        requiredActiveEffectTagCriteria:
          type: array
          items:
            $ref: '#/components/schemas/EffectTagCriteria'
    EffectTargetUnitSelect:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
        - type: string
          enum:
            - EffectTargetUnitSelect_DEFAULT
            - SELECTALL
            - SELECTEDTARGET
            - SELECTRANDOM
            - SELECTSELF
            - SELECTPREVIOUS
            - SELECTLASTREINFORCEMENT
            - SELECTLOWESTSURVIVABILITY
            - SELECTHIGHESTSURVIVABILITY
            - SELECTLEADER
            - SELECTSUPPORT
            - SELECTLASTSUMMON
    EffectTargetBattleSide:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        - type: string
          enum:
            - EffectTargetBattleSide_DEFAULT
            - BOTHSIDES
            - ALLYSIDE
            - ENEMYSIDE
            - PLAYERSIDE
            - OPPONENTSIDE
    UnitClass:
      oneOf:
        - type: integer
          enum:
            - 0
            - 6
            - 7
        - type: string
          enum:
            - UnitClass_DEFAULT
            - UNITCLASSSTANDARD
            - UNITCLASSCOMMANDER
    EffectTargetCategoryCriteria:
      type: object
      properties:
        exclude:
          type: boolean
        categoryId:
          type: array
          items:
            type: string
        category:
          type: array
          items:
            $ref: '#/components/schemas/EffectTargetCategory'
    EffectTargetCategory:
      type: object
      properties:
        exclude:
          type: boolean
        categoryId:
          type: string
    UnitHealthState:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - UnitHealthState_DEFAULT
            - UNITHEALTHSTATEANY
            - UNITHEALTHSTATEALIVE
            - UNITHEALTHSTATEDEAD
    StatValueRange:
      type: object
      properties:
        stat:
          $ref: '#/components/schemas/UnitStat'
        battleStat:
          $ref: '#/components/schemas/BattleUnitStateStat'
        min:
          $ref: '#/components/schemas/StatValueRangeNumber'
        max:
          $ref: '#/components/schemas/StatValueRangeNumber'
    BattleUnitStateStat:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        - type: string
          enum:
            - BattleUnitStateStat_DEFAULT
            - BATTLEUNITSTATUNDEFINED
            - BATTLEUNITSTATHEALTH
            - BATTLEUNITSTATHEALTHPERCENT
            - BATTLEUNITSTATSPEEDFILL
            - BATTLEUNITSTATSPEEDFILLPERCENT
            - BATTLEUNITSTATSHIELDPERCENT
    StatValueRangeNumber:
      type: object
      properties:
        value:
          type: integer
          format: int32
        inclusive:
          type: boolean
    EffectTagCriteria:
      type: object
      properties:
        tag:
          type: string
        exclude:
          type: boolean
    BattleDeploymentState:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - BattleDeploymentState_DEFAULT
            - BATTLEDEPLOYMENTSTATEANY
            - BATTLEDEPLOYMENTSTATEDEPLOYED
            - BATTLEDEPLOYMENTSTATEREINFORCEMENT
    AbilityReference:
      type: object
      properties:
        abilityId:
          type: string
        requiredTier:
          $ref: '#/components/schemas/UnitTier'
        requiredRarity:
          $ref: '#/components/schemas/Rarity'
        requiredSkillTier:
          type: integer
          format: int32
        requiredRelicTier:
          $ref: '#/components/schemas/RelicTier'
        overrideAlwaysDisplayInBattleUi:
          type: boolean
        overrideIcon:
          type: string
        overrideNameKey:
          type: string
        overrideDescKey:
          type: string
        powerAdditiveTag:
          type: string
        unlockRecipeId:
          type: string
        inheritMappingId:
          type: string
    CrewMember:
      type: object
      properties:
        unitId:
          type: string
        slot:
          type: integer
          format: int32
        skillReference:
          type: array
          items:
            $ref: '#/components/schemas/SkillDefinitionReference'
        skilllessCrewAbilityId:
          type: string
    UnitModRecommendation:
      type: object
      properties:
        recommendationSetId:
          type: string
        unitTier:
          $ref: '#/components/schemas/UnitTier'
    SummonStatTable:
      type: object
      properties:
        rarity:
          $ref: '#/components/schemas/Rarity'
        statTable:
          type: string
    RelicDefinition:
      type: object
      properties:
        relicTierDefinitionId:
          type: array
          items:
            type: string
        upgradeTableId:
          type: string
        alignmentColorOverride:
          type: string
        texture:
          type: string
        nameKey:
          type: string
    RecommendedSquad:
      type: object
      properties:
        descriptionKey:
          type: string
        thumbnail:
          type: string
        unitDefId:
          type: array
          items:
            type: string
        name:
          type: string
        showRequirement:
          $ref: '#/components/schemas/Requirement'
        hideRequirement:
          $ref: '#/components/schemas/Requirement'
        actionLink:
          $ref: '#/components/schemas/ActionLink'
        id:
          type: string
    BattleEnvironment:
      type: object
      properties:
        prefab:
          type: string
        audioPackage:
          type: array
          items:
            type: string
    XpTable:
      type: object
      properties:
        id:
          type: string
        row:
          type: array
          items:
            $ref: '#/components/schemas/XpTableRow'
    XpTableRow:
      type: object
      properties:
        index:
          type: integer
          format: int32
        xp:
          type: integer
          format: int32
    CraftingMaterialDef:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descKey:
          type: string
        iconKey:
          type: string
        sellValue:
          $ref: '#/components/schemas/CurrencyItem'
        lookupMission:
          type: array
          items:
            $ref: '#/components/schemas/LookupMission'
        xpValue:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/MaterialType'
        rarity:
          $ref: '#/components/schemas/Rarity'
        trainingCost:
          type: integer
          format: int32
        trainingCostMaxLevel:
          type: integer
          format: int32
        unitDefReference:
          type: string
        tier:
          $ref: '#/components/schemas/UnitTier'
        obtainableTime:
          type: integer
          format: int64
        raidLookup:
          type: array
          items:
            $ref: '#/components/schemas/LookupMission'
        actionLinkLookup:
          type: array
          items:
            $ref: '#/components/schemas/LookupActionLink'
        recipeId:
          type: string
        raidImmediateLookup:
          type: array
          items:
            $ref: '#/components/schemas/LookupMission'
    LookupMission:
      type: object
      properties:
        missionIdentifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        requirementId:
          type: array
          items:
            type: string
    LookupActionLink:
      type: object
      properties:
        deskKey:
          type: string
        actionLink:
          $ref: '#/components/schemas/ActionLink'
    Recipe:
      type: object
      properties:
        id:
          type: string
        descKey:
          type: string
        result:
          $ref: '#/components/schemas/BucketItem'
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        type:
          $ref: '#/components/schemas/RecipeType'
        viewRequirement:
          $ref: '#/components/schemas/Requirement'
        unlockLevel:
          type: integer
          format: int32
        craftRequirement:
          $ref: '#/components/schemas/Requirement'
    RecipeType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
        - type: string
          enum:
            - RecipeType_DEFAULT
            - RECIPEINVALID
            - RECIPEPROMOTION
            - RECIPESHIP
            - RECIPECONSUMABLE
            - RECIPECHARACTER
            - RECIPESKILL
            - RECIPEEQUIPMENT
            - RECIPEMODSLICING
            - RECIPEMATERIAL
            - RECIPERELIC
            - RECIPEDATACRON
    StatProgression:
      type: object
      properties:
        id:
          type: string
        stat:
          $ref: '#/components/schemas/StatDef'
        operation:
          $ref: '#/components/schemas/OperationType'
    OperationType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - OperationType_DEFAULT
            - ADDITIVE
            - MULTIPLICATIVE
    Category:
      type: object
      properties:
        id:
          type: string
        descKey:
          type: string
        visible:
          type: boolean
        uiFilter:
          type: array
          items:
            $ref: '#/components/schemas/CombatType'
    HelpEntry:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/HelpType'
        tile:
          type: array
          items:
            $ref: '#/components/schemas/HelpTile'
    HelpType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - HelpType_DEFAULT
            - BATTLE
            - SQUAD
            - PROGRESS
    HelpTile:
      type: object
      properties:
        textKey:
          type: string
        image:
          type: string
        titleKey:
          type: string
    Challenge:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ChallengeType'
        nameKey:
          type: string
        descKey:
          type: string
        viewRequirement:
          $ref: '#/components/schemas/Requirement'
        reward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        platformAchievementId:
          type: string
        actionLinkDef:
          $ref: '#/components/schemas/ActionLink'
        claimType:
          $ref: '#/components/schemas/ChallengeClaimType'
        rewardType:
          $ref: '#/components/schemas/ChallengeRewardType'
        rewardRatio:
          type: number
          format: float
        task:
          type: array
          items:
            $ref: '#/components/schemas/ChallengeTask'
        messageGroup:
          $ref: '#/components/schemas/ContextualMessageGroup'
        styleId:
          type: string
        priority:
          type: integer
          format: int32
        nextChallengeId:
          type: string
        rewardDialogKey:
          type: string
        rewardRedirectToHome:
          type: boolean
        rewardDescKey:
          type: string
        starterGuildGraduation:
          type: boolean
        rewardPoints:
          type: integer
          format: int32
        detailsKey:
          type: string
        hiddenInMainQuests:
          type: boolean
    ChallengeType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        - type: string
          enum:
            - ChallengeType_DEFAULT
            - DAILYCHALLENGE
            - LIFETIMECHALLENGE
            - QUESTCHALLENGE
            - PLAYERACTIVATEDCHALLENGE
            - FEATCHALLENGE
    ChallengeClaimType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - ChallengeClaimType_DEFAULT
            - CHALLENGECLAIMMANUAL
            - CHALLENGECLAIMAUTOMATIC
    ChallengeRewardType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - ChallengeRewardType_DEFAULT
            - CHALLENGEREWARDFIXED
            - CHALLENGEREWARDRATIO
    ChallengeTask:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descKey:
          type: string
        actionLinkDef:
          $ref: '#/components/schemas/ActionLink'
        hideToast:
          type: boolean
    SkillDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        iconKey:
          type: string
        tier:
          type: array
          items:
            $ref: '#/components/schemas/SkillTierDefinition'
        abilityReference:
          type: string
        skillType:
          $ref: '#/components/schemas/SkillType'
        isZeta:
          type: boolean
        omicronMode:
          $ref: '#/components/schemas/OmicronMode'
    SkillTierDefinition:
      type: object
      properties:
        recipeId:
          type: string
        requiredUnitLevel:
          type: integer
          format: int32
        requiredUnitRarity:
          $ref: '#/components/schemas/Rarity'
        requiredUnitTier:
          $ref: '#/components/schemas/UnitTier'
        powerOverrideTag:
          type: string
        requiredUnitRelicTier:
          $ref: '#/components/schemas/RelicTier'
        isZetaTier:
          type: boolean
        isOmicronTier:
          type: boolean
    SkillType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - SkillType_DEFAULT
            - UNITSKILL
            - CREWSKILL
    OmicronMode:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
        - type: string
          enum:
            - OmicronMode_DEFAULT
            - ALLOMICRON
            - PVEOMICRON
            - PVPOMICRON
            - GUILDRAIDOMICRON
            - TERRITORYSTRIKEOMICRON
            - TERRITORYCOVERTOMICRON
            - TERRITORYBATTLEBOTHOMICRON
            - TERRITORYWAROMICRON
            - TERRITORYTOURNAMENTOMICRON
            - WAROMICRON
            - CONQUESTOMICRON
            - GALACTICCHALLENGEOMICRON
            - PVEEVENTOMICRON
            - TERRITORYTOURNAMENT3OMICRON
            - TERRITORYTOURNAMENT5OMICRON
            - GALACTICCHALLENGE3OMICRON
            - GALACTICCHALLENGE5OMICRON
    EventSampling:
      type: object
      properties:
        eventId:
          type: string
        spenderValue:
          type: integer
          format: int32
        nonSpenderValue:
          type: integer
          format: int32
    EquipmentDef:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        iconKey:
          type: string
        requiredLevel:
          type: integer
          format: int32
        equipmentStat:
          $ref: '#/components/schemas/StatDef'
        recipeId:
          type: string
        tier:
          $ref: '#/components/schemas/UnitTier'
        sellValue:
          $ref: '#/components/schemas/CurrencyItem'
        lookupMission:
          type: array
          items:
            $ref: '#/components/schemas/LookupMission'
        mark:
          type: string
        obtainableTime:
          type: integer
          format: int64
        raidLookup:
          type: array
          items:
            $ref: '#/components/schemas/LookupMission'
        type:
          $ref: '#/components/schemas/EquipmentType'
        actionLinkLookup:
          type: array
          items:
            $ref: '#/components/schemas/LookupActionLink'
        requiredRarity:
          $ref: '#/components/schemas/Rarity'
        findFlowDisabled:
          type: boolean
        raidImmediateLookup:
          type: array
          items:
            $ref: '#/components/schemas/LookupMission'
    EquipmentType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - EquipmentType_DEFAULT
            - EQUIPMENTEQUIPPABLE
            - EQUIPMENTUNRELEASED
            - EQUIPMENTMATERIAL
    WarDef:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/CombatType'
        difficulty:
          $ref: '#/components/schemas/CampaignNodeDifficulty'
        dailyResetCapKey:
          type: string
        node:
          type: array
          items:
            $ref: '#/components/schemas/WarNodeDef'
        bracket:
          type: array
          items:
            $ref: '#/components/schemas/WarBracketDef'
    WarNodeDef:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/WarNodeType'
        combatType:
          $ref: '#/components/schemas/CombatType'
        position:
          $ref: '#/components/schemas/Position'
    WarNodeType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - WarNodeType_DEFAULT
            - NODETYPEOPPONENT
            - NODETYPECHESTCOMMON
            - NODETYPECHESTRARE
            - NODETYPECHESTEPIC
    Position:
      type: object
      properties:
        x:
          type: string
        'y':
          type: string
        z:
          type: string
    WarBracketDef:
      type: object
      properties:
        min:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
        node:
          type: array
          items:
            $ref: '#/components/schemas/WarNodeDef'
    TargetingSet:
      type: object
      properties:
        id:
          type: string
        weight:
          type: array
          items:
            $ref: '#/components/schemas/TargetingWeight'
    TargetingWeight:
      type: object
      properties:
        type:
          type: string
        param:
          type: string
        valueDecimal:
          type: integer
          format: int32
    Effect:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/EffectType'
        param:
          type: array
          items:
            type: string
        chance:
          type: integer
          format: int32
        target:
          type: array
          items:
            $ref: '#/components/schemas/EffectTarget'
        descriptiveTag:
          type: array
          items:
            $ref: '#/components/schemas/EffectTag'
        effectedTag:
          type: array
          items:
            $ref: '#/components/schemas/EffectTag'
        triggerCondition:
          type: array
          items:
            $ref: '#/components/schemas/BattleCondition'
        effectDefinition:
          type: array
          items:
            $ref: '#/components/schemas/Effect'
        contextIndex:
          type: array
          items:
            type: integer
            format: int32
        expirationCondition:
          type: array
          items:
            $ref: '#/components/schemas/BattleCondition'
        applyType:
          $ref: '#/components/schemas/EffectApplyType'
        damageType:
          $ref: '#/components/schemas/EffectDamageType'
        persistentIcon:
          type: string
        triggeredVfx:
          type: string
        triggeredLocKey:
          type: string
        maxBonusMoves:
          type: integer
          format: int32
        effectReference:
          type: array
          items:
            $ref: '#/components/schemas/EffectReference'
        multiplierAmountDecimal:
          type: integer
          format: int32
        contextMultiplierDecimal:
          type: integer
          format: int32
        additiveAmountDecimal:
          type: integer
          format: int64
        resultVarianceDecimal:
          type: integer
          format: int32
        persistentLocKey:
          type: string
        stackingLineOverride:
          type: string
        persistentIconOverlay:
          type: string
        persistentIconPriority:
          type: integer
          format: int32
        iconColor:
          type: string
        persistentIconGroupable:
          type: boolean
        persistentVfxReference:
          $ref: '#/components/schemas/PersistentVfxReference'
        blackboardName:
          type: string
        summonId:
          type: string
        summonEffect:
          type: array
          items:
            $ref: '#/components/schemas/Effect'
        summonLevel:
          type: integer
          format: int32
        summonTier:
          $ref: '#/components/schemas/UnitTier'
        summonRarity:
          $ref: '#/components/schemas/Rarity'
        summonSquadIncrease:
          type: integer
          format: int32
        ignoreDamageAnimation:
          type: boolean
        infiniteCycleEffect:
          type: array
          items:
            type: string
        blackboardCompareName:
          type: string
        summonMarkerIndex:
          type: integer
          format: int32
        summonEnableInitialVfx:
          type: boolean
        summonCount:
          type: integer
          format: int32
    EffectType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 37
            - 38
            - 39
            - 40
            - 41
            - 42
            - 43
        - type: string
          enum:
            - EffectType_DEFAULT
            - DAMAGE
            - RECOVER
            - PARALYSIS
            - CURSE
            - DISPELL
            - IMMUNITY
            - BONUSMOVE
            - MODIFYSTAT
            - APPLYEFFECT
            - DISTRIBUTERECOVERY
            - QUERYCOUNT
            - QUERYSTAT
            - REVIVEUNIT
            - SCRIPTCOMPONENT
            - FLEE
            - DESTROY
            - REINFORCE
            - GRANTSHIELD
            - GRANTABILITY
            - HEALTHLIMIT
            - BLACKBOARDMODIFY
            - BLACKBOARDQUERY
            - STATLIMIT
            - SUMMONUNIT
            - QUERYCOOLDOWN
            - QUERYUNITVALUE
            - BATTLERESOLUTION
            - MODIFYULTIMATECHARGE
            - MODIFYDAMAGE
            - FORCEABILITY
            - OVERHEADDISPLAY
            - QUERYBATTLETYPE
            - MODIFYRECOVER
            - QUERYDATACRONLEVEL
            - SQUADBLACKBOARDMODIFY
            - SQUADBLACKBOARDQUERY
            - MODIFYCOOLDOWN
            - MODIFYCATEGORY
            - MODIFYOWNERSHIP
            - BLACKBOARDCOMPARE
            - SQUADBLACKBOARDCOMPARE
            - BLACKBOARDLIMIT
            - SQUADBLACKBOARDLIMIT
    EffectApplyType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - EffectApplyType_DEFAULT
            - UNAVOIDABLE
            - PHYSICAL
            - MENTAL
    EffectDamageType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - EffectDamageType_DEFAULT
            - UNMITIGABLE
            - ATTACKDAMAGE
            - ABILITYPOWER
    PersistentVfxReference:
      type: object
      properties:
        id:
          type: string
    PowerUpBundle:
      type: object
      properties:
        id:
          type: string
        targetLevel:
          type: integer
          format: int32
        targetGearTier:
          $ref: '#/components/schemas/UnitTier'
        autoSelectTier:
          type: boolean
    GuildBannerDef:
      type: object
      properties:
        logo:
          type: array
          items:
            type: string
        color:
          type: array
          items:
            $ref: '#/components/schemas/GuildBannerColorDef'
        logoDefinition:
          type: array
          items:
            $ref: '#/components/schemas/GuildBannerLogoDef'
    GuildBannerColorDef:
      type: object
      properties:
        id:
          type: string
        tintColor:
          type: string
        backgroundColor:
          type: string
        hidden:
          type: boolean
    GuildBannerLogoDef:
      type: object
      properties:
        id:
          type: string
        logo:
          type: string
        uiLogo:
          type: string
        hidden:
          type: boolean
    GuildRaidConfig:
      type: object
      properties:
        id:
          type: string
        raidType:
          $ref: '#/components/schemas/GuildRaidType'
        rosterRefreshType:
          $ref: '#/components/schemas/GuildRaidRosterRefreshType'
        rosterRefresh:
          $ref: '#/components/schemas/GuildRaidRosterRefresh'
        raidDuration:
          type: integer
          format: int64
    GuildRaidType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - GuildRaidType_DEFAULT
            - RAIDTYPEPERMANENT
            - RAIDTYPETIMELIMITED
    GuildRaidRosterRefreshType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - GuildRaidRosterRefreshType_DEFAULT
            - RAIDROSTERREFRESHNONE
            - RAIDROSTERREFRESHSCHEDULED
            - RAIDROSTERREFRESHPURCHASABLE
            - RAIDROSTERREFRESHTIMED
    GuildRaidRosterRefresh:
      type: object
      properties:
        type:
          type: string
        value:
          type: array
          items:
            type: integer
            format: int32
    GuildRaid:
      type: object
      properties:
        id:
          type: string
        priority:
          type: integer
          format: int32
        nameKey:
          type: string
        summaryKey:
          type: string
        descKey:
          type: string
        image:
          type: string
        squadType:
          $ref: '#/components/schemas/SquadType'
        campaignElementIdentifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        iconPrefab:
          type: string
        promotionKey:
          type: string
        portraitIcon:
          type: string
        raidSim:
          $ref: '#/components/schemas/GuildRaidSim'
        infoImage:
          type: string
        lockout:
          $ref: '#/components/schemas/GuildRaidLockout'
        legacyRaid:
          type: boolean
        currencyReward:
          type: array
          items:
            type: string
        guildRewardsRequireAttempt:
          type: boolean
        audioVictoryKey:
          type: string
        audioDefeatKey:
          type: string
    GuildRaidSim:
      type: object
      properties:
        simReward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        campaignElementIdentifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        requirementId:
          type: string
    GuildRaidLockout:
      type: object
      properties:
        lockoutStartTime:
          type: integer
          format: int64
        lockoutEndTime:
          type: integer
          format: int64
    StatModSetDefinition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        icon:
          type: string
        completeBonus:
          $ref: '#/components/schemas/StatModSetBonus'
        maxLevelBonus:
          $ref: '#/components/schemas/StatModSetBonus'
        setCount:
          type: integer
          format: int32
        overclockBonus:
          $ref: '#/components/schemas/StatModSetBonus'
    StatModSetBonus:
      type: object
      properties:
        abilityId:
          type: array
          items:
            type: string
        stat:
          $ref: '#/components/schemas/Stat'
    StatModDefinition:
      type: object
      properties:
        id:
          type: string
        slot:
          $ref: '#/components/schemas/StatModSlot'
        setId:
          type: string
        rarity:
          $ref: '#/components/schemas/Rarity'
        nameKey:
          type: string
        descKey:
          type: string
        missionLookup:
          type: array
          items:
            $ref: '#/components/schemas/LookupMission'
        raidLookup:
          type: array
          items:
            $ref: '#/components/schemas/LookupMission'
        actionLinkLookup:
          type: array
          items:
            $ref: '#/components/schemas/LookupActionLink'
        levelTableId:
          type: string
        promotionId:
          type: string
        promotionRecipeId:
          type: string
        tierUpRecipeTableId:
          type: string
        overclockRecipeTableId:
          type: string
        rerollCapTableId:
          type: string
        raidImmediateLookup:
          type: array
          items:
            $ref: '#/components/schemas/LookupMission'
    StatModSlot:
      oneOf:
        - type: integer
          enum:
            - 0
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
        - type: string
          enum:
            - StatModSlot_DEFAULT
            - STATMODSLOT01
            - STATMODSLOT02
            - STATMODSLOT03
            - STATMODSLOT04
            - STATMODSLOT05
            - STATMODSLOT06
    GuildExchangeItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/BucketItem'
    Table:
      type: object
      properties:
        id:
          type: string
        row:
          type: array
          items:
            $ref: '#/components/schemas/TableRow'
    TableRow:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    UnlockAnnouncementDefinition:
      type: object
      properties:
        feature:
          type: string
        startOffset:
          type: integer
          format: int32
        interval:
          type: integer
          format: int32
        messageKey:
          type: string
    TerritoryBattleDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descriptionKey:
          type: string
        prefabName:
          type: string
        roundDuration:
          type: integer
          format: int64
        roundCount:
          type: integer
          format: int32
        conflictZoneDefinition:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryBattleConflictZoneDefinition'
        strikeZoneDefinition:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryStrikeZoneDefinition'
        reconZoneDefinition:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryReconZoneDefinition'
        iconPrefab:
          type: string
        rankRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        detailImage:
          type: string
        dynamicDescription:
          type: array
          items:
            $ref: '#/components/schemas/DynamicDescription'
        covertZoneDefinition:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryCovertZoneDefinition'
        statCategory:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryMapStatCategory'
        territoryCategory:
          type: string
        roundTallyDuration:
          type: integer
          format: int32
        grantedAbilities:
          type: array
          items:
            $ref: '#/components/schemas/MissionGrantedAbility'
        localNotifications:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryLocalNote'
        minMemberLevelForCommandingGuild:
          $ref: '#/components/schemas/GuildMemberLevel'
        commandNotificationCooldownDuration:
          type: integer
          format: int32
        minimapPrefab:
          type: string
        searchImage:
          type: string
        infoImage:
          type: string
        forceAlignment:
          $ref: '#/components/schemas/ForceAlignment'
        environmentNameKey:
          type: string
        environmentPrefab:
          type: string
        territoryBattleVersion_3:
          type: boolean
        bonusZoneDefinition:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryBonusZoneDefinition'
    TerritoryBattleConflictZoneDefinition:
      type: object
      properties:
        combatType:
          $ref: '#/components/schemas/CombatType'
        victoryPointRewards:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryRewardBracket'
        zoneDefinition:
          $ref: '#/components/schemas/TerritoryZoneDefinition'
        conflictImage:
          type: string
        territoryBattleZoneUnitType:
          $ref: '#/components/schemas/TerritoryBattleZoneUnitType'
        alternateChaseIcon:
          type: boolean
        forceAlignment:
          $ref: '#/components/schemas/ForceAlignment'
        isBonus:
          type: boolean
        isNewestBonusZone:
          type: boolean
    TerritoryRewardBracket:
      type: object
      properties:
        victoryPointReward:
          type: integer
          format: int32
        galacticScoreRequirement:
          type: integer
          format: int64
        reward:
          $ref: '#/components/schemas/TerritoryReward'
    TerritoryReward:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TerritoryRewardType'
        value:
          type: integer
          format: int64
        rewardId:
          type: string
    TerritoryRewardType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - TerritoryRewardType_DEFAULT
            - GALACTICSCORE
            - VICTORYPOINT
            - MYSTERYBOXCONFLICT
    TerritoryZoneDefinition:
      type: object
      properties:
        zoneId:
          type: string
        prefabName:
          type: string
        nameKey:
          type: string
        descriptionKey:
          type: string
        linkedConflictId:
          type: string
        maxAttemptsAllowed:
          type: integer
          format: int32
        unlockRequirement:
          $ref: '#/components/schemas/Requirement'
        maxUnitCountPerPlayer:
          type: integer
          format: int32
        grantedAbilities:
          type: array
          items:
            $ref: '#/components/schemas/MissionGrantedAbility'
        detailViewIconOverrideName:
          type: string
        mapIconOverrideName:
          type: string
    MissionGrantedAbility:
      type: object
      properties:
        abilityId:
          type: string
        targetRuleId:
          type: string
        unlockRequirement:
          $ref: '#/components/schemas/Requirement'
        rankLabelOverrideKey:
          type: string
        useOverlayIcon:
          type: boolean
        overlaySpriteName:
          type: string
        zonesToApplyTo:
          type: array
          items:
            type: string
        showInPlatoonView:
          type: boolean
        modifierData:
          $ref: '#/components/schemas/AbilityModifierData'
        conditionDescKey:
          type: string
    AbilityModifierData:
      type: object
      properties:
        battleSide:
          $ref: '#/components/schemas/EffectTargetBattleSide'
        tint:
          type: string
        tierKey:
          type: string
        icon:
          type: string
    TerritoryBattleZoneUnitType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - TerritoryBattleZoneUnitType_DEFAULT
            - CHARACTERZONE
            - SHIPZONE
            - MIXEDZONE
            - UNDEFINEDZONE
    TerritoryStrikeZoneDefinition:
      type: object
      properties:
        campaignElementIdentifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        zoneDefinition:
          $ref: '#/components/schemas/TerritoryZoneDefinition'
        encounterRewardTableId:
          type: string
        combatType:
          $ref: '#/components/schemas/CombatType'
    TerritoryReconZoneDefinition:
      type: object
      properties:
        zoneDefinition:
          $ref: '#/components/schemas/TerritoryZoneDefinition'
        platoonDefinition:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryReconPlatoonDefinition'
        abilityImage:
          type: string
        abilityShortDescKey:
          type: string
        abilityLongDescKey:
          type: string
        goalDescKey:
          type: string
        goalImage:
          type: string
        unitRarity:
          $ref: '#/components/schemas/Rarity'
        rewardDescKey:
          type: string
        subTitleKey:
          type: string
        grantedAbilities:
          type: array
          items:
            $ref: '#/components/schemas/MissionGrantedAbility'
        strategicAbilities:
          type: array
          items:
            $ref: '#/components/schemas/MissionGrantedAbility'
        combatType:
          $ref: '#/components/schemas/CombatType'
        territoryBattleZoneUnitType:
          $ref: '#/components/schemas/TerritoryBattleZoneUnitType'
        unitRelicTier:
          $ref: '#/components/schemas/RelicTier'
    TerritoryReconPlatoonDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        squad:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryReconSquadDefinition'
        reward:
          $ref: '#/components/schemas/TerritoryReward'
    TerritoryReconSquadDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
    DynamicDescription:
      type: object
      properties:
        descriptionType:
          $ref: '#/components/schemas/DynamicDescriptionType'
        unitTexture:
          type: string
        unitNameKey:
          type: string
        abilityNameKey:
          type: string
        abilityDescriptionKey:
          type: string
        abilityTexture:
          type: string
        headerKey:
          type: string
        textKey:
          type: string
        marginLeft:
          type: integer
          format: int32
        textColumn:
          type: array
          items:
            $ref: '#/components/schemas/DynamicDescriptionTextColumn'
        textAlignment:
          $ref: '#/components/schemas/DynamicDescriptionTextAlignmentType'
        backgroundOverrideSprite:
          type: string
    DynamicDescriptionType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        - type: string
          enum:
            - DynamicDescriptionType_DEFAULT
            - LAYOUTTEXT
            - LAYOUTUNIT
            - LAYOUTABILITY
            - LAYOUTHEADER
            - LAYOUTTEXTCOLUMN
            - LAYOUTHORIZONTALBREAK
    DynamicDescriptionTextColumn:
      type: object
      properties:
        headerKey:
          type: string
        bodyKey:
          type: string
        bodyAlignment:
          $ref: '#/components/schemas/DynamicDescriptionTextAlignmentType'
        tag:
          type: string
    DynamicDescriptionTextAlignmentType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - DynamicDescriptionTextAlignmentType_DEFAULT
            - TEXTALIGNMENTLEFT
            - TEXTALIGNMENTRIGHT
            - TEXTALIGNMENTCENTER
    TerritoryCovertZoneDefinition:
      type: object
      properties:
        zoneDefinition:
          $ref: '#/components/schemas/TerritoryZoneDefinition'
        campaignElementIdentifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        victoryReward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        disableRewardOnMap:
          type: boolean
        combatType:
          $ref: '#/components/schemas/CombatType'
    TerritoryMapStatCategory:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
    TerritoryLocalNote:
      type: object
      properties:
        messageKey:
          type: string
        titleKey:
          type: string
        optedIn:
          type: boolean
        phase:
          $ref: '#/components/schemas/TerritoryMapPhase'
        phaseTimeOffsetSeconds:
          type: integer
          format: int32
        finalMatchOnly:
          type: boolean
        perSubPhaseRoundEnd:
          type: boolean
    TerritoryMapPhase:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        - type: string
          enum:
            - TerritoryMapPhase_DEFAULT
            - TERRITORYMAPOPTIN
            - TERRITORYMAPMATCHMAKING
            - TERRITORYMAPSETINITIALDEFENSE
            - TERRITORYMAPATTACK
            - TERRITORYMAPREVIEW
            - TERRITORYMAPEXPIRED
    GuildMemberLevel:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - GuildMemberLevel_DEFAULT
            - GUILDPENDING
            - GUILDMEMBER
            - GUILDOFFICER
            - GUILDLEADER
    TerritoryBonusZoneDefinition:
      type: object
      properties:
        zoneDefinition:
          $ref: '#/components/schemas/TerritoryZoneDefinition'
        linkedBonusConflictId:
          type: string
    TerritoryWarDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descriptionKey:
          type: string
        prefabName:
          type: string
        roundCount:
          type: integer
          format: int32
        iconPrefab:
          type: string
        detailImage:
          type: string
        roundTallyDuration:
          type: integer
          format: int32
        dynamicDescription:
          type: array
          items:
            $ref: '#/components/schemas/DynamicDescription'
        firstRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        secondRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        matchmakingDuration:
          type: integer
          format: int32
        setupDuration:
          type: integer
          format: int32
        grantedAbilities:
          type: array
          items:
            $ref: '#/components/schemas/MissionGrantedAbility'
        joinEventActionCapKey:
          type: string
        minParticipants:
          type: integer
          format: int32
        terrainPrefabName:
          type: string
        maxParticipants:
          type: integer
          format: int32
        minScoreRequirement:
          type: integer
          format: int64
        warConflictZoneDefinition:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryWarConflictZoneDefinition'
        reconZoneDefinition:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryReconZoneDefinition'
        statCategory:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryMapStatCategory'
        rewardStructure:
          $ref: '#/components/schemas/TerritoryRewardStructure'
        uniqueJoinId:
          type: string
        hideLeaderboard:
          type: boolean
        localNotifications:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryLocalNote'
        minMemberLevelForReportingOpponent:
          $ref: '#/components/schemas/GuildMemberLevel'
        minMemberLevelForCommandingGuild:
          $ref: '#/components/schemas/GuildMemberLevel'
        commandNotificationCooldownDuration:
          type: integer
          format: int32
        mapTypeNameKey:
          type: string
        showTimerOnEvent:
          type: boolean
        restrictSetupDuringAttackPhase:
          type: boolean
        defaultCharacterBattleEnvironments:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
        defaultShipBattleEnvironments:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
        minimapPrefab:
          type: string
        defensiveCharacterDeployWarningThreshold:
          type: number
          format: float
        defensiveShipDeployWarningThreshold:
          type: number
          format: float
        leaderboardKey:
          type: string
        minPlayerScoreRequirement:
          type: integer
          format: int32
    TerritoryWarConflictZoneDefinition:
      type: object
      properties:
        zoneDefinition:
          $ref: '#/components/schemas/TerritoryZoneDefinition'
        combatType:
          $ref: '#/components/schemas/CombatType'
        conflictImage:
          type: string
        conflictRequirement:
          type: string
        conflictDetail:
          type: string
        entryCategoryAllowed:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        defenseEntryCategoryAllowed:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        deployDefensiveSquadReward:
          $ref: '#/components/schemas/TerritoryReward'
        offensiveWinReward:
          $ref: '#/components/schemas/TerritoryReward'
        completeZoneReward:
          $ref: '#/components/schemas/TerritoryReward'
        completeZoneRewardPerDefensiveSquad:
          $ref: '#/components/schemas/TerritoryReward'
        battleEnvironments:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
        pointStructure:
          $ref: '#/components/schemas/TerritoryWarPointStructure'
    TerritoryWarPointStructure:
      type: object
      properties:
        deployDefensiveSquadReward:
          $ref: '#/components/schemas/TerritoryReward'
        offensiveWinReward:
          $ref: '#/components/schemas/TerritoryReward'
        completeZoneReward:
          $ref: '#/components/schemas/TerritoryReward'
        completeZoneRewardPerDefensiveSquad:
          $ref: '#/components/schemas/TerritoryReward'
        defendDefeatBonus:
          type: array
          items:
            $ref: '#/components/schemas/GraduatingTerritoryReward'
        emptySquadSlotBonus:
          $ref: '#/components/schemas/TerritoryReward'
        survivingSquadUnitBonus:
          $ref: '#/components/schemas/TerritoryReward'
        fullHealthUnitBonus:
          $ref: '#/components/schemas/TerritoryReward'
        fullProtectionUnitBonus:
          $ref: '#/components/schemas/TerritoryReward'
        firstAttackBonus:
          $ref: '#/components/schemas/TerritoryReward'
        enemyDefeatedBonus:
          $ref: '#/components/schemas/TerritoryReward'
    GraduatingTerritoryReward:
      type: object
      properties:
        defendNumber:
          type: integer
          format: int32
        reward:
          $ref: '#/components/schemas/TerritoryReward'
    TerritoryRewardStructure:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - TerritoryRewardStructure_DEFAULT
            - TERRITORYREWARDPERSONAL
            - TERRITORYREWARDCUMULATIVE
    EnvironmentCollection:
      type: object
      properties:
        id:
          type: string
        battleEnvironment:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
    ChallengeStyle:
      type: object
      properties:
        id:
          type: string
        buttonIcon:
          type: string
        characterIcon:
          type: string
        characterNameKey:
          type: string
        characterRewardIcon:
          type: string
        completeKey:
          type: string
        audioKey:
          type: string
        questTitleKey:
          type: string
    SocialStatus:
      type: object
      properties:
        chatIcons:
          type: array
          items:
            $ref: '#/components/schemas/SocialStatusIcon'
        chatTitles:
          type: array
          items:
            $ref: '#/components/schemas/SocialStatusTitle'
        guildLogo:
          type: array
          items:
            $ref: '#/components/schemas/SocialStatusGuildBannerLogo'
        guildColor:
          type: array
          items:
            $ref: '#/components/schemas/SocialStatusGuildBannerColor'
        chatPortraits:
          type: array
          items:
            $ref: '#/components/schemas/SocialStatusPortrait'
    SocialStatusIcon:
      type: object
      properties:
        id:
          type: integer
          format: int32
        texture:
          type: string
    SocialStatusTitle:
      type: object
      properties:
        id:
          type: integer
          format: int32
        playerTitleId:
          type: string
    SocialStatusGuildBannerLogo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        guildBannerLogoId:
          type: string
    SocialStatusGuildBannerColor:
      type: object
      properties:
        id:
          type: integer
          format: int32
        guildBannerColorId:
          type: string
    SocialStatusPortrait:
      type: object
      properties:
        id:
          type: integer
          format: int32
        playerPortraitId:
          type: string
    StarterGuildDef:
      type: object
      properties:
        guildType:
          type: string
        nameKey:
          type: string
        allowedRaidId:
          type: array
          items:
            type: string
        messageKey:
          type: string
        allowedRaidCampaignId:
          type: array
          items:
            type: string
        bannerLogoId:
          type: string
        bannerColorId:
          type: string
        externalMessageKey:
          type: string
        subNameKey:
          type: string
    PlayerTitleDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descKey:
          type: string
        obtainable:
          type: boolean
        hidden:
          type: boolean
        shortDescKey:
          type: string
    ModRecommendation:
      type: object
      properties:
        id:
          type: string
        setRecommendation:
          type: array
          items:
            $ref: '#/components/schemas/ModRecommendationSetBonus'
        primaryStatRecommendation:
          type: array
          items:
            $ref: '#/components/schemas/ModRecommendationPrimaryStat'
        secondaryStatRecommendation:
          type: array
          items:
            $ref: '#/components/schemas/UnitStat'
        tipKey:
          type: string
    ModRecommendationSetBonus:
      type: object
      properties:
        modSetId:
          type: string
        quantity:
          type: integer
          format: int32
    ModRecommendationPrimaryStat:
      type: object
      properties:
        slot:
          $ref: '#/components/schemas/StatModSlot'
        stat:
          type: array
          items:
            $ref: '#/components/schemas/UnitStat'
    PersistentVfx:
      type: object
      properties:
        id:
          type: string
        prefab:
          type: string
        priority:
          type: integer
          format: int32
        lineOverride:
          type: string
    TerritoryTournamentDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descriptionKey:
          type: string
        prefabName:
          type: string
        iconPrefab:
          type: string
        detailImage:
          type: string
        territoryCategory:
          type: string
        minimapPrefab:
          type: string
        roundCount:
          type: integer
          format: int32
        roundTallyDuration:
          type: integer
          format: int32
        matchmakingDuration:
          type: integer
          format: int32
        dynamicDescription:
          type: array
          items:
            $ref: '#/components/schemas/DynamicDescription'
        completeRankRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        grantedAbilities:
          type: array
          items:
            $ref: '#/components/schemas/MissionGrantedAbility'
        localNotifications:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryLocalNote'
        restrictSetupDuringAttackPhase:
          type: boolean
        conflictZoneDefinition:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryTournamentConflictZoneDefinition'
        duelZoneDefinition:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryTournamentDuelZoneDefinition'
        noJoinDuration:
          type: integer
          format: int32
        defensiveCharacterDeployWarningThreshold:
          type: number
          format: float
        defensiveShipDeployWarningThreshold:
          type: number
          format: float
        matchCount:
          type: integer
          format: int32
        roundRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        seasonPointsPerBannerPercent:
          type: integer
          format: int32
        roundSeasonRewardTableId:
          type: string
        minimumBannerRoundRewardThreshold:
          type: integer
          format: int32
        minimumBannerEventRewardThreshold:
          type: integer
          format: int32
        savedSquadConfigId:
          type: string
    TerritoryTournamentConflictZoneDefinition:
      type: object
      properties:
        combatType:
          $ref: '#/components/schemas/CombatType'
        victoryPointRewards:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryRewardBracket'
        zoneDefinition:
          $ref: '#/components/schemas/TerritoryZoneDefinition'
    TerritoryTournamentDuelZoneDefinition:
      type: object
      properties:
        zoneDefinition:
          $ref: '#/components/schemas/TerritoryZoneDefinition'
        duelImage:
          type: string
        duelRequirement:
          type: string
        duelDetail:
          type: string
        entryCategoryAllowed:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        defenseEntryCategoryAllowed:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        battleEnvironments:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
        pointStructure:
          $ref: '#/components/schemas/TerritoryWarPointStructure'
        saveSquadZoneNumber:
          type: integer
          format: int32
    EventBonus:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descKey:
          type: string
        iconKey:
          type: string
        scoreModifier:
          type: number
          format: float
    SeasonDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        seasonLeagueReference:
          type: array
          items:
            $ref: '#/components/schemas/SeasonLeagueReference'
        seasonDivisionReference:
          type: array
          items:
            $ref: '#/components/schemas/SeasonDivisionReference'
        seasonRewardTableId:
          type: string
        minimumBannerSeasonRewardThreshold:
          type: integer
          format: int32
        divisionSkillBoundary:
          type: array
          items:
            $ref: '#/components/schemas/SeasonDivisionSkillBoundary'
    SeasonLeagueReference:
      type: object
      properties:
        definitionId:
          type: string
        promoteSystem:
          $ref: '#/components/schemas/SeasonLeaguePromoteSystem'
        promoteCondition:
          type: integer
          format: int32
        rewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/LeagueDivisionRewardPreview'
        promoteConditionTable:
          type: string
    SeasonLeaguePromoteSystem:
      oneOf:
        - type: integer
          enum:
            - 0
            - 3
        - type: string
          enum:
            - SEASONLEAGUEPROMOTENONE
            - SEASONLEAGUEPROMOTESEASONPOINTS
    LeagueDivisionRewardPreview:
      type: object
      properties:
        division:
          type: integer
          format: int32
        primaryReward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        detailedReward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
    SeasonDivisionReference:
      type: object
      properties:
        id:
          type: integer
          format: int32
    SeasonDivisionSkillBoundary:
      type: object
      properties:
        leagueId:
          type: string
        divisionId:
          type: integer
          format: int32
        minSkill:
          type: integer
          format: int32
    PlayerPortraitDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descKey:
          type: string
        obtainable:
          type: boolean
        hidden:
          type: boolean
        icon:
          type: string
    TimeZoneChangeConfig:
      type: object
      properties:
        allowedChangesPerPeriod:
          type: integer
          format: int32
        allowedChangesLocKey:
          type: string
        allowedChangesResetLocKey:
          type: string
        maxTimeZoneChangeHoursExclusive:
          type: integer
          format: int32
        timeZoneDefinition:
          type: array
          items:
            $ref: '#/components/schemas/TimeZoneDefinition'
        timeZoneChangeCooldownId:
          type: string
    TimeZoneDefinition:
      type: object
      properties:
        timeZoneOffsetMinutes:
          type: integer
          format: int32
        primary:
          type: boolean
    MysteryBoxDefinition:
      type: object
      properties:
        id:
          type: string
        texture:
          type: string
        titleKey:
          type: string
        descKey:
          type: string
        detailsTitleKey:
          type: string
        detailsDescKey:
          type: string
        iconTextKey:
          type: string
        previewItem:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        showPrimaryRewards:
          type: boolean
    MysteryStatModDefinition:
      type: object
      properties:
        id:
          type: string
        slotOld:
          $ref: '#/components/schemas/StatModSlot'
        setId:
          type: string
        minRarity:
          $ref: '#/components/schemas/Rarity'
        maxRarity:
          $ref: '#/components/schemas/Rarity'
        minTier:
          $ref: '#/components/schemas/StatModTier'
        maxTier:
          $ref: '#/components/schemas/StatModTier'
        slot:
          type: array
          items:
            $ref: '#/components/schemas/StatModSlot'
        descKey:
          type: string
    Cooldown:
      type: object
      properties:
        id:
          type: string
        refreshCost:
          $ref: '#/components/schemas/BucketItem'
    DailyActionCap:
      type: object
      properties:
        id:
          type: string
        maxActions:
          type: integer
          format: int32
        purchaseCost:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        unlimitedPurchases:
          type: boolean
    EnergyRewardDefinition:
      type: object
      properties:
        energyType:
          $ref: '#/components/schemas/EnergyType'
        instance:
          type: array
          items:
            $ref: '#/components/schemas/EnergyRewardInstance'
        claimableTitleKey:
          type: string
        claimableDescKey:
          type: string
        upcomingTitleKey:
          type: string
        upcomingDescKey:
          type: string
        showRequirement:
          $ref: '#/components/schemas/Requirement'
    EnergyType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
        - type: string
          enum:
            - EnergyType_DEFAULT
            - PVE
            - PVP
            - SHIPPVE
            - SHIPPVP
            - CANTINAPVE
            - MOD
            - CONQUEST
    EnergyRewardInstance:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/EnergyRewardInstanceType'
        start:
          type: integer
          format: int32
        duration:
          type: integer
          format: int32
        amount:
          type: integer
          format: int32
    EnergyRewardInstanceType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
        - type: string
          enum:
            - EnergyRewardInstanceType_DEFAULT
            - HOUROFDAY
    SeasonLeagueDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        icon:
          type: string
        rank:
          type: integer
          format: int32
        sprite:
          type: string
        portraitFrame:
          type: string
    SeasonDivisionDefinition:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nameKey:
          type: string
        minPower:
          type: integer
          format: int32
    SeasonRewardTable:
      type: object
      properties:
        id:
          type: string
        row:
          type: array
          items:
            $ref: '#/components/schemas/SeasonRewardTableRow'
    SeasonRewardTableRow:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/SeasonRewardTableKey'
        primaryReward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        detailedReward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
    SeasonRewardTableKey:
      type: object
      properties:
        league:
          type: integer
          format: int32
        division:
          type: integer
          format: int32
        rank:
          type: integer
          format: int32
    RelicTierDefinition:
      type: object
      properties:
        id:
          type: string
        stat:
          $ref: '#/components/schemas/StatDef'
        relicStatTable:
          type: string
        tier:
          $ref: '#/components/schemas/RelicTier'
    ConversionSet:
      type: object
      properties:
        output:
          $ref: '#/components/schemas/ConversionItemPrioritized'
        consumable:
          type: array
          items:
            $ref: '#/components/schemas/ConversionItem'
        surplus:
          $ref: '#/components/schemas/ConversionItem'
    ConversionItemPrioritized:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ConversionItem'
        priority:
          type: integer
          format: int32
    ConversionItem:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ItemType'
        pointValue:
          type: integer
          format: int32
    UnitGuideDefinition:
      type: object
      properties:
        unitBaseId:
          type: string
        type:
          $ref: '#/components/schemas/UnitGuideActivityType'
        activityId:
          type: string
        descriptionKey:
          type: string
        recommendationRequirementId:
          type: string
        overrideTexture:
          type: string
        titleKey:
          type: string
        subtitleKey:
          type: string
        additionalActivationRequirementId:
          type: string
        displayEnabled:
          type: boolean
        actionLinkImage:
          type: string
        actionLink:
          type: string
        inPreview:
          type: boolean
        hiddenUnitCount:
          type: integer
          format: int32
        previewArtImage:
          type: string
        upcomingEventKey:
          type: string
        featured:
          type: boolean
        campaignElementIdentifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        characterRecommendedEntryCategory:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        shipRecommendedEntryCategory:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        galacticLegend:
          type: boolean
        bannerImage:
          type: string
        bannerImageSubtextKey:
          type: string
        unitStagePrefab:
          type: string
    UnitGuideActivityType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 4
            - 5
        - type: string
          enum:
            - UnitGuideActivityType_DEFAULT
            - GUIDEACTIVITYEVENT
            - GUIDEACTIVITYRAID
            - GUIDEACTIVITYTERRITORYBATTLE
            - GUIDEACTIVITYUNDEFINED
    GalacticBundle:
      type: object
      properties:
        id:
          type: string
        targetPlayerLevel:
          type: integer
          format: int32
        unitUpgrade:
          type: array
          items:
            $ref: '#/components/schemas/UnitUpgrade'
        tabs:
          type: array
          items:
            $ref: '#/components/schemas/GalacticBundleTab'
        inventoryItem:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        info:
          type: string
        primaryGalacticBundle:
          type: boolean
    UnitUpgrade:
      type: object
      properties:
        id:
          type: string
        level:
          type: integer
          format: int32
        rarity:
          $ref: '#/components/schemas/Rarity'
        tier:
          $ref: '#/components/schemas/UnitTier'
        skillTier:
          type: integer
          format: int32
        skillOverride:
          type: array
          items:
            $ref: '#/components/schemas/SkillUpgrade'
        relicTier:
          $ref: '#/components/schemas/RelicTier'
    SkillUpgrade:
      type: object
      properties:
        id:
          type: string
        tier:
          type: integer
          format: int32
        unlocked:
          type: boolean
    GalacticBundleTab:
      type: object
      properties:
        mainElement:
          $ref: '#/components/schemas/GalacticBundleMainElement'
        image:
          type: string
        text:
          type: string
    GalacticBundleMainElement:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/GalacticBundleMainElementPage'
        elementType:
          $ref: '#/components/schemas/GalacticBundleMainElementType'
        image:
          type: string
        title:
          type: string
        description:
          type: string
        inventoryType:
          $ref: '#/components/schemas/GalacticBundleMainElementInventoryType'
    GalacticBundleMainElementPage:
      type: object
      properties:
        image:
          type: string
        title:
          type: string
        description:
          type: array
          items:
            type: string
        sprite:
          type: array
          items:
            type: string
    GalacticBundleMainElementType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        - type: string
          enum:
            - GalacticBundleMainElementType_DEFAULT
            - GALACTICBUNDLEMAINELEMENTTYPEPAGINATION
            - GALACTICBUNDLEMAINELEMENTTYPEINVENTORY
            - GALACTICBUNDLEMAINELEMENTTYPESPLIT
            - GALACTICBUNDLEMAINELEMENTTYPEHIGHTLIGHTS
            - GALACTICBUNDLEMAINELEMENTTYPEACCESS
    GalacticBundleMainElementInventoryType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        - type: string
          enum:
            - GalacticBundleMainElementInventoryType_DEFAULT
            - GALACTICBUNDLEMAINELEMENTINVENTORYTYPENONE
            - GALACTICBUNDLEMAINELEMENTINVENTORYTYPECHARACTERS
            - GALACTICBUNDLEMAINELEMENTINVENTORYTYPESHIPS
            - GALACTICBUNDLEMAINELEMENTINVENTORYTYPEUNITS
            - GALACTICBUNDLEMAINELEMENTINVENTORYTYPEITEMS
            - GALACTICBUNDLEMAINELEMENTINVENTORYTYPEALL
    LinkedStoreItem:
      type: object
      properties:
        linkId:
          type: string
        storeItem:
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/LinkedStoreItemType'
        contextualStoreItem:
          type: array
          items:
            $ref: '#/components/schemas/ContextualStoreItem'
    LinkedStoreItemType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - LinkedStoreItemType_DEFAULT
            - LINKEDSTOREITEMUNIT
            - LINKEDSTOREITEMEVENT
            - LINKEDSTOREITEMRAID
            - LINKEDSTOREITEMPREVIEW
    ContextualStoreItem:
      type: object
      properties:
        id:
          type: string
        storeItemId:
          type: array
          items:
            type: string
    TerritoryTournamentLeagueDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        icon:
          type: string
        rank:
          type: integer
          format: int32
        sprite:
          type: string
        portraitFrame:
          type: string
        blankIcon:
          type: string
    TerritoryTournamentDivisionDefinition:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nameKey:
          type: string
        icon:
          type: string
    SaveSquadConfig:
      type: object
      properties:
        id:
          type: string
        descKey:
          type: string
        tournamentMapDefinitionId:
          type: string
    GuildRaidGlobalConfig:
      type: object
      properties:
        guildRaidLockout:
          $ref: '#/components/schemas/GuildRaidLockout'
        lateEntryParticipationLockoutSeconds:
          type: integer
          format: int64
    Campaign:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descriptionKey:
          type: string
        image:
          type: string
        campaignType:
          $ref: '#/components/schemas/CampaignType'
        campaignMap:
          type: array
          items:
            $ref: '#/components/schemas/CampaignMap'
        progress:
          $ref: '#/components/schemas/CampaignElementProgress'
        unlockRequirementLocalizationKey:
          type: string
        dailyBattleCapKey:
          type: string
        entryCategoryAllowed:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        grindEnabled:
          type: boolean
    CampaignType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 11
            - 12
        - type: string
          enum:
            - CampaignType_DEFAULT
            - STANDARD
            - ONBOARDING
            - CAMPAIGNEVENT
            - GUILDRAID
            - CAMPAIGNPVELIGHT
            - CAMPAIGNPVEDARK
            - CAMPAIGNPVEMODBATTLES
            - CAMPAIGNPVEHOLOCRON
            - CAMPAIGNSHIPPVE
            - TERRITORYBATTLE
            - ARCADERAIDBATTLES
    CampaignMap:
      type: object
      properties:
        id:
          type: string
        campaignNodeDifficultyGroup:
          type: array
          items:
            $ref: '#/components/schemas/CampaignNodeDifficultyGroup'
        progress:
          $ref: '#/components/schemas/CampaignElementProgress'
        entryOwnershipRequirement:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        unlockRequirementLocalizationKey:
          type: string
        isPlayerSquadSupplied:
          type: boolean
        dailyBattleCapKey:
          type: string
        entryCategoryAllowed:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        grindEnabled:
          type: boolean
        gameModeKey:
          type: string
    CampaignNodeDifficultyGroup:
      type: object
      properties:
        campaignNodeDifficulty:
          $ref: '#/components/schemas/CampaignNodeDifficulty'
        campaignNode:
          type: array
          items:
            $ref: '#/components/schemas/CampaignNode'
        progress:
          $ref: '#/components/schemas/CampaignElementProgress'
        unlockRequirementLocalizationKey:
          type: string
        dailyBattleCapKey:
          type: string
        entryCategoryAllowed:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        grindEnabled:
          type: boolean
    CampaignNode:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        campaignNodeMission:
          type: array
          items:
            $ref: '#/components/schemas/CampaignNodeMission'
        homePrefab:
          type: string
        forceAlignment:
          $ref: '#/components/schemas/ForceAlignment'
        dominantClass:
          $ref: '#/components/schemas/UnitClass'
        combatType:
          $ref: '#/components/schemas/CombatType'
        isCannon:
          type: boolean
        progress:
          $ref: '#/components/schemas/CampaignElementProgress'
        unlockRequirementLocalizationKey:
          type: string
        dailyBattleCapKey:
          type: string
        entryCategoryAllowed:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        cooldownKey:
          type: string
        grindEnabled:
          type: boolean
        cooldownConditionalOverrideKey:
          type: string
        firstTimeFinishCost:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
    CampaignNodeMission:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descKey:
          type: string
        combatType:
          $ref: '#/components/schemas/CombatType'
        enemyPreview:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        rewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        campaignNodeEncounter:
          type: array
          items:
            $ref: '#/components/schemas/CampaignNodeEncounter'
        audioKey:
          type: string
        progress:
          $ref: '#/components/schemas/CampaignElementProgress'
        entryCostRequirement:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        entryCategoryAllowed:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        shortNameKey:
          type: string
        groupNameKey:
          type: string
        groupImage:
          type: string
        unlockRequirementLocalizationKey:
          type: string
        cooldownKey:
          type: string
        dailyBattleCapKey:
          type: string
        firstCompleteRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        enemyUnitPreview:
          type: array
          items:
            $ref: '#/components/schemas/CampaignMissionEnemyPreview'
        prefab:
          type: string
        position:
          $ref: '#/components/schemas/Position'
        playerAbilityRef:
          type: array
          items:
            $ref: '#/components/schemas/AbilityReference'
        activateCost:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        rankRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        detailImage:
          type: string
        detailDescKey:
          type: string
        raidConfigId:
          type: string
        dynamicDescription:
          type: array
          items:
            $ref: '#/components/schemas/DynamicDescription'
        nodeDisplayItem:
          $ref: '#/components/schemas/ItemType'
        grindEnabled:
          type: boolean
        hasForcedAlly:
          type: boolean
        battleSupportAllowed:
          type: boolean
        autoBattleEnabled:
          type: boolean
        retreatEnabled:
          type: boolean
        forcedPlayerSquad:
          $ref: '#/components/schemas/ForcedPlayerSquad'
        grantedAbilities:
          type: array
          items:
            $ref: '#/components/schemas/MissionGrantedAbility'
        cooldownConditionalOverrideKey:
          type: string
        holonodePlanetPrefabName:
          type: string
        battleSpeedAdjustable:
          type: boolean
        requirementOverrideKey:
          type: string
        simmableOverrideEnabled:
          type: boolean
        conditionalRewardsPreview:
          type: array
          items:
            $ref: '#/components/schemas/ConditionalBucket'
        conditionalEntryCostOverride:
          $ref: '#/components/schemas/ConditionalBucket'
        recommendationKey:
          type: string
        instanceFirstCompleteRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        overviewLocKey:
          type: string
        recommendedGp:
          type: integer
          format: int32
        battleDurationLimit:
          type: integer
          format: int64
        recommendedUnitGp:
          type: integer
          format: int32
        volatileAccess:
          type: boolean
        unlockRequirementId:
          type: string
        visibilityRequirementId:
          type: string
        raidPointsStructure:
          $ref: '#/components/schemas/RaidPointsStructure'
        featured:
          type: boolean
        immediateRegularRankRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        maxPointsPerAttempt:
          type: integer
          format: int32
        unitReplacement:
          type: array
          items:
            $ref: '#/components/schemas/UnitReplacement'
    CampaignNodeEncounter:
      type: object
      properties:
        encounterCinematics:
          type: array
          items:
            $ref: '#/components/schemas/CampaignCinematic'
        environment:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
        encounterMessage:
          type: array
          items:
            $ref: '#/components/schemas/ContextualMessageGroup'
        audioKey:
          type: string
        allowChanceMechanics:
          type: boolean
        firstTimeEncounterMessage:
          type: array
          items:
            $ref: '#/components/schemas/ContextualMessageGroup'
        encounterIcon:
          type: string
        encounterDescKey:
          type: string
        encounterIconPosition:
          type: integer
          format: int32
        raidProgressColor:
          $ref: '#/components/schemas/ColorType'
        maxDeployedSquadSize:
          type: integer
          format: int32
        environmentCollectionId:
          type: string
        encounterId:
          type: string
        encounterDurationLimit:
          type: integer
          format: int64
        scoreToComplete:
          type: integer
          format: int64
        detailDescKey:
          type: string
        pointsToComplete:
          type: integer
          format: int64
        audioVictoryKey:
          type: string
        displayableEnemyId:
          type: array
          items:
            type: string
        displayableGrantedAbility:
          type: array
          items:
            type: string
    CampaignCinematic:
      type: object
      properties:
        trigger:
          $ref: '#/components/schemas/CinematicTrigger'
        environment:
          $ref: '#/components/schemas/Environment'
        subsequentViewingEnvironment:
          $ref: '#/components/schemas/Environment'
    CinematicTrigger:
      type: object
      properties:
        triggerCondition:
          type: string
    ColorType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        - type: string
          enum:
            - ColorType_DEFAULT
            - WHITE
            - RED
            - ORANGE
            - YELLOW
            - GREEN
            - BLUE
    CampaignElementProgress:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
        - type: string
          enum:
            - CampaignElementProgress_DEFAULT
            - HIDDEN
            - LOCKED
            - UNLOCKED
            - COMPLETE
            - COMPLETEONESTAR
            - COMPLETETWOSTAR
            - COMPLETETHREESTAR
    CampaignMissionEnemyPreview:
      type: object
      properties:
        baseEnemyItem:
          $ref: '#/components/schemas/BucketItem'
        enemyLevel:
          type: integer
          format: int32
        enemyTier:
          $ref: '#/components/schemas/UnitTier'
        threatLevel:
          $ref: '#/components/schemas/ThreatLevel'
        thumbnailName:
          type: string
        prefabName:
          type: string
        displayedEnemy:
          type: boolean
        unitClass:
          $ref: '#/components/schemas/UnitClass'
        enemyForceAlignment:
          $ref: '#/components/schemas/ForceAlignment'
        enemyRelicTier:
          $ref: '#/components/schemas/RelicTier'
        zetaCount:
          type: integer
          format: int32
        isGalacticLegend:
          type: boolean
        isUltimateUnlocked:
          type: boolean
        omicronCount:
          type: integer
          format: int32
    ForcedPlayerSquad:
      type: object
      properties:
        squad:
          $ref: '#/components/schemas/Squad'
        squadUnit:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
    Squad:
      type: object
      properties:
        cell:
          type: array
          items:
            $ref: '#/components/schemas/SquadCell'
        targetingTactic:
          $ref: '#/components/schemas/BattleTargetingTactic'
        squadType:
          $ref: '#/components/schemas/SquadType'
        targetingSetId:
          type: string
        expireTime:
          type: integer
          format: int64
        lastSaveTime:
          type: integer
          format: int64
        supportInheritFromDefinitionId:
          type: string
        datacron:
          $ref: '#/components/schemas/DatacronBattleStat'
    SquadCell:
      type: object
      properties:
        unitId:
          type: string
        unitDefId:
          type: string
        cellIndex:
          type: integer
          format: int32
        unitBattleStat:
          $ref: '#/components/schemas/UnitBattleStat'
        messageReticle:
          type: string
        progressItem:
          type: boolean
        squadUnitType:
          $ref: '#/components/schemas/SquadUnitType'
        crewBattleStat:
          type: array
          items:
            $ref: '#/components/schemas/UnitBattleStat'
        unitState:
          $ref: '#/components/schemas/BattleUnitState'
        selectable:
          type: boolean
        overkillItem:
          type: boolean
        inheritFromDefinitionId:
          type: string
    UnitBattleStat:
      type: object
      properties:
        actionCountMin:
          type: integer
          format: int32
        actionCountMax:
          type: integer
          format: int32
        battleStat:
          $ref: '#/components/schemas/StatDef'
        level:
          type: integer
          format: int32
        tier:
          $ref: '#/components/schemas/UnitTier'
        equipment:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSlot'
        skill:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        statMod:
          type: array
          items:
            $ref: '#/components/schemas/StatMod'
        unitDefId:
          type: string
        unitId:
          type: string
        unitRelicTier:
          $ref: '#/components/schemas/RelicTier'
        purchasedAbilityId:
          type: array
          items:
            type: string
        overrideAllStatsMultiplier:
          type: number
          format: double
        overrideStatMultiplier:
          type: array
          items:
            $ref: '#/components/schemas/Stat'
        skipStatsOverwrite:
          type: boolean
        enableLeaderAbility:
          type: boolean
        threatLevelOverride:
          $ref: '#/components/schemas/ThreatLevel'
        overrideAllStatsTable:
          type: string
    EquipmentSlot:
      type: object
      properties:
        equipmentId:
          type: string
        slot:
          type: integer
          format: int32
    Skill:
      type: object
      properties:
        id:
          type: string
        tier:
          type: integer
          format: int32
    SquadUnitType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        - type: string
          enum:
            - SquadUnitType_DEFAULT
            - UNITTYPEDEFAULT
            - UNITTYPELEADER
            - UNITTYPECOMMANDER
            - UNITTYPESUPPORT
            - UNITTYPEREINFORCEMENT
    BattleUnitState:
      type: object
      properties:
        unitId:
          type: string
        healthPercent:
          type: string
        abilityState:
          type: array
          items:
            $ref: '#/components/schemas/BattleUnitAbilityState'
        progressItem:
          type: boolean
        currentHealth:
          type: integer
          format: int64
        shieldPercent:
          type: string
        turnPercent:
          type: string
        maxHealth:
          type: integer
          format: int64
        hasFled:
          type: boolean
        maxShield:
          type: integer
          format: int64
        isCommander:
          type: boolean
        isDeployed:
          type: boolean
        currentShield:
          type: integer
          format: int64
        overkillItem:
          type: boolean
        overkillDamage:
          type: integer
          format: int64
        battleContextMaxShield:
          type: integer
          format: int64
        isUnscathed:
          type: boolean
    BattleUnitAbilityState:
      type: object
      properties:
        abilityId:
          type: string
        cooldown:
          type: integer
          format: int32
    BattleTargetingTactic:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - BattleTargetingTactic_DEFAULT
            - TARGETRANDOM
            - TARGETRANDOMSWITCH
            - TARGETRANDOMOVERKILL
            - TARGETRANDOMWEIGHTEDSWITCH
    DatacronBattleStat:
      type: object
      properties:
        id:
          type: string
        setId:
          type: integer
          format: int32
        templateId:
          type: string
        tag:
          type: array
          items:
            type: string
        affix:
          type: array
          items:
            $ref: '#/components/schemas/DatacronAffix'
    DatacronAffix:
      type: object
      properties:
        targetRule:
          type: string
        abilityId:
          type: string
        statType:
          $ref: '#/components/schemas/UnitStat'
        statValue:
          type: integer
          format: int64
        tag:
          type: array
          items:
            type: string
        requiredUnitTier:
          $ref: '#/components/schemas/UnitTier'
        requiredRelicTier:
          $ref: '#/components/schemas/RelicTier'
        scopeIcon:
          type: string
    Unit:
      type: object
      properties:
        id:
          type: string
        definitionId:
          type: string
        currentRarity:
          $ref: '#/components/schemas/Rarity'
        currentLevel:
          type: integer
          format: int32
        currentXp:
          type: integer
          format: int32
        promotionRecipeReference:
          type: string
        skill:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        unitStat:
          $ref: '#/components/schemas/StatDef'
        equipment:
          type: array
          items:
            $ref: '#/components/schemas/EquipmentSlot'
        currentTier:
          $ref: '#/components/schemas/UnitTier'
        equippedStatModOld:
          type: array
          items:
            type: string
        equippedStatMod:
          type: array
          items:
            $ref: '#/components/schemas/StatMod'
        relic:
          $ref: '#/components/schemas/Relic'
        purchasedAbilityId:
          type: array
          items:
            type: string
    Relic:
      type: object
      properties:
        currentTier:
          $ref: '#/components/schemas/RelicTier'
    ConditionalBucket:
      type: object
      properties:
        requirementId:
          type: string
        bucketItem:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
    RaidPointsStructure:
      type: object
      properties:
        blackboardPointSource:
          type: array
          items:
            $ref: '#/components/schemas/RaidBlackboardPointSource'
        modifier:
          type: array
          items:
            $ref: '#/components/schemas/RaidModifier'
    RaidBlackboardPointSource:
      type: object
      properties:
        id:
          type: string
        locKey:
          type: string
    RaidModifier:
      type: object
      properties:
        descKey:
          type: string
        grantedAbility:
          type: array
          items:
            $ref: '#/components/schemas/MissionGrantedAbility'
        scoreMultiplierUnscaled:
          type: integer
          format: int64
        requiredUnitTier:
          $ref: '#/components/schemas/UnitTier'
        requiredRelicTier:
          $ref: '#/components/schemas/RelicTier'
        abilityOverride:
          type: array
          items:
            $ref: '#/components/schemas/RaidAbilityOverride'
    RaidAbilityOverride:
      type: object
      properties:
        abilityId:
          type: string
        targetRuleId:
          type: string
        locKey:
          type: string
        icon:
          type: string
    UnitReplacement:
      type: object
      properties:
        sourceUnitId:
          type: string
        replacementUnitId:
          type: string
    ConquestDefinition:
      type: object
      properties:
        id:
          type: string
        nameKey:
          type: string
        descriptionKey:
          type: string
        conquestDifficulty:
          type: array
          items:
            $ref: '#/components/schemas/ConquestDifficulty'
        staminaStatAllowlist:
          type: string
        consumableDetail:
          type: array
          items:
            $ref: '#/components/schemas/ConsumableDetails'
        visibility:
          type: array
          items:
            $ref: '#/components/schemas/ConquestVisibility'
        miscEntry:
          type: array
          items:
            $ref: '#/components/schemas/ConquestPurchasePassMiscTextEntry'
    ConquestDifficulty:
      type: object
      properties:
        minGp:
          type: integer
          format: int32
        sector:
          type: array
          items:
            $ref: '#/components/schemas/ConquestSector'
        nameKey:
          type: string
        id:
          $ref: '#/components/schemas/CampaignNodeDifficulty'
        rankRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        immediateRankRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        recommendedMinGp:
          type: integer
          format: int32
        premiumImmediateRankRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
    ConquestSector:
      type: object
      properties:
        id:
          type: string
        node:
          type: array
          items:
            $ref: '#/components/schemas/ConquestNode'
        prefabName:
          type: string
        artTile:
          type: string
        titleKey:
          type: string
        environmentTitleKey:
          type: string
        backgroundPrefabName:
          type: string
    ConquestNode:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ConquestNodeType'
        conquestMissionId:
          type: string
        nameKey:
          type: string
        enemyUnitPreview:
          type: array
          items:
            $ref: '#/components/schemas/CampaignMissionEnemyPreview'
        conquestCompletionNode:
          type: boolean
        unlockRequirementId:
          type: string
        style:
          $ref: '#/components/schemas/ConquestNodeStyle'
        finishSector:
          type: boolean
    ConquestNodeType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        - type: string
          enum:
            - ConquestNodeType_DEFAULT
            - COMBATNODE
            - ARTIFACTNODE
            - MERCHANTNODE
            - STARTNODE
            - BOSSNODE
            - COMBATNOPOINTSNODE
    ConquestNodeStyle:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - ConquestNodeStyle_DEFAULT
            - DEFAULTSTYLE
            - LEGEND
            - DATACRONSTYLE
    ConsumableDetails:
      type: object
      properties:
        typeId:
          type: string
        maxCount:
          type: integer
          format: int32
    ConquestVisibility:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ConquestNodeType'
        distance:
          type: integer
          format: int32
    ConquestPurchasePassMiscTextEntry:
      type: object
      properties:
        spriteName:
          type: string
        textId:
          type: string
        type:
          $ref: '#/components/schemas/ConquestPurchasePassMiscTextEntryType'
    ConquestPurchasePassMiscTextEntryType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - ConquestPurchasePassMiscTextEntryType_DEFAULT
            - PASSWITHEXTRAS
            - PASSONLY
            - ALLPASSVARIANTS
    ConquestMission:
      type: object
      properties:
        id:
          type: string
        battleDetails:
          $ref: '#/components/schemas/BattleDetails'
        entryCostRequirement:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        rewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        conditionalRewardsPreview:
          type: array
          items:
            $ref: '#/components/schemas/ConditionalBucket'
        instanceFirstCompleteRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        recommendationKey:
          type: string
    BattleDetails:
      type: object
      properties:
        id:
          type: string
        entryCategoryAllowed:
          $ref: '#/components/schemas/EntryCategoryAllowed'
        battleEncounter:
          type: array
          items:
            $ref: '#/components/schemas/CampaignNodeEncounter'
        battleDurationLimit:
          type: integer
          format: int64
        grantedAbility:
          type: array
          items:
            $ref: '#/components/schemas/MissionGrantedAbility'
        autoBattleEnabled:
          type: boolean
        battleSpeedAdjustable:
          type: boolean
        retreatEnabled:
          type: boolean
        audioKey:
          type: string
        combatType:
          $ref: '#/components/schemas/CombatType'
    ArtifactDefinition:
      type: object
      properties:
        id:
          type: string
        powerLevel:
          type: integer
          format: int32
        grantedAbility:
          type: array
          items:
            $ref: '#/components/schemas/MissionGrantedAbility'
        nameKey:
          type: string
        descriptionKey:
          type: string
        texture:
          type: string
        targetedStat:
          type: array
          items:
            $ref: '#/components/schemas/TargetedStat'
        tierId:
          type: string
    TargetedStat:
      type: object
      properties:
        stat:
          $ref: '#/components/schemas/Stat'
        targetRuleId:
          type: string
    AbilityDecisionTree:
      type: object
      properties:
        abilityDecisionTreeId:
          type: string
        abilityDecisionNode:
          type: array
          items:
            $ref: '#/components/schemas/AbilityDecisionNode'
    AbilityDecisionNode:
      type: object
      properties:
        decisionType:
          $ref: '#/components/schemas/AbilityDecisionType'
        decisionTarget:
          $ref: '#/components/schemas/AbilityDecisionTarget'
        param:
          type: array
          items:
            type: string
        paramModifier:
          $ref: '#/components/schemas/AbilityDecisionParamModifier'
        targetExcludeSelf:
          type: boolean
        chance:
          type: integer
          format: int64
        negate:
          type: boolean
        decisionResult:
          $ref: '#/components/schemas/AbilityDecisionResult'
    AbilityDecisionType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
        - type: string
          enum:
            - AbilityDecisionType_DEFAULT
            - SINGLEHEALTH
            - MEDIANHEALTH
            - NUMBEROFTARGETS
            - PERSISTENTEFFECT
            - NUMBEROFENEMIESALIVE
            - REINFORCEAVAILABLE
            - OUTNUMBERED
            - SINGLESURVIVABILITYPERCENT
            - SUMMONAVAILABLE
            - SINGLEPROTECTION
            - SINGLESPEEDFILL
            - TARGETBYUNITIDS
    AbilityDecisionTarget:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - AbilityDecisionTarget_DEFAULT
            - SELF
            - ALLY
            - ENEMY
            - DEADALLY
    AbilityDecisionParamModifier:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - AbilityDecisionParamModifier_DEFAULT
            - GREATERTHAN
            - EQUALTO
            - LESSTHAN
    AbilityDecisionResult:
      type: object
      properties:
        chosenAbilityTag:
          type: string
        decisionResultTarget:
          $ref: '#/components/schemas/AbilityDecisionResultTarget'
        allyTargetId:
          type: array
          items:
            type: string
    AbilityDecisionResultTarget:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - AbilityDecisionResultTarget_DEFAULT
            - ALL
            - LOWESTABSOLUTEHEALTH
    ConsumableDefinition:
      type: object
      properties:
        id:
          type: string
        tierId:
          type: string
        iconKey:
          type: string
        nameKey:
          type: string
        descriptionKey:
          type: string
        totalBattleUse:
          type: integer
          format: int32
        grantedAbility:
          type: array
          items:
            $ref: '#/components/schemas/MissionGrantedAbility'
        staminaRecovery:
          type: integer
          format: int32
        targetedStat:
          type: array
          items:
            $ref: '#/components/schemas/TargetedStat'
        consumableTypeId:
          type: string
        effectIconKey:
          type: string
        activeTimeInSeconds:
          type: integer
          format: int64
        staminaRegenTimeReduction:
          type: integer
          format: int32
        energyRegenTimeReduction:
          type: integer
          format: int32
    ConsumableType:
      type: object
      properties:
        typeId:
          type: string
        nameKey:
          type: string
        descriptionKey:
          type: string
        iconKey:
          type: string
    ArtifactTierDefinition:
      type: object
      properties:
        id:
          type: string
        rarity:
          $ref: '#/components/schemas/Rarity'
        nameKey:
          type: string
        iconKey:
          type: string
    ConsumableTierDefinition:
      type: object
      properties:
        id:
          type: string
        rarity:
          $ref: '#/components/schemas/Rarity'
        nameKey:
          type: string
        iconKey:
          type: string
        effectIconFrameKey:
          type: string
    UnitGuideLayout:
      type: object
      properties:
        id:
          type: string
        tabTitleKey:
          type: string
        layoutTier:
          type: array
          items:
            $ref: '#/components/schemas/UnitGuideLayoutTier'
    UnitGuideLayoutTier:
      type: object
      properties:
        titleKey:
          type: string
        subtitleKey:
          type: string
        layoutLine:
          type: array
          items:
            $ref: '#/components/schemas/UnitGuideLayoutLine'
    UnitGuideLayoutLine:
      type: object
      properties:
        unitGuideId:
          type: array
          items:
            type: string
    DailyLoginRewardDefinition:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        message:
          type: string
        defaultBucketItem:
          $ref: '#/components/schemas/BucketItem'
        reward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        monthly:
          type: boolean
        missedConsequence:
          $ref: '#/components/schemas/CalendarMissedConsequence'
        completionBehavior:
          $ref: '#/components/schemas/CalendarCompletionBehavior'
        icon:
          type: string
        category:
          type: string
        delayFirstReward:
          type: boolean
        catchUp:
          $ref: '#/components/schemas/CalendarCatchUp'
        expiry:
          $ref: '#/components/schemas/CalendarExpiry'
        visualOverride:
          $ref: '#/components/schemas/CalendarVisuals'
        catchupCost:
          $ref: '#/components/schemas/BucketItem'
    CalendarMissedConsequence:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - IGNOREMISSED
            - SKIPMISSED
            - RESETONMISS
    CalendarCompletionBehavior:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - REMAIN
            - REMOVE
            - REPEAT
    CalendarCatchUp:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - DISABLED
            - MISSEDDAY
            - ANYDAY
    CalendarExpiry:
      type: object
      properties:
        duration:
          type: integer
          format: int64
        endTime:
          type: integer
          format: int64
        expiryRequirement:
          $ref: '#/components/schemas/Requirement'
    CalendarVisuals:
      type: object
      properties:
        background:
          type: string
        button:
          type: string
    CalendarCategoryDefinition:
      type: object
      properties:
        id:
          type: string
        unlimited:
          type: boolean
        sortOrder:
          type: integer
          format: int32
        textKey:
          type: string
    TerritoryTournamentDailyRewardTable:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryTournamentDailyRewardTableRow'
    TerritoryTournamentDailyRewardTableRow:
      type: object
      properties:
        league:
          type: integer
          format: int32
        division:
          type: integer
          format: int32
        primaryReward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
        detailedReward:
          type: array
          items:
            $ref: '#/components/schemas/BucketItem'
    DatacronSet:
      type: object
      properties:
        id:
          type: integer
          format: int32
        displayName:
          type: string
        expirationTimeMs:
          type: integer
          format: int64
        icon:
          type: string
        tier:
          type: array
          items:
            $ref: '#/components/schemas/DatacronSetTier'
        detailPrefab:
          type: string
        setMaterial:
          type: array
          items:
            $ref: '#/components/schemas/DatacronSetMaterial'
    DatacronSetTier:
      type: object
      properties:
        id:
          type: integer
          format: int32
        upgradeCostRecipeId:
          type: string
        dustGrantRecipeId:
          type: string
        rerollCostRecipeId:
          type: array
          items:
            type: string
        scopeIdentifier:
          $ref: '#/components/schemas/DatacronScopeIdentifier'
    DatacronScopeIdentifier:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - DatacronScopeIdentifier_DEFAULT
            - STATSCOPE
            - ALIGNMENTSCOPE
            - FACTIONSCOPE
            - CHARACTERSCOPE
    DatacronSetMaterial:
      type: object
      properties:
        materialId:
          type: string
        quantityPerDustGrant:
          type: integer
          format: int32
        dustGrantRecipeId:
          type: string
    DatacronTemplate:
      type: object
      properties:
        id:
          type: string
        setId:
          type: integer
          format: int32
        initialTiers:
          type: integer
          format: int32
        referenceTemplateId:
          type: string
        fixedTag:
          type: array
          items:
            type: string
        tier:
          type: array
          items:
            $ref: '#/components/schemas/DatacronTemplateTier'
        maxRerolls:
          type: integer
          format: int32
        allowReroll:
          type: boolean
    DatacronTemplateTier:
      type: object
      properties:
        id:
          type: integer
          format: int32
        affixTemplateSetId:
          type: array
          items:
            type: string
        initialAffixTemplateSetIds:
          type: array
          items:
            type: string
        requiredUnitTier:
          $ref: '#/components/schemas/UnitTier'
        requiredRelicTier:
          $ref: '#/components/schemas/RelicTier'
    DatacronAffixTemplateSet:
      type: object
      properties:
        id:
          type: string
        affix:
          type: array
          items:
            $ref: '#/components/schemas/DatacronAffixTemplate'
    DatacronAffixTemplate:
      type: object
      properties:
        abilityId:
          type: string
        targetRule:
          type: string
        statType:
          $ref: '#/components/schemas/UnitStat'
        statValueMin:
          type: integer
          format: int64
        statValueMax:
          type: integer
          format: int64
        minTier:
          type: integer
          format: int32
        maxTier:
          type: integer
          format: int32
        tag:
          type: array
          items:
            type: string
        scopeIcon:
          type: string
    DatacronHelpEntry:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
    UnitDefPreview:
      type: object
      properties:
        id:
          type: string
        thumbnailName:
          type: string
        nameKey:
          type: string
        basicAttackRef:
          $ref: '#/components/schemas/AbilityReference'
        limitBreakRef:
          type: array
          items:
            $ref: '#/components/schemas/AbilityReference'
        uniqueAbilityRef:
          type: array
          items:
            $ref: '#/components/schemas/AbilityReference'
    Guild:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/GuildProfile'
        member:
          type: array
          items:
            $ref: '#/components/schemas/GuildMember'
        inviteStatus:
          type: array
          items:
            $ref: '#/components/schemas/GuildInviteStatus'
        raidStatus:
          type: array
          items:
            $ref: '#/components/schemas/GuildRaidStatus'
        inventory:
          $ref: '#/components/schemas/GuildInventory'
        raidResult:
          type: array
          items:
            $ref: '#/components/schemas/GuildRaidResult'
        progress:
          $ref: '#/components/schemas/GuildProgress'
        territoryBattleStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryBattleStatus'
        guildEvents:
          type: array
          items:
            $ref: '#/components/schemas/GameEvent'
        territoryBattleResult:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryBattleResult'
        territoryWarStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryWarStatus'
        roomAvailable:
          type: array
          items:
            $ref: '#/components/schemas/RoomData'
        nextChallengesRefresh:
          type: integer
          format: int64
        stat:
          type: array
          items:
            $ref: '#/components/schemas/GuildStat'
        recentRaidResult:
          type: array
          items:
            $ref: '#/components/schemas/GuildRaidResult'
        recentTerritoryWarResult:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryWarResult'
        lastRaidPointsSummary:
          type: array
          items:
            $ref: '#/components/schemas/GuildRaidPointsSummary'
    GuildProfile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        externalMessageKey:
          type: string
        messageCriteriaKey:
          type: array
          items:
            type: string
        logoBackground:
          type: string
        enrollmentStatus:
          $ref: '#/components/schemas/EnrollmentStatus'
        trophy:
          type: integer
          format: int32
        memberCount:
          type: integer
          format: int32
        memberMax:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
        rank:
          type: integer
          format: int32
        levelRequirement:
          type: integer
          format: int32
        raidWin:
          type: integer
          format: int32
        leaderboardScore:
          type: integer
          format: int64
        bannerColorId:
          type: string
        bannerLogoId:
          type: string
        guildGalacticPower:
          type: integer
          format: int64
        chatChannelId:
          type: string
        guildType:
          type: string
        raidLaunchConfig:
          type: array
          items:
            $ref: '#/components/schemas/GuildRaidLaunchConfig'
        guildEventTracker:
          type: array
          items:
            $ref: '#/components/schemas/GuildEventTracker'
        guildGalacticPowerForRequirement:
          type: integer
          format: int64
        singleLaunchConfig:
          $ref: '#/components/schemas/GuildRaidLaunchConfig'
        autoLaunchConfig:
          $ref: '#/components/schemas/GuildRaidLaunchConfig'
    EnrollmentStatus:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - EnrollmentStatus_DEFAULT
            - ENROLLMENTOPEN
            - ENROLLMENTINVITE
            - ENROLLMENTCLOSED
    GuildRaidLaunchConfig:
      type: object
      properties:
        raidId:
          type: string
        campaignMissionIdentifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        autoLaunch:
          type: boolean
        autoLaunchImmediately:
          type: boolean
        autoLaunchTime:
          type: integer
          format: int64
        joinPeriodDuration:
          type: integer
          format: int64
        autoSimEnabled:
          type: boolean
        immediate:
          type: boolean
        scheduledUtcOffsetSeconds:
          type: integer
          format: int64
    GuildEventTracker:
      type: object
      properties:
        definitionId:
          type: string
        completedStars:
          type: integer
          format: int64
        endTime:
          type: integer
          format: int64
    GuildMember:
      type: object
      properties:
        playerId:
          type: string
        playerName:
          type: string
        playerLevel:
          type: integer
          format: int32
        memberLevel:
          $ref: '#/components/schemas/GuildMemberLevel'
        guildXp:
          type: integer
          format: int32
        lastActivityTime:
          type: integer
          format: int64
        squadPower:
          type: integer
          format: int32
        memberContribution:
          type: array
          items:
            $ref: '#/components/schemas/GuildMemberContribution'
        guildJoinTime:
          type: integer
          format: int64
        galacticPower:
          type: integer
          format: int64
        playerTitle:
          type: string
        playerPortrait:
          type: string
        seasonStatus:
          type: array
          items:
            $ref: '#/components/schemas/SeasonStatus'
        lifetimeSeasonScore:
          type: integer
          format: int64
        leagueId:
          type: string
        shipGalacticPower:
          type: integer
          format: int64
        characterGalacticPower:
          type: integer
          format: int64
        nucleusId:
          type: string
    GuildMemberContribution:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/MemberContributionType'
        currentValue:
          type: integer
          format: int64
        lifetimeValue:
          type: integer
          format: int64
    MemberContributionType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - MemberContributionType_DEFAULT
            - CONTRIBUTIONTYPECOMMENDATION
            - CONTRIBUTIONTYPETRIBUTE
            - CONTRIBUTIONTYPEDONATION
    SeasonStatus:
      type: object
      properties:
        seasonId:
          type: string
        eventInstanceId:
          type: string
        league:
          type: string
        wins:
          type: integer
          format: int32
        losses:
          type: integer
          format: int32
        seasonPoints:
          type: integer
          format: int32
        division:
          type: integer
          format: int32
        joinTime:
          type: integer
          format: int64
        endTime:
          type: integer
          format: int64
        remove:
          type: boolean
        rank:
          type: integer
          format: int32
    GuildInviteStatus:
      type: object
      properties:
        guildId:
          type: string
        expireTime:
          type: integer
          format: int64
        playerId:
          type: string
        type:
          $ref: '#/components/schemas/GuildInviteType'
        leaderUnit:
          $ref: '#/components/schemas/Unit'
        sentTime:
          type: integer
          format: int64
        playerLevel:
          type: integer
          format: int32
        playerName:
          type: string
    GuildInviteType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - GuildInviteType_DEFAULT
            - GUILDJOINREQUEST
            - GUILDINVITATION
    GuildRaidStatus:
      type: object
      properties:
        raidId:
          type: string
        expireTime:
          type: integer
          format: int64
        raidProgress:
          type: number
          format: float
        raidMemberOld:
          type: array
          items:
            $ref: '#/components/schemas/GuildRaidMember'
        opponentUnitState:
          type: array
          items:
            $ref: '#/components/schemas/BattleUnitState'
        playerUnitState:
          type: array
          items:
            $ref: '#/components/schemas/BattleUnitState'
        identifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        instanceId:
          type: string
        rosterRefreshTime:
          type: integer
          format: int64
        hasPlayerParticipated:
          type: boolean
        raidState:
          $ref: '#/components/schemas/RaidState'
        tallyEndTime:
          type: integer
          format: int64
        eligibleForRewards:
          type: boolean
        activateTimeMs:
          type: integer
          format: int64
        forbidLateEntry:
          type: boolean
        joinPeriodEndTimeMs:
          type: integer
          format: int64
        raidMember:
          type: array
          items:
            $ref: '#/components/schemas/RaidMember'
        simEnabled:
          type: boolean
        encounterId:
          type: string
        lastEncounterIdPlayerParticipated:
          type: string
        currentEncounterPointsScored:
          type: integer
          format: int32
        guildRewardScore:
          type: integer
          format: int64
        ineligibleMemberId:
          type: array
          items:
            type: string
        claimedImmediateRewards:
          type: array
          items:
            type: integer
            format: int32
        cachedRewards:
          $ref: '#/components/schemas/CachedRaidRewards'
    GuildRaidMember:
      type: object
      properties:
        playerId:
          type: string
        memberProgress:
          type: integer
          format: int64
        memberRank:
          type: integer
          format: int32
    RaidState:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        - type: string
          enum:
            - RaidState_DEFAULT
            - RAIDINPROGRESS
            - RAIDINTALLY
            - RAIDCOMPLETE
            - RAIDEXPIRED
            - RAIDPENDINGCOMPLETE
    RaidMember:
      type: object
      properties:
        playerId:
          type: string
        memberProgress:
          type: integer
          format: int64
        memberRank:
          type: integer
          format: int32
        memberAttempt:
          type: integer
          format: int32
    CachedRaidRewards:
      type: object
      properties:
        rankRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
        immediateRegularRankRewardPreview:
          type: array
          items:
            $ref: '#/components/schemas/RankRewardPreview'
    GuildInventory:
      type: object
      properties:
        currencyItem:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyItem'
        currentDailyLimit:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyItem'
    GuildRaidResult:
      type: object
      properties:
        raidId:
          type: string
        identifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        duration:
          type: integer
          format: int64
        progress:
          type: number
          format: float
        raidMember:
          type: array
          items:
            $ref: '#/components/schemas/RaidMember'
        endTime:
          type: integer
          format: int64
        outcome:
          $ref: '#/components/schemas/RaidOutcome'
        encounterProgress:
          type: array
          items:
            type: integer
            format: int64
        guildRewardScore:
          type: integer
          format: int64
        cachedRewards:
          $ref: '#/components/schemas/CachedRaidRewards'
    RaidOutcome:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        - type: string
          enum:
            - RAIDOUTCOMEUNDEFINED
            - RAIDOUTCOMEWIN
            - RAIDOUTCOMEEXPIRED
            - RAIDOUTCOMEINPROGRESS
            - RAIDOUTCOMEABANDONED
            - RAIDOUTCOMESIMMED
    GuildProgress:
      type: object
      properties:
        raidProgress:
          type: array
          items:
            $ref: '#/components/schemas/GuildRaidProgress'
    GuildRaidProgress:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        progress:
          $ref: '#/components/schemas/CampaignElementProgress'
        winCount:
          type: integer
          format: int32
    TerritoryBattleStatus:
      type: object
      properties:
        instanceId:
          type: string
        definitionId:
          type: string
        conflictZoneStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryConflictZoneStatus'
        strikeZoneStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryStrikeZoneStatus'
        reconZoneStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryReconZoneStatus'
        playerStatus:
          $ref: '#/components/schemas/TerritoryBattlePlayerStatus'
        currentRound:
          type: integer
          format: int32
        currentRoundEndTime:
          type: integer
          format: int64
        channelId:
          type: string
        covertZoneStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryCovertZoneStatus'
        currentStat:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryMapStat'
        lastCommandNotificationTime:
          type: integer
          format: int64
        mapCompletedEarly:
          type: boolean
        selected:
          type: boolean
    TerritoryConflictZoneStatus:
      type: object
      properties:
        zoneStatus:
          $ref: '#/components/schemas/TerritoryZoneStatus'
    TerritoryZoneStatus:
      type: object
      properties:
        zoneId:
          type: string
        zoneState:
          $ref: '#/components/schemas/TerritoryZoneState'
        score:
          type: integer
          format: int64
        channelId:
          type: string
        commandMessage:
          type: string
        commandState:
          $ref: '#/components/schemas/TerritoryZoneCommandState'
    TerritoryZoneState:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - TerritoryZoneState_DEFAULT
            - ZONELOCKED
            - ZONEACTIVE
            - ZONEOPEN
            - ZONECOMPLETED
    TerritoryZoneCommandState:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - TerritoryZoneCommandState_DEFAULT
            - NOCOMMAND
            - FOCUSED
            - IGNORED
    TerritoryStrikeZoneStatus:
      type: object
      properties:
        playersParticipated:
          type: integer
          format: int32
        zoneStatus:
          $ref: '#/components/schemas/TerritoryZoneStatus'
    TerritoryReconZoneStatus:
      type: object
      properties:
        zoneStatus:
          $ref: '#/components/schemas/TerritoryZoneStatus'
        platoon:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryReconZonePlatoon'
    TerritoryReconZonePlatoon:
      type: object
      properties:
        id:
          type: string
        squad:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryReconZoneSquad'
    TerritoryReconZoneSquad:
      type: object
      properties:
        id:
          type: string
        unit:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryReconZoneUnit'
    TerritoryReconZoneUnit:
      type: object
      properties:
        unitIdentifier:
          type: string
        level:
          type: integer
          format: int32
        memberId:
          type: string
        tier:
          $ref: '#/components/schemas/UnitTier'
        unitRelicTier:
          $ref: '#/components/schemas/RelicTier'
    TerritoryBattlePlayerStatus:
      type: object
      properties:
        zoneStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryPlayerZoneStatus'
        unitStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryPlayerUnitStatus'
    TerritoryPlayerZoneStatus:
      type: object
      properties:
        zoneId:
          type: string
        attempt:
          type: integer
          format: int32
    TerritoryPlayerUnitStatus:
      type: object
      properties:
        unitId:
          type: string
        deployedZoneId:
          type: string
    TerritoryCovertZoneStatus:
      type: object
      properties:
        zoneStatus:
          $ref: '#/components/schemas/TerritoryZoneStatus'
        playersParticipated:
          type: integer
          format: int32
        successfulAttempts:
          type: integer
          format: int32
    TerritoryMapStat:
      type: object
      properties:
        mapStatId:
          type: string
        playerStat:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryPlayerStat'
    TerritoryPlayerStat:
      type: object
      properties:
        memberId:
          type: string
        score:
          type: integer
          format: int64
        covertZoneResult:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryStatCovertZoneResult'
    TerritoryStatCovertZoneResult:
      type: object
      properties:
        covertZoneId:
          type: string
        result:
          $ref: '#/components/schemas/TerritoryCovertMissionResult'
    TerritoryCovertMissionResult:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
        - type: string
          enum:
            - UNATTEMPTED
            - ATTEMPTEDFAILED
            - ATTEMPTEDSUCCEEDED
    TerritoryBattleResult:
      type: object
      properties:
        instanceId:
          type: string
        definitionId:
          type: string
        endTime:
          type: integer
          format: int64
        totalStars:
          type: integer
          format: int64
        finalStat:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryMapStat'
    TerritoryWarStatus:
      type: object
      properties:
        instanceId:
          type: string
        definitionId:
          type: string
        currentRound:
          type: integer
          format: int32
        currentRoundEndTime:
          type: integer
          format: int64
        channelId:
          type: string
        homeGuild:
          $ref: '#/components/schemas/TerritoryWarGuildStatus'
        awayGuild:
          $ref: '#/components/schemas/TerritoryWarGuildStatus'
        playerStatus:
          $ref: '#/components/schemas/TerritoryWarPlayerStatus'
        currentStat:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryMapStat'
        optedInMemberId:
          type: array
          items:
            type: string
        optedInMember:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryWarParticipant'
        excludedFromWar:
          type: boolean
        hasReportedEnemyGuild:
          type: boolean
        lastCommandNotificationTime:
          type: integer
          format: int64
        mapCompletedEarly:
          type: boolean
    TerritoryWarGuildStatus:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/TerritoryGuildProfile'
        conflictStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryWarConflictZoneStatus'
        reconStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryReconZoneStatus'
    TerritoryGuildProfile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        logoBackground:
          type: string
        bannerColorId:
          type: string
        bannerLogoId:
          type: string
        guildGalacticPower:
          type: integer
          format: int64
    TerritoryWarConflictZoneStatus:
      type: object
      properties:
        zoneStatus:
          $ref: '#/components/schemas/TerritoryZoneStatus'
        squadCapacity:
          type: integer
          format: int32
        warSquad:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryWarSquad'
        squadCount:
          type: integer
          format: int32
        defeatedSquadCount:
          type: integer
          format: int32
    TerritoryWarSquad:
      type: object
      properties:
        playerId:
          type: string
        playerName:
          type: string
        power:
          type: integer
          format: int32
        squad:
          $ref: '#/components/schemas/Squad'
        squadId:
          type: string
        squadStatus:
          $ref: '#/components/schemas/TerritoryWarSquadStatus'
        lockName:
          type: string
        successfulDefends:
          type: integer
          format: int32
        crewInfo:
          type: array
          items:
            $ref: '#/components/schemas/UnitTierSummary'
    TerritoryWarSquadStatus:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - TerritoryWarSquadStatus_DEFAULT
            - SQUADAVAILABLE
            - SQUADLOCKED
            - SQUADDEFEATED
    UnitTierSummary:
      type: object
      properties:
        baseId:
          type: string
        tier:
          $ref: '#/components/schemas/UnitTier'
        unitRelicTier:
          $ref: '#/components/schemas/RelicTier'
    TerritoryWarPlayerStatus:
      type: object
      properties:
        unitStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryPlayerUnitStatus'
        warRoster:
          type: array
          items:
            $ref: '#/components/schemas/UnitBattleStat'
        datacronRoster:
          type: array
          items:
            $ref: '#/components/schemas/DatacronBattleStat'
        datacronStatus:
          type: array
          items:
            $ref: '#/components/schemas/TerritoryPlayerDatacronStatus'
    TerritoryPlayerDatacronStatus:
      type: object
      properties:
        datacronId:
          type: string
        deployedZoneId:
          type: string
    TerritoryWarParticipant:
      type: object
      properties:
        memberId:
          type: string
        joinTime:
          type: integer
          format: int64
        eligible:
          type: boolean
        power:
          type: integer
          format: int32
    RoomData:
      type: object
      properties:
        roomId:
          type: string
        type:
          $ref: '#/components/schemas/RoomType'
        name:
          type: string
        topic:
          type: string
        creationTime:
          type: integer
          format: int64
        ownerId:
          type: string
    RoomType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        - type: string
          enum:
            - RoomType_DEFAULT
            - GUILDDEFAULT
            - GUILDCHAT
            - GUILDCHATOFFICER
            - PLAYERDIRECTCHAT
            - PLAYERGROUPCHAT
    GuildStat:
      type: object
      properties:
        id:
          type: string
        value:
          type: integer
          format: int64
    TerritoryWarResult:
      type: object
      properties:
        territoryWarId:
          type: string
        score:
          type: integer
          format: int64
        power:
          type: integer
          format: int32
        opponentScore:
          type: integer
          format: int64
        endTimeSeconds:
          type: integer
          format: int64
    GuildRaidPointsSummary:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/CampaignElementIdentifier'
        totalPoints:
          type: integer
          format: int64
    GuildLeaderboard:
      type: object
      properties:
        guild:
          type: array
          items:
            $ref: '#/components/schemas/GuildProfile'
        resetTimestamp:
          type: integer
          format: int64
        leaderboardId:
          $ref: '#/components/schemas/GuildLeaderboardId'
    GuildLeaderboardId:
      type: object
      properties:
        leaderboardType:
          $ref: '#/components/schemas/GuildLeaderboardType'
        defId:
          type: string
        monthOffset:
          type: integer
          format: int32
    GuildLeaderboardType:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        - type: string
          enum:
            - GuildLeaderboardType_DEFAULT
            - GUILDRAIDALLCOMPPTS
            - GUILDRAIDCOMPPTS
            - GUILDGALACTICPOWER
            - GUILDTERRITORYBATTLESTARS
            - GUILDTERRITORYWAROPPONENTGALACTICPOWER
            - GUILDRAIDHIGHWATERMARK
    LeaderboardPlayer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        level:
          type: integer
          format: int32
        guild:
          $ref: '#/components/schemas/LeaderboardGuild'
        isFake:
          type: boolean
        pvpStatus:
          $ref: '#/components/schemas/LeaderboardStatus'
        squadUnit:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
        title:
          type: string
        power:
          type: integer
          format: int32
        portrait:
          type: string
        seasonsLifetimeScore:
          type: integer
          format: int64
        seasonLeagueId:
          type: string
        playerRating:
          $ref: '#/components/schemas/PlayerRating'
    LeaderboardGuild:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        bannerColorId:
          type: string
        bannerLogoId:
          type: string
        guildTypeId:
          type: string
    LeaderboardStatus:
      type: object
      properties:
        rank:
          type: integer
          format: int32
        rankDelta:
          type: integer
          format: int32
        score:
          type: integer
          format: int32
        scoreDelta:
          type: integer
          format: int32
    PlayerRating:
      type: object
      properties:
        playerSkillRating:
          $ref: '#/components/schemas/PlayerSkillRating'
        playerRankStatus:
          $ref: '#/components/schemas/PlayerRankStatus'
    PlayerSkillRating:
      type: object
      properties:
        skillRating:
          type: integer
          format: int32
    PlayerRankStatus:
      type: object
      properties:
        leagueId:
          type: string
        divisionId:
          type: integer
          format: int32
    ConfigEntry:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ClientQualityData:
      type: object
      properties:
        performanceLevel:
          $ref: '#/components/schemas/PerformanceLevel'
        memoryLevel:
          $ref: '#/components/schemas/MemoryLevel'
        gcActivityLevel:
          $ref: '#/components/schemas/GcActivityLevel'
        vfxAllocationLevel:
          $ref: '#/components/schemas/VfxAllocationLevel'
        flag:
          type: array
          items:
            type: string
    PerformanceLevel:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - PerformanceLevel_DEFAULT
            - PERFORMANCELOW
            - PERFORMANCEMEDIUM
            - PERFORMANCEHIGH
    MemoryLevel:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - MemoryLevel_DEFAULT
            - MEMORYLOW
            - MEMORYMEDIUM
            - MEMORYHIGH
    GcActivityLevel:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - GcActivityLevel_DEFAULT
            - GCACTIVITYLOW
            - GCACTIVITYMEDIUM
            - GCACTIVITYHIGH
    VfxAllocationLevel:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - VfxAllocationLevel_DEFAULT
            - VFXONDEMAND
            - VFXPRELOAD
            - VFXPRELOADANDALLOCATE
    ClientCacheEntry:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/ClientCacheDomain'
        version:
          type: integer
          format: int32
    ClientCacheDomain:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        - type: string
          enum:
            - ClientCacheDomain_DEFAULT
            - ASSETS
            - GAMEDATA
            - PLAYERPREFS
            - LOCALIZATION
    EADPParameters:
      type: object
      properties:
        eadpBaseUrl:
          type: string
        eaMobileClientId:
          type: string
        eadpBaseUrlClient:
          type: string
    PlayerProfileStat:
      type: object
      properties:
        nameKey:
          type: string
        versionKey:
          type: string
        value:
          type: integer
          format: int64
        index:
          type: integer
          format: int32
    PlayerPvpProfile:
      type: object
      properties:
        tab:
          $ref: '#/components/schemas/PlayerProfileTab'
        rank:
          type: integer
          format: int32
        squad:
          $ref: '#/components/schemas/Squad'
        eventId:
          type: string
    PlayerProfileTab:
      oneOf:
        - type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        - type: string
          enum:
            - PlayerProfileTab_DEFAULT
            - PROFILEPVPCHARACTER
            - PROFILEPVPSHIP
            - PROFILEPVPTOURNAMENT
    PlayerTitle:
      type: object
      properties:
        id:
          type: string
    PlayerPortrait:
      type: object
      properties:
        id:
          type: string
    Datacron:
      type: object
      properties:
        id:
          type: string
        setId:
          type: integer
          format: int32
        templateId:
          type: string
        tag:
          type: array
          items:
            type: string
        affix:
          type: array
          items:
            $ref: '#/components/schemas/DatacronAffix'
        locked:
          type: boolean
        rerollIndex:
          type: integer
          format: int32
        rerollOption:
          type: array
          items:
            $ref: '#/components/schemas/DatacronAffix'
        rerollCount:
          type: integer
          format: int32
  responses:
    errorResponse:
      description: error response
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
            additionalProperties: false
    successResponse:
      description: successful response
      content:
        application/json:
          schema:
            type: object
